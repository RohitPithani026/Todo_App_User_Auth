{"version":3,"sources":["../node_modules/balanced-match/index.js","../node_modules/brace-expansion/index.js","../src/commands/add.ts","../src/utils/get-config.ts","../src/utils/resolve-import.ts","../src/utils/get-package-manager.ts","../src/utils/logger.ts","../src/utils/handle-error.ts","../src/utils/registry/index.ts","../src/utils/registry/schema.ts","../src/utils/transformers/index.ts","../src/utils/transformers/transform-css-vars.ts","../src/utils/transformers/transform-import.ts","../src/utils/transformers/transform-jsx.ts","../src/utils/transformers/transform-rsc.ts","../src/utils/transformers/transform-tw-prefix.ts","../src/commands/diff.ts","../src/commands/init.ts","../src/utils/get-project-info.ts","../src/utils/templates.ts","../src/commands/registry.ts","../node_modules/rimraf/src/opt-arg.ts","../node_modules/rimraf/src/path-arg.ts","../node_modules/rimraf/src/platform.ts","../node_modules/minimatch/src/index.ts","../node_modules/minimatch/src/assert-valid-pattern.ts","../node_modules/minimatch/src/brace-expressions.ts","../node_modules/minimatch/src/unescape.ts","../node_modules/minimatch/src/ast.ts","../node_modules/minimatch/src/escape.ts","../node_modules/path-scurry/node_modules/lru-cache/src/index.ts","../node_modules/path-scurry/src/index.ts","../node_modules/path-scurry/node_modules/minipass/src/index.ts","../node_modules/glob/src/glob.ts","../node_modules/glob/src/pattern.ts","../node_modules/minipass/index.mjs","../node_modules/glob/src/ignore.ts","../node_modules/glob/src/processor.ts","../node_modules/glob/src/walker.ts","../node_modules/glob/src/has-magic.ts","../node_modules/glob/src/index.ts","../node_modules/rimraf/src/fs.ts","../node_modules/rimraf/src/rimraf-posix.ts","../node_modules/rimraf/src/readdir-or-error.ts","../node_modules/rimraf/src/ignore-enoent.ts","../node_modules/rimraf/src/rimraf-windows.ts","../node_modules/rimraf/src/fix-eperm.ts","../node_modules/rimraf/src/retry-busy.ts","../node_modules/rimraf/src/rimraf-move-remove.ts","../node_modules/rimraf/src/default-tmp.ts","../node_modules/rimraf/src/rimraf-manual.ts","../node_modules/rimraf/src/rimraf-native.ts","../node_modules/rimraf/src/use-native.ts","../node_modules/rimraf/src/index.ts","../src/index.ts","../src/utils/get-package-info.ts"],"sourcesContent":["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","import { existsSync, promises as fs } from \"fs\";\nimport path from \"path\";\nimport { getConfig } from \"@/src/utils/get-config\";\nimport { getPackageManager } from \"@/src/utils/get-package-manager\";\nimport { handleError } from \"@/src/utils/handle-error\";\nimport { logger } from \"@/src/utils/logger\";\nimport {\n  fetchTree,\n  getItemTargetPath,\n  getRegistryBaseColor,\n  getRegistryIndex,\n  resolveTree,\n  setBaseUrl,\n  getBaseUrl,\n} from \"@/src/utils/registry\";\nimport { transform } from \"@/src/utils/transformers\";\nimport chalk from \"chalk\";\nimport { Command } from \"commander\";\nimport { execa } from \"execa\";\nimport ora from \"ora\";\nimport prompts from \"prompts\";\nimport { z } from \"zod\";\n\nconst addOptionsSchema = z.object({\n  components: z.array(z.string()).optional(),\n  yes: z.boolean(),\n  overwrite: z.boolean(),\n  cwd: z.string(),\n  all: z.boolean(),\n  path: z.string().optional(),\n});\n\nexport const add = new Command()\n  .name(\"add\")\n  .description(\"add a component to your project\")\n  .argument(\"[components...]\", \"the components to add\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", true)\n  .option(\"-o, --overwrite\", \"overwrite existing files.\", false)\n  .option(\"-r, --registry <registry>\", \"the registry to use.\", \"shadcn\")\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .option(\"-a, --all\", \"add all available components\", false)\n  .option(\"-p, --path <path>\", \"the path to add the component to.\")\n  .option(\"-t, --type <type>\", \"the type of component to add. (ui, component, example). (default: ui)\", \"ui\")\n  .action(async (components, opts) => {\n    const {registry: registryName, type} = opts;\n    try {\n      if (type === 'page' && !opts.path) {\n        const response = await prompts({\n            type: 'text',\n            name: 'path',\n            initial: 'src/app',\n            message: 'Enter the path where the page component should be added:',\n            validate: value => value.trim() === '' ? `Path can't be empty.` : true\n        });\n    \n        if (response.path) {\n            opts.path = response.path; // Update the opts with the provided path\n        } else {\n            logger.error('Path is required for page components. Exiting.');\n            process.exit(1);\n        }\n    }\n      const options = addOptionsSchema.parse({\n        components,\n        ...opts,\n      });\n\n      const cwd = path.resolve(options.cwd);\n\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`);\n        process.exit(1);\n      }\n\n      const config = await getConfig(cwd);\n      if (!config) {\n        logger.warn(\n          `Configuration is missing. Please run ${chalk.green(\n            `init`\n          )} to create a components.json file.`\n        );\n        process.exit(1);\n      }\n\n      // check if any  registries are defined. If so we let the user select which registry to use to set the base url. If not we use the default url\n      if (config.registries?.length && config.registries.length > 1) {\n        // check if a registryName is defined. If so we set the base url to the selected registry from the config file. In case the registryName is not defined we let the user select the registry to use\n        if (registryName) {\n          const registry = config.registries.find(\n            (registry) => registry.name === registryName\n          );\n          if (!registry) {\n            logger.error(\n              `The registry ${registryName} does not exist. Please try again.`\n            );\n            process.exit(1);\n          }\n          setBaseUrl(registry.baseUrl);\n        } else {\n          const { registry } = await prompts({\n            type: \"select\",\n            name: \"registry\",\n            message: \"Select a registry\",\n            choices: config.registries.map((registry) => ({\n              title: registry.name,\n              value: registry.baseUrl,\n            })),\n          });\n          if (!registry) {\n            logger.error(`No registry selected. Exiting.`);\n            process.exit(1);\n          }\n          setBaseUrl(registry);\n        }\n      }\n      const registryIndex = await getRegistryIndex();\n      let selectedComponents = options.all\n        ? registryIndex.map((entry) => entry.name)\n        : options.components;\n      if (!options.components?.length && !options.all) {\n        const { components } = await prompts({\n          type: \"multiselect\",\n          name: \"components\",\n          message: \"Which components would you like to add?\",\n          hint: \"Space to select. A to toggle all. Enter to submit.\",\n          instructions: false,\n          choices: registryIndex\n          .filter((entry) => entry.type === `components:${type}`)\n          .map((entry) => ({\n            title: entry.name,\n            value: entry.name,\n            selected: options.all\n              ? true\n              : options.components?.includes(entry.name),\n          })),\n        });\n        selectedComponents = components;\n      }\n\n      if (!selectedComponents?.length) {\n        logger.warn(\"No components selected. Exiting.\");\n        process.exit(0);\n      }\n      let registryDependencies: any[] = [];\n      // We add every component registryDependencies to the registryDependencies array\n      const addRegistryDependencies = async (dependencies: string[]) => {\n        let registryDependencyName: string[] = []\n        for (const dependency of dependencies) {\n          // the dependency name needs to be parsed: example: components/ui/form => form\n          const dependencyName = dependency.split('/').pop();\n          if (dependencyName && !selectedComponents.includes(dependencyName)) {\n            // We don't want to add the same dependency multiple times\n            if (!registryDependencyName.includes(dependencyName)) {\n              registryDependencyName.push(dependencyName);\n            }\n          }\n          const tree = await resolveTree(registryIndex, registryDependencyName);\n          registryDependencies = await fetchTree(config.style, tree);\n        }\n      };\n      for (const component of registryIndex) {\n        if (selectedComponents.includes(component.name)) {\n          if (component.registryDependencies) {\n            await addRegistryDependencies(component.registryDependencies);\n          }\n        }\n      }\n\n      const tree = await resolveTree(registryIndex, selectedComponents);\n      const payload = await fetchTree(config.style, tree);\n      const baseColor = await getRegistryBaseColor(config.tailwind.baseColor);\n\n      if (!payload.length) {\n        logger.warn(\"Selected components not found. Exiting.\");\n        process.exit(0);\n      }\n\n      if (!options.yes) {\n        const { proceed } = await prompts({\n          type: \"confirm\",\n          name: \"proceed\",\n          message: `Ready to install components and dependencies. Proceed?`,\n          initial: true,\n        });\n\n        if (!proceed) {\n          process.exit(0);\n        }\n      }\n\n      const spinner = ora(`Installing components...`).start();\n      // If we have registryDependencies we install them first\n      for (const item of registryDependencies) {\n        spinner.text = `Installing ${item.name}...`;\n        const targetDir = await getItemTargetPath(\n          config,\n          item,\n          undefined\n        );\n\n        if (!targetDir) {\n          continue;\n        }\n\n        if (!existsSync(targetDir)) {\n          await fs.mkdir(targetDir, { recursive: true });\n        }\n\n        const existingComponent = item.files.filter((file: any) =>\n          existsSync(path.resolve(targetDir, file.name))\n        );\n\n        if (existingComponent.length && !options.overwrite) {\n          if (registryDependencies.includes(item.name)) {\n            spinner.stop();\n            const { overwrite } = await prompts({\n              type: \"confirm\",\n              name: \"overwrite\",\n              message: `Component ${item.name} already exists. Would you like to overwrite?`,\n              initial: false,\n            });\n\n            if (!overwrite) {\n              logger.info(\n                `Skipped ${item.name}. To overwrite, run with the ${chalk.green(\n                  \"--overwrite\"\n                )} flag.`\n              );\n              continue;\n            }\n\n            spinner.start(`Installing ${item.name}...`);\n          } else {\n            continue;\n          }\n        }\n\n        for (const file of item.files) {\n          let filePath = path.resolve(targetDir, file.path? file.path : file.name);\n          const directory = path.dirname(filePath);\n\n          // Create the directory if it does not exist.\n          await fs.mkdir(directory, { recursive: true });\n\n          // Run transformers.\n          const content = await transform({\n            filename: file.name,\n            raw: file.content,\n            config,\n            baseColor,\n          });\n\n          if (!config.tsx) {\n            filePath = filePath.replace(/\\.tsx$/, \".jsx\");\n            filePath = filePath.replace(/\\.ts$/, \".js\");\n          }\n\n          await fs.writeFile(filePath, content);\n        }\n\n        const packageManager = await getPackageManager(cwd);\n\n        // Install dependencies.\n        if (item.dependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              ...item.dependencies,\n            ],\n            {\n              cwd,\n            }\n          );\n        }\n\n        // Install devDependencies.\n        if (item.devDependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              \"-D\",\n              ...item.devDependencies,\n            ],\n            {\n              cwd,\n            }\n          );\n        }\n\n      }\n      for (const item of payload) {\n        spinner.text = `Installing ${item.name}...`;\n        const targetDir = await getItemTargetPath(\n          config,\n          item,\n          options.path ? path.resolve(cwd, options.path) : undefined\n        );\n\n        if (!targetDir) {\n          continue;\n        }\n\n        if (!existsSync(targetDir)) {\n          await fs.mkdir(targetDir, { recursive: true });\n        }\n\n        const existingComponent = item.files.filter((file) =>\n          existsSync(path.resolve(targetDir, file.name))\n        );\n\n        if (existingComponent.length && !options.overwrite) {\n          if (selectedComponents.includes(item.name)) {\n            spinner.stop();\n            const { overwrite } = await prompts({\n              type: \"confirm\",\n              name: \"overwrite\",\n              message: `Component ${item.name} already exists. Would you like to overwrite?`,\n              initial: false,\n            });\n\n            if (!overwrite) {\n              logger.info(\n                `Skipped ${item.name}. To overwrite, run with the ${chalk.green(\n                  \"--overwrite\"\n                )} flag.`\n              );\n              continue;\n            }\n\n            spinner.start(`Installing ${item.name}...`);\n          } else {\n            continue;\n          }\n        }\n\n        for (const file of item.files) {\n          let filePath = path.resolve(targetDir, file.path? file.path : file.name);\n          const directory = path.dirname(filePath);\n\n          // Create the directory if it does not exist.\n          await fs.mkdir(directory, { recursive: true });\n\n          // Run transformers.\n          const content = await transform({\n            filename: file.name,\n            raw: file.content,\n            config,\n            baseColor,\n          });\n\n          if (!config.tsx) {\n            filePath = filePath.replace(/\\.tsx$/, \".jsx\");\n            filePath = filePath.replace(/\\.ts$/, \".js\");\n          }\n\n          await fs.writeFile(filePath, content);\n        }\n\n        const packageManager = await getPackageManager(cwd);\n\n        // Install dependencies.\n        if (item.dependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              ...item.dependencies,\n            ],\n            {\n              cwd,\n            }\n          );\n        }\n\n        // Install devDependencies.\n        if (item.devDependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === \"npm\" ? \"install\" : \"add\",\n              \"-D\",\n              ...item.devDependencies,\n            ],\n            {\n              cwd,\n            }\n          );\n        }\n\n      }\n      spinner.succeed(`Done.`);\n    } catch (error) {\n      console.log(error);\n      handleError(error);\n    }\n  });\n","import path from \"path\"\nimport { resolveImport } from \"@/src/utils/resolve-import\"\nimport { cosmiconfig } from \"cosmiconfig\"\nimport { loadConfig } from \"tsconfig-paths\"\nimport { z } from \"zod\"\n\nexport const DEFAULT_STYLE = \"default\"\nexport const DEFAULT_COMPONENTS = \"@/components\"\nexport const DEFAULT_UTILS = \"@/lib/utils\"\nexport const DEFAULT_TAILWIND_CSS = \"app/globals.css\"\nexport const DEFAULT_TAILWIND_CONFIG = \"tailwind.config.js\"\nexport const DEFAULT_TAILWIND_BASE_COLOR = \"slate\"\n\n// TODO: Figure out if we want to support all cosmiconfig formats.\n// A simple components.json file would be nice.\nconst explorer = cosmiconfig(\"components\", {\n  searchPlaces: [\"components.json\"],\n})\n\nconst registrySchema = z.object({\n  name: z.string(),\n  baseUrl: z.string().url()\n});\n\nexport const rawConfigSchema = z\n  .object({\n    $schema: z.string().optional(),\n    style: z.string(),\n    rsc: z.coerce.boolean().default(false),\n    tsx: z.coerce.boolean().default(true),\n    tailwind: z.object({\n      config: z.string(),\n      css: z.string(),\n      baseColor: z.string(),\n      cssVariables: z.boolean().default(true),\n      prefix: z.string().default(\"\").optional(),\n    }),\n    aliases: z.object({\n      components: z.string(),\n      utils: z.string(),\n      ui: z.string().optional(),\n    }),\n    registries: z.array(registrySchema).optional()\n  })\n  .strict()\n\n\nexport type RawConfig = z.infer<typeof rawConfigSchema>\n\nexport const configSchema = rawConfigSchema.extend({\n  resolvedPaths: z.object({\n    tailwindConfig: z.string(),\n    tailwindCss: z.string(),\n    utils: z.string(),\n    components: z.string(),\n    ui: z.string(),\n  }),\n})\n\nexport type Config = z.infer<typeof configSchema>\n\nexport async function getConfig(cwd: string) {\n  const config = await getRawConfig(cwd)\n\n  if (!config) {\n    return null\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function resolveConfigPaths(cwd: string, config: RawConfig) {\n  // Read tsconfig.json.\n  const tsConfig = await loadConfig(cwd)\n\n  if (tsConfig.resultType === \"failed\") {\n    throw new Error(\n      `Failed to load ${config.tsx ? \"tsconfig\" : \"jsconfig\"}.json. ${\n        tsConfig.message ?? \"\"\n      }`.trim()\n    )\n  }\n\n  return configSchema.parse({\n    ...config,\n    resolvedPaths: {\n      tailwindConfig: path.resolve(cwd, config.tailwind.config),\n      tailwindCss: path.resolve(cwd, config.tailwind.css),\n      utils: await resolveImport(config.aliases[\"utils\"], tsConfig),\n      components: await resolveImport(config.aliases[\"components\"], tsConfig),\n      ui: config.aliases[\"ui\"]\n        ? await resolveImport(config.aliases[\"ui\"], tsConfig)\n        : await resolveImport(config.aliases[\"components\"], tsConfig),\n    },\n  })\n}\n\nexport async function getRawConfig(cwd: string): Promise<RawConfig | null> {\n  try {\n    const configResult = await explorer.search(cwd)\n    if (!configResult) {\n      return null\n    }\n\n    return rawConfigSchema.parse(configResult.config)\n  } catch (error) {\n    throw new Error(`Invalid configuration found in ${cwd}/components.json.`)\n  }\n}\n","import { createMatchPath, type ConfigLoaderSuccessResult } from \"tsconfig-paths\"\n\nexport async function resolveImport(\n  importPath: string,\n  config: Pick<ConfigLoaderSuccessResult, \"absoluteBaseUrl\" | \"paths\">\n) {\n  return createMatchPath(config.absoluteBaseUrl, config.paths)(\n    importPath,\n    undefined,\n    () => true,\n    [\".ts\", \".tsx\"]\n  )\n}\n","import { detect } from \"@antfu/ni\"\n\nexport async function getPackageManager(\n  targetDir: string\n): Promise<\"yarn\" | \"pnpm\" | \"bun\" | \"npm\"> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === \"yarn@berry\") return \"yarn\"\n  if (packageManager === \"pnpm@6\") return \"pnpm\"\n  if (packageManager === \"bun\") return \"bun\"\n\n  return packageManager ?? \"npm\"\n}\n","import chalk from \"chalk\"\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n  break() {\n    console.log(\"\")\n  },\n}\n","import { logger } from \"@/src/utils/logger\"\n\nexport function handleError(error: unknown) {\n  if (typeof error === \"string\") {\n    logger.error(error)\n    process.exit(1)\n  }\n\n  if (error instanceof Error) {\n    logger.error(error.message)\n    process.exit(1)\n  }\n\n  logger.error(\"Something went wrong. Please try again.\")\n  process.exit(1)\n}\n","import path from \"path\";\nimport { Config } from \"@/src/utils/get-config\";\nimport {\n  registryBaseColorSchema,\n  registryIndexSchema,\n  registryItemWithContentSchema,\n  registryWithContentSchema,\n  stylesSchema,\n} from \"@/src/utils/registry/schema\";\nimport { HttpsProxyAgent } from \"https-proxy-agent\";\nimport fetch from \"node-fetch\";\nimport { z } from \"zod\";\n\n\nlet baseUrl = process.env.COMPONENTS_REGISTRY_URL ?? \"https://ui.shadcn.com\";\nconst agent = process.env.https_proxy\n  ? new HttpsProxyAgent(process.env.https_proxy)\n  : undefined;\n\nexport function setBaseUrl(newBaseUrl: string) {\n  baseUrl = newBaseUrl;\n}\n\nexport function getBaseUrl() {\n  return baseUrl;\n}\nexport async function getRegistryIndex() {\n  try {\n    const [result] = await fetchRegistry([\"index.json\"]);\n    return registryIndexSchema.parse(result);\n  } catch (error) {\n    throw new Error(`Failed to fetch components from registry.`);\n  }\n}\n\nexport async function getRegistryStyles() {\n  try {\n    const [result] = await fetchRegistry([\"styles/index.json\"]);\n\n    return stylesSchema.parse(result);\n  } catch (error) {\n    throw new Error(`Failed to fetch styles from registry.`);\n  }\n}\n\nexport async function getRegistryBaseColors() {\n  return [\n    {\n      name: \"slate\",\n      label: \"Slate\",\n    },\n    {\n      name: \"gray\",\n      label: \"Gray\",\n    },\n    {\n      name: \"zinc\",\n      label: \"Zinc\",\n    },\n    {\n      name: \"neutral\",\n      label: \"Neutral\",\n    },\n    {\n      name: \"stone\",\n      label: \"Stone\",\n    },\n  ];\n}\n\nexport async function getRegistryBaseColor(baseColor: string) {\n  try {\n    const [result] = await fetchRegistry([`colors/${baseColor}.json`]);\n\n    return registryBaseColorSchema.parse(result);\n  } catch (error) {\n    throw new Error(`Failed to fetch base color from registry.`);\n  }\n}\n\nexport async function resolveTree(\n  index: z.infer<typeof registryIndexSchema>,\n  names: string[]\n) {\n  const tree: z.infer<typeof registryIndexSchema> = [];\n\n  for (const name of names) {\n    const entry = index.find((entry) => entry.name === name);\n\n    if (!entry) {\n      continue;\n    }\n\n    tree.push(entry);\n\n    if (entry.registryDependencies) {\n      const dependencies = await resolveTree(index, entry.registryDependencies);\n      tree.push(...dependencies);\n    }\n  }\n\n  return tree.filter(\n    (component, index, self) =>\n      self.findIndex((c) => c.name === component.name) === index\n  );\n}\n\nexport async function fetchTree(\n  style: string,\n  tree: z.infer<typeof registryIndexSchema>,\n  url: string = baseUrl\n) {\n  try {\n    const paths = tree.map((item) => `styles/${style}/${item.name}.json`);\n    const result = await fetchRegistry(paths);\n\n    return registryWithContentSchema.parse(result);\n  } catch (error) {\n        throw new Error(`Failed to fetch tree from registry.`);\n  }\n}\n\nexport async function getItemTargetPath(\n  config: Config,\n  item: Pick<z.infer<typeof registryItemWithContentSchema>, \"type\">,\n  override?: string\n) {\n  if (override) {\n    return override;\n  }\n\n  if (item.type === \"components:ui\" && config.aliases.ui) {\n    return config.resolvedPaths.ui;\n  }\n  const [parent, type] = item.type.split(\":\");\n  if (!(parent in config.resolvedPaths)) {\n    return null;\n  }\n\n  return path.join(\n    config.resolvedPaths[parent as keyof typeof config.resolvedPaths],\n    type\n  );\n}\n\nasync function fetchRegistry(paths: string[]) {\n  try {\n    const results = await Promise.all(\n      paths.map(async (path) => {\n        const response = await fetch(`${baseUrl}/registry/${path}`, {\n          agent,\n        });\n        return await response.json();\n      })\n    );\n\n    return results;\n  } catch (error) {\n    throw new Error(`Failed to fetch registry from ${baseUrl}.`);\n  }\n}\n","import { z } from \"zod\"\n\n// TODO: Every registry has a schema.\nexport const types = [\"components:ui\", \"components:component\", \"components:example\", \"components:page\", \"components:blocks\"] as const;\n// TODO: Extract this to a shared package.\nexport const typeSchema = z.enum(types);\n\nexport const registryItemSchema = z.object({\n  name: z.string(),\n  dependencies: z.array(z.string()).optional(),\n  devDependencies: z.array(z.string()).optional(),\n  registryDependencies: z.array(z.string()).optional(),\n  files: z.array(z.string()),\n  type: z.enum(types),\n})\n\nexport const registrySchema = z.array(\n  z.object({\n    name: z.string(),\n    dependencies: z.array(z.string()).optional(),\n    devDependencies: z.array(z.string()).optional(),\n    registryDependencies: z.array(z.string()).optional(),\n    files: z.array(z.string()),\n    type: z.enum(types),\n  })\n)\n\nexport type Registry = z.infer<typeof registrySchema>\n\nexport const registryIndexSchema = z.array(registryItemSchema)\n\nexport const registryItemWithContentSchema = registryItemSchema.extend({\n  files: z.array(\n    z.object({\n      name: z.string(),\n      path: z.string().optional(),\n      content: z.string(),\n    })\n  ),\n})\n\nexport const registryWithContentSchema = z.array(registryItemWithContentSchema)\n\nexport const stylesSchema = z.array(\n  z.object({\n    name: z.string(),\n    label: z.string(),\n  })\n)\n\nexport const registryBaseColorSchema = z.object({\n  inlineColors: z.object({\n    light: z.record(z.string(), z.string()),\n    dark: z.record(z.string(), z.string()),\n  }),\n  cssVars: z.object({\n    light: z.record(z.string(), z.string()),\n    dark: z.record(z.string(), z.string()),\n  }),\n  inlineColorsTemplate: z.string(),\n  cssVarsTemplate: z.string(),\n})\n","import { promises as fs } from \"fs\"\nimport { tmpdir } from \"os\"\nimport path from \"path\"\nimport { Config } from \"@/src/utils/get-config\"\nimport { registryBaseColorSchema } from \"@/src/utils/registry/schema\"\nimport { transformCssVars } from \"@/src/utils/transformers/transform-css-vars\"\nimport { transformImport } from \"@/src/utils/transformers/transform-import\"\nimport { transformJsx } from \"@/src/utils/transformers/transform-jsx\"\nimport { transformRsc } from \"@/src/utils/transformers/transform-rsc\"\nimport { Project, ScriptKind, type SourceFile } from \"ts-morph\"\nimport { z } from \"zod\"\n\nimport { transformTwPrefixes } from \"./transform-tw-prefix\"\n\nexport type TransformOpts = {\n  filename: string\n  raw: string\n  config: Config\n  baseColor?: z.infer<typeof registryBaseColorSchema>\n}\n\nexport type Transformer<Output = SourceFile> = (\n  opts: TransformOpts & {\n    sourceFile: SourceFile\n  }\n) => Promise<Output>\n\nconst transformers: Transformer[] = [\n  transformImport,\n  transformRsc,\n  transformCssVars,\n  transformTwPrefixes,\n]\n\nconst project = new Project({\n  compilerOptions: {},\n})\n\nasync function createTempSourceFile(filename: string) {\n  const dir = await fs.mkdtemp(path.join(tmpdir(), \"shadcn-\"))\n  return path.join(dir, filename)\n}\n\nexport async function transform(opts: TransformOpts) {\n  const tempFile = await createTempSourceFile(opts.filename)\n  const sourceFile = project.createSourceFile(tempFile, opts.raw, {\n    scriptKind: ScriptKind.TSX,\n  })\n\n  for (const transformer of transformers) {\n    transformer({ sourceFile, ...opts })\n  }\n\n  return await transformJsx({\n    sourceFile,\n    ...opts,\n  })\n}\n","import { registryBaseColorSchema } from \"@/src/utils/registry/schema\"\nimport { Transformer } from \"@/src/utils/transformers\"\nimport { ScriptKind, SyntaxKind } from \"ts-morph\"\nimport { z } from \"zod\"\n\nexport const transformCssVars: Transformer = async ({\n  sourceFile,\n  config,\n  baseColor,\n}) => {\n  // No transform if using css variables.\n  if (config.tailwind?.cssVariables || !baseColor?.inlineColors) {\n    return sourceFile\n  }\n\n  // Find jsx attributes with the name className.\n  // const openingElements = sourceFile.getDescendantsOfKind(SyntaxKind.JsxElement)\n  // console.log(openingElements)\n  // const jsxAttributes = sourceFile\n  //   .getDescendantsOfKind(SyntaxKind.JsxAttribute)\n  //   .filter((node) => node.getName() === \"className\")\n\n  // for (const jsxAttribute of jsxAttributes) {\n  //   const value = jsxAttribute.getInitializer()?.getText()\n  //   if (value) {\n  //     const valueWithColorMapping = applyColorMapping(\n  //       value.replace(/\"/g, \"\"),\n  //       baseColor.inlineColors\n  //     )\n  //     jsxAttribute.setInitializer(`\"${valueWithColorMapping}\"`)\n  //   }\n  // }\n  sourceFile.getDescendantsOfKind(SyntaxKind.StringLiteral).forEach((node) => {\n    const value = node.getText()\n    if (value) {\n      const valueWithColorMapping = applyColorMapping(\n        value.replace(/\"/g, \"\"),\n        baseColor.inlineColors\n      )\n      node.replaceWithText(`\"${valueWithColorMapping.trim()}\"`)\n    }\n  })\n\n  return sourceFile\n}\n\n// export default function transformer(file: FileInfo, api: API) {\n//   const j = api.jscodeshift.withParser(\"tsx\")\n\n//   // Replace bg-background with \"bg-white dark:bg-slate-950\"\n//   const $j = j(file.source)\n//   return $j\n//     .find(j.JSXAttribute, {\n//       name: {\n//         name: \"className\",\n//       },\n//     })\n//     .forEach((path) => {\n//       const { node } = path\n//       if (node?.value?.type) {\n//         if (node.value.type === \"StringLiteral\") {\n//           node.value.value = applyColorMapping(node.value.value)\n//           console.log(node.value.value)\n//         }\n\n//         if (\n//           node.value.type === \"JSXExpressionContainer\" &&\n//           node.value.expression.type === \"CallExpression\"\n//         ) {\n//           const callee = node.value.expression.callee\n//           if (callee.type === \"Identifier\" && callee.name === \"cn\") {\n//             node.value.expression.arguments.forEach((arg) => {\n//               if (arg.type === \"StringLiteral\") {\n//                 arg.value = applyColorMapping(arg.value)\n//               }\n\n//               if (\n//                 arg.type === \"LogicalExpression\" &&\n//                 arg.right.type === \"StringLiteral\"\n//               ) {\n//                 arg.right.value = applyColorMapping(arg.right.value)\n//               }\n//             })\n//           }\n//         }\n//       }\n//     })\n//     .toSource()\n// }\n\n// // export function splitClassName(input: string): (string | null)[] {\n// //   const parts = input.split(\":\")\n// //   const classNames = parts.map((part) => {\n// //     const match = part.match(/^\\[?(.+)\\]$/)\n// //     if (match) {\n// //       return match[1]\n// //     } else {\n// //       return null\n// //     }\n// //   })\n\n// //   return classNames\n// // }\n\n// Splits a className into variant-name-alpha.\n// eg. hover:bg-primary-100 -> [hover, bg-primary, 100]\nexport function splitClassName(className: string): (string | null)[] {\n  if (!className.includes(\"/\") && !className.includes(\":\")) {\n    return [null, className, null]\n  }\n\n  const parts: (string | null)[] = []\n  // First we split to find the alpha.\n  let [rest, alpha] = className.split(\"/\")\n\n  // Check if rest has a colon.\n  if (!rest.includes(\":\")) {\n    return [null, rest, alpha]\n  }\n\n  // Next we split the rest by the colon.\n  const split = rest.split(\":\")\n\n  // We take the last item from the split as the name.\n  const name = split.pop()\n\n  // We glue back the rest of the split.\n  const variant = split.join(\":\")\n\n  // Finally we push the variant, name and alpha.\n  parts.push(variant ?? null, name ?? null, alpha ?? null)\n\n  return parts\n}\n\nconst PREFIXES = [\"bg-\", \"text-\", \"border-\", \"ring-offset-\", \"ring-\"]\n\nexport function applyColorMapping(\n  input: string,\n  mapping: z.infer<typeof registryBaseColorSchema>[\"inlineColors\"]\n) {\n  // Handle border classes.\n  if (input.includes(\" border \")) {\n    input = input.replace(\" border \", \" border border-border \")\n  }\n\n  // Build color mappings.\n  const classNames = input.split(\" \")\n  const lightMode = new Set<string>()\n  const darkMode = new Set<string>()\n  for (let className of classNames) {\n    const [variant, value, modifier] = splitClassName(className)\n    const prefix = PREFIXES.find((prefix) => value?.startsWith(prefix))\n    if (!prefix) {\n      if (!lightMode.has(className)) {\n        lightMode.add(className)\n      }\n      continue\n    }\n\n    const needle = value?.replace(prefix, \"\")\n    if (needle && needle in mapping.light) {\n      lightMode.add(\n        [variant, `${prefix}${mapping.light[needle]}`]\n          .filter(Boolean)\n          .join(\":\") + (modifier ? `/${modifier}` : \"\")\n      )\n\n      darkMode.add(\n        [\"dark\", variant, `${prefix}${mapping.dark[needle]}`]\n          .filter(Boolean)\n          .join(\":\") + (modifier ? `/${modifier}` : \"\")\n      )\n      continue\n    }\n\n    if (!lightMode.has(className)) {\n      lightMode.add(className)\n    }\n  }\n\n  return [...Array.from(lightMode), ...Array.from(darkMode)].join(\" \").trim()\n}\n","import { Transformer } from \"@/src/utils/transformers\"\n\nexport const transformImport: Transformer = async ({ sourceFile, config }) => {\n  const importDeclarations = sourceFile.getImportDeclarations()\n\n  for (const importDeclaration of importDeclarations) {\n    const moduleSpecifier = importDeclaration.getModuleSpecifierValue()\n\n    // Replace @/registry/[style] with the components alias.\n    if (moduleSpecifier.startsWith(\"@/registry/\")) {\n      if (config.aliases.ui) {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(/^@\\/registry\\/[^/]+\\/ui/, config.aliases.ui)\n        )\n      } else {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(\n            /^@\\/registry\\/[^/]+/,\n            config.aliases.components\n          )\n        )\n      }\n    }\n\n    // Replace `import { cn } from \"@/lib/utils\"`\n    if (moduleSpecifier == \"@/lib/utils\") {\n      const namedImports = importDeclaration.getNamedImports()\n      const cnImport = namedImports.find((i) => i.getName() === \"cn\")\n      if (cnImport) {\n        importDeclaration.setModuleSpecifier(\n          moduleSpecifier.replace(/^@\\/lib\\/utils/, config.aliases.utils)\n        )\n      }\n    }\n  }\n\n  return sourceFile\n}\n","import { type Transformer } from \"@/src/utils/transformers\"\nimport { transformFromAstSync } from \"@babel/core\"\nimport { ParserOptions, parse } from \"@babel/parser\"\n// @ts-ignore\nimport transformTypescript from \"@babel/plugin-transform-typescript\"\nimport * as recast from \"recast\"\n\n// TODO.\n// I'm using recast for the AST here.\n// Figure out if ts-morph AST is compatible with Babel.\n\n// This is a copy of the babel options from recast/parser.\n// The goal here is to tolerate as much syntax as possible.\n// We want to be able to parse any valid tsx code.\n// See https://github.com/benjamn/recast/blob/master/parsers/_babel_options.ts.\nconst PARSE_OPTIONS: ParserOptions = {\n  sourceType: \"module\",\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: [\n    \"asyncGenerators\",\n    \"bigInt\",\n    \"classPrivateMethods\",\n    \"classPrivateProperties\",\n    \"classProperties\",\n    \"classStaticBlock\",\n    \"decimal\",\n    \"decorators-legacy\",\n    \"doExpressions\",\n    \"dynamicImport\",\n    \"exportDefaultFrom\",\n    \"exportNamespaceFrom\",\n    \"functionBind\",\n    \"functionSent\",\n    \"importAssertions\",\n    \"importMeta\",\n    \"nullishCoalescingOperator\",\n    \"numericSeparator\",\n    \"objectRestSpread\",\n    \"optionalCatchBinding\",\n    \"optionalChaining\",\n    [\n      \"pipelineOperator\",\n      {\n        proposal: \"minimal\",\n      },\n    ],\n    [\n      \"recordAndTuple\",\n      {\n        syntaxType: \"hash\",\n      },\n    ],\n    \"throwExpressions\",\n    \"topLevelAwait\",\n    \"v8intrinsic\",\n    \"typescript\",\n    \"jsx\",\n  ],\n}\n\nexport const transformJsx: Transformer<String> = async ({\n  sourceFile,\n  config,\n}) => {\n  const output = sourceFile.getFullText()\n\n  if (config.tsx) {\n    return output\n  }\n\n  const ast = recast.parse(output, {\n    parser: {\n      parse: (code: string) => {\n        return parse(code, PARSE_OPTIONS)\n      },\n    },\n  })\n\n  const result = transformFromAstSync(ast, output, {\n    cloneInputAst: false,\n    code: false,\n    ast: true,\n    plugins: [transformTypescript],\n    configFile: false,\n  })\n\n  if (!result || !result.ast) {\n    throw new Error(\"Failed to transform JSX\")\n  }\n\n  return recast.print(result.ast).code\n}\n","import { Transformer } from \"@/src/utils/transformers\"\nimport { SyntaxKind } from \"ts-morph\"\n\nexport const transformRsc: Transformer = async ({ sourceFile, config }) => {\n  if (config.rsc) {\n    return sourceFile\n  }\n\n  // Remove \"use client\" from the top of the file.\n  const first = sourceFile.getFirstChildByKind(SyntaxKind.ExpressionStatement)\n  if (first?.getText() === `\"use client\"`) {\n    first.remove()\n  }\n\n  return sourceFile\n}\n","import { Transformer } from \"@/src/utils/transformers\"\nimport { SyntaxKind } from \"ts-morph\"\n\nimport { splitClassName } from \"./transform-css-vars\"\n\nexport const transformTwPrefixes: Transformer = async ({\n  sourceFile,\n  config,\n}) => {\n  if (!config.tailwind?.prefix) {\n    return sourceFile\n  }\n\n  // Find the cva function calls.\n  sourceFile\n    .getDescendantsOfKind(SyntaxKind.CallExpression)\n    .filter((node) => node.getExpression().getText() === \"cva\")\n    .forEach((node) => {\n      // cva(base, ...)\n      if (node.getArguments()[0]?.isKind(SyntaxKind.StringLiteral)) {\n        const defaultClassNames = node.getArguments()[0]\n        if (defaultClassNames) {\n          defaultClassNames.replaceWithText(\n            `\"${applyPrefix(\n              defaultClassNames.getText()?.replace(/\"/g, \"\"),\n              config.tailwind.prefix\n            )}\"`\n          )\n        }\n      }\n\n      // cva(..., { variants: { ... } })\n      if (node.getArguments()[1]?.isKind(SyntaxKind.ObjectLiteralExpression)) {\n        node\n          .getArguments()[1]\n          ?.getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .find((node) => node.getName() === \"variants\")\n          ?.getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .forEach((node) => {\n            node\n              .getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n              .forEach((node) => {\n                const classNames = node.getInitializerIfKind(\n                  SyntaxKind.StringLiteral\n                )\n                if (classNames) {\n                  classNames?.replaceWithText(\n                    `\"${applyPrefix(\n                      classNames.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                }\n              })\n          })\n      }\n    })\n\n  // Find all jsx attributes with the name className.\n  sourceFile.getDescendantsOfKind(SyntaxKind.JsxAttribute).forEach((node) => {\n    if (node.getName() === \"className\") {\n      // className=\"...\"\n      if (node.getInitializer()?.isKind(SyntaxKind.StringLiteral)) {\n        const value = node.getInitializer()\n        if (value) {\n          value.replaceWithText(\n            `\"${applyPrefix(\n              value.getText()?.replace(/\"/g, \"\"),\n              config.tailwind.prefix\n            )}\"`\n          )\n        }\n      }\n\n      // className={...}\n      if (node.getInitializer()?.isKind(SyntaxKind.JsxExpression)) {\n        // Check if it's a call to cn().\n        const callExpression = node\n          .getInitializer()\n          ?.getDescendantsOfKind(SyntaxKind.CallExpression)\n          .find((node) => node.getExpression().getText() === \"cn\")\n        if (callExpression) {\n          // Loop through the arguments.\n          callExpression.getArguments().forEach((node) => {\n            if (\n              node.isKind(SyntaxKind.ConditionalExpression) ||\n              node.isKind(SyntaxKind.BinaryExpression)\n            ) {\n              node\n                .getChildrenOfKind(SyntaxKind.StringLiteral)\n                .forEach((node) => {\n                  node.replaceWithText(\n                    `\"${applyPrefix(\n                      node.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                })\n            }\n\n            if (node.isKind(SyntaxKind.StringLiteral)) {\n              node.replaceWithText(\n                `\"${applyPrefix(\n                  node.getText()?.replace(/\"/g, \"\"),\n                  config.tailwind.prefix\n                )}\"`\n              )\n            }\n          })\n        }\n      }\n    }\n\n    // classNames={...}\n    if (node.getName() === \"classNames\") {\n      if (node.getInitializer()?.isKind(SyntaxKind.JsxExpression)) {\n        node\n          .getDescendantsOfKind(SyntaxKind.PropertyAssignment)\n          .forEach((node) => {\n            if (node.getInitializer()?.isKind(SyntaxKind.CallExpression)) {\n              const callExpression = node.getInitializerIfKind(\n                SyntaxKind.CallExpression\n              )\n              if (callExpression) {\n                // Loop through the arguments.\n                callExpression.getArguments().forEach((arg) => {\n                  if (arg.isKind(SyntaxKind.ConditionalExpression)) {\n                    arg\n                      .getChildrenOfKind(SyntaxKind.StringLiteral)\n                      .forEach((node) => {\n                        node.replaceWithText(\n                          `\"${applyPrefix(\n                            node.getText()?.replace(/\"/g, \"\"),\n                            config.tailwind.prefix\n                          )}\"`\n                        )\n                      })\n                  }\n\n                  if (arg.isKind(SyntaxKind.StringLiteral)) {\n                    arg.replaceWithText(\n                      `\"${applyPrefix(\n                        arg.getText()?.replace(/\"/g, \"\"),\n                        config.tailwind.prefix\n                      )}\"`\n                    )\n                  }\n                })\n              }\n            }\n\n            if (node.getInitializer()?.isKind(SyntaxKind.StringLiteral)) {\n              if (node.getName() !== \"variant\") {\n                const classNames = node.getInitializer()\n                if (classNames) {\n                  classNames.replaceWithText(\n                    `\"${applyPrefix(\n                      classNames.getText()?.replace(/\"/g, \"\"),\n                      config.tailwind.prefix\n                    )}\"`\n                  )\n                }\n              }\n            }\n          })\n      }\n    }\n  })\n\n  return sourceFile\n}\n\nexport function applyPrefix(input: string, prefix: string = \"\") {\n  const classNames = input.split(\" \")\n  const prefixed: string[] = []\n  for (let className of classNames) {\n    const [variant, value, modifier] = splitClassName(className)\n    if (variant) {\n      modifier\n        ? prefixed.push(`${variant}:${prefix}${value}/${modifier}`)\n        : prefixed.push(`${variant}:${prefix}${value}`)\n    } else {\n      modifier\n        ? prefixed.push(`${prefix}${value}/${modifier}`)\n        : prefixed.push(`${prefix}${value}`)\n    }\n  }\n  return prefixed.join(\" \")\n}\n\nexport function applyPrefixesCss(css: string, prefix: string) {\n  const lines = css.split(\"\\n\")\n  for (let line of lines) {\n    if (line.includes(\"@apply\")) {\n      const originalTWCls = line.replace(\"@apply\", \"\").trim()\n      const prefixedTwCls = applyPrefix(originalTWCls, prefix)\n      css = css.replace(originalTWCls, prefixedTwCls)\n    }\n  }\n  return css\n}\n","import { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport { Config, getConfig } from \"@/src/utils/get-config\"\nimport { handleError } from \"@/src/utils/handle-error\"\nimport { logger } from \"@/src/utils/logger\"\nimport {\n  fetchTree,\n  getItemTargetPath,\n  getRegistryBaseColor,\n  getRegistryIndex,\n} from \"@/src/utils/registry\"\nimport { registryIndexSchema } from \"@/src/utils/registry/schema\"\nimport { transform } from \"@/src/utils/transformers\"\nimport chalk from \"chalk\"\nimport { Command } from \"commander\"\nimport { diffLines, type Change } from \"diff\"\nimport { z } from \"zod\"\n\nconst updateOptionsSchema = z.object({\n  component: z.string().optional(),\n  yes: z.boolean(),\n  cwd: z.string(),\n  path: z.string().optional(),\n})\n\nexport const diff = new Command()\n  .name(\"diff\")\n  .description(\"check for updates against the registry\")\n  .argument(\"[component]\", \"the component name\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", false)\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (name, opts) => {\n    try {\n      const options = updateOptionsSchema.parse({\n        component: name,\n        ...opts,\n      })\n\n      const cwd = path.resolve(options.cwd)\n\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`)\n        process.exit(1)\n      }\n\n      const config = await getConfig(cwd)\n      if (!config) {\n        logger.warn(\n          `Configuration is missing. Please run ${chalk.green(\n            `init`\n          )} to create a components.json file.`\n        )\n        process.exit(1)\n      }\n\n      const registryIndex = await getRegistryIndex()\n\n      if (!options.component) {\n        const targetDir = config.resolvedPaths.components\n\n        // Find all components that exist in the project.\n        const projectComponents = registryIndex.filter((item) => {\n          for (const file of item.files) {\n            const filePath = path.resolve(targetDir, file)\n            if (existsSync(filePath)) {\n              return true\n            }\n          }\n\n          return false\n        })\n\n        // Check for updates.\n        const componentsWithUpdates = []\n        for (const component of projectComponents) {\n          const changes = await diffComponent(component, config)\n          if (changes.length) {\n            componentsWithUpdates.push({\n              name: component.name,\n              changes,\n            })\n          }\n        }\n\n        if (!componentsWithUpdates.length) {\n          logger.info(\"No updates found.\")\n          process.exit(0)\n        }\n\n        logger.info(\"The following components have updates available:\")\n        for (const component of componentsWithUpdates) {\n          logger.info(`- ${component.name}`)\n          for (const change of component.changes) {\n            logger.info(`  - ${change.filePath}`)\n          }\n        }\n        logger.break()\n        logger.info(\n          `Run ${chalk.green(`diff <component>`)} to see the changes.`\n        )\n        process.exit(0)\n      }\n\n      // Show diff for a single component.\n      const component = registryIndex.find(\n        (item) => item.name === options.component\n      )\n\n      if (!component) {\n        logger.error(\n          `The component ${chalk.green(options.component)} does not exist.`\n        )\n        process.exit(1)\n      }\n\n      const changes = await diffComponent(component, config)\n\n      if (!changes.length) {\n        logger.info(`No updates found for ${options.component}.`)\n        process.exit(0)\n      }\n\n      for (const change of changes) {\n        logger.info(`- ${change.filePath}`)\n        await printDiff(change.patch)\n        logger.info(\"\")\n      }\n    } catch (error) {\n      handleError(error)\n    }\n  })\n\nasync function diffComponent(\n  component: z.infer<typeof registryIndexSchema>[number],\n  config: Config\n) {\n  const payload = await fetchTree(config.style, [component])\n  const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n\n  const changes = []\n\n  for (const item of payload) {\n    const targetDir = await getItemTargetPath(config, item)\n\n    if (!targetDir) {\n      continue\n    }\n\n    for (const file of item.files) {\n      const filePath = path.resolve(targetDir, file.name)\n\n      if (!existsSync(filePath)) {\n        continue\n      }\n\n      const fileContent = await fs.readFile(filePath, \"utf8\")\n\n      const registryContent = await transform({\n        filename: file.name,\n        raw: file.content,\n        config,\n        baseColor,\n      })\n\n      const patch = diffLines(registryContent as string, fileContent)\n      if (patch.length > 1) {\n        changes.push({\n          file: file.name,\n          filePath,\n          patch,\n        })\n      }\n    }\n  }\n\n  return changes\n}\n\nasync function printDiff(diff: Change[]) {\n  diff.forEach((part) => {\n    if (part) {\n      if (part.added) {\n        return process.stdout.write(chalk.green(part.value))\n      }\n      if (part.removed) {\n        return process.stdout.write(chalk.red(part.value))\n      }\n\n      return process.stdout.write(part.value)\n    }\n  })\n}\n","import { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport {\n  DEFAULT_COMPONENTS,\n  DEFAULT_TAILWIND_CONFIG,\n  DEFAULT_TAILWIND_CSS,\n  DEFAULT_UTILS,\n  getConfig,\n  rawConfigSchema,\n  resolveConfigPaths,\n  type Config,\n} from \"@/src/utils/get-config\"\nimport { getPackageManager } from \"@/src/utils/get-package-manager\"\nimport { getProjectConfig, preFlight } from \"@/src/utils/get-project-info\"\nimport { handleError } from \"@/src/utils/handle-error\"\nimport { logger } from \"@/src/utils/logger\"\nimport {\n  getRegistryBaseColor,\n  getRegistryBaseColors,\n  getRegistryStyles,\n} from \"@/src/utils/registry\"\nimport * as templates from \"@/src/utils/templates\"\nimport chalk from \"chalk\"\nimport { Command } from \"commander\"\nimport { execa } from \"execa\"\nimport template from \"lodash.template\"\nimport ora from \"ora\"\nimport prompts from \"prompts\"\nimport { z } from \"zod\"\n\nimport { applyPrefixesCss } from \"../utils/transformers/transform-tw-prefix\"\n\nconst PROJECT_DEPENDENCIES = [\n  \"tailwindcss-animate\",\n  \"class-variance-authority\",\n  \"clsx\",\n  \"tailwind-merge\"\n]\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean(),\n  defaults: z.boolean(),\n})\n\nexport const init = new Command()\n  .name(\"init\")\n  .description(\"initialize your project and install dependencies\")\n  .option(\"-y, --yes\", \"skip confirmation prompt.\", false)\n  .option(\"-d, --defaults,\", \"use default configuration.\", false)\n  .option(\n    \"-c, --cwd <cwd>\",\n    \"the working directory. defaults to the current directory.\",\n    process.cwd()\n  )\n  .action(async (opts) => {\n    try {\n      const options = initOptionsSchema.parse(opts)\n      const cwd = path.resolve(options.cwd)\n\n      // Ensure target directory exists.\n      if (!existsSync(cwd)) {\n        logger.error(`The path ${cwd} does not exist. Please try again.`)\n        process.exit(1)\n      }\n\n      preFlight(cwd)\n\n      const projectConfig = await getProjectConfig(cwd)\n      if (projectConfig) {\n        const config = await promptForMinimalConfig(\n          cwd,\n          projectConfig,\n          opts.defaults\n        )\n        await runInit(cwd, config)\n      } else {\n        // Read config.\n        const existingConfig = await getConfig(cwd)\n        const config = await promptForConfig(cwd, existingConfig, options.yes)\n        await runInit(cwd, config)\n      }\n\n      logger.info(\"\")\n      logger.info(\n        `${chalk.green(\n          \"Success!\"\n        )} Project initialization completed. You may now add components.`\n      )\n      logger.info(\"\")\n    } catch (error) {\n      handleError(error)\n    }\n  })\n\nexport async function promptForConfig(\n  cwd: string,\n  defaultConfig: Config | null = null,\n  skip = false\n) {\n  const highlight = (text: string) => chalk.cyan(text)\n\n  const styles = await getRegistryStyles()\n  const baseColors = await getRegistryBaseColors()\n\n  const options = await prompts([\n    {\n      type: \"toggle\",\n      name: \"typescript\",\n      message: `Would you like to use ${highlight(\n        \"TypeScript\"\n      )} (recommended)?`,\n      initial: defaultConfig?.tsx ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n    {\n      type: \"select\",\n      name: \"style\",\n      message: `Which ${highlight(\"style\")} would you like to use?`,\n      choices: styles.map((style) => ({\n        title: style.label,\n        value: style.name,\n      })),\n    },\n    {\n      type: \"select\",\n      name: \"tailwindBaseColor\",\n      message: `Which color would you like to use as ${highlight(\n        \"base color\"\n      )}?`,\n      choices: baseColors.map((color) => ({\n        title: color.label,\n        value: color.name,\n      })),\n    },\n    {\n      type: \"text\",\n      name: \"tailwindCss\",\n      message: `Where is your ${highlight(\"global CSS\")} file?`,\n      initial: defaultConfig?.tailwind.css ?? DEFAULT_TAILWIND_CSS,\n    },\n    {\n      type: \"toggle\",\n      name: \"tailwindCssVariables\",\n      message: `Would you like to use ${highlight(\n        \"CSS variables\"\n      )} for colors?`,\n      initial: defaultConfig?.tailwind.cssVariables ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n    {\n      type: \"text\",\n      name: \"tailwindPrefix\",\n      message: `Are you using a custom ${highlight(\n        \"tailwind prefix eg. tw-\"\n      )}? (Leave blank if not)`,\n      initial: \"\",\n    },\n    {\n      type: \"text\",\n      name: \"tailwindConfig\",\n      message: `Where is your ${highlight(\"tailwind.config.js\")} located?`,\n      initial: defaultConfig?.tailwind.config ?? DEFAULT_TAILWIND_CONFIG,\n    },\n    {\n      type: \"text\",\n      name: \"components\",\n      message: `Configure the import alias for ${highlight(\"components\")}:`,\n      initial: defaultConfig?.aliases[\"components\"] ?? DEFAULT_COMPONENTS,\n    },\n    {\n      type: \"text\",\n      name: \"utils\",\n      message: `Configure the import alias for ${highlight(\"utils\")}:`,\n      initial: defaultConfig?.aliases[\"utils\"] ?? DEFAULT_UTILS,\n    },\n    {\n      type: \"toggle\",\n      name: \"rsc\",\n      message: `Are you using ${highlight(\"React Server Components\")}?`,\n      initial: defaultConfig?.rsc ?? true,\n      active: \"yes\",\n      inactive: \"no\",\n    },\n  ])\n\n  const config = rawConfigSchema.parse({\n    $schema: \"https://ui.shadcn.com/schema.json\",\n    style: options.style,\n    tailwind: {\n      config: options.tailwindConfig,\n      css: options.tailwindCss,\n      baseColor: options.tailwindBaseColor,\n      cssVariables: options.tailwindCssVariables,\n      prefix: options.tailwindPrefix,\n    },\n    rsc: options.rsc,\n    tsx: options.typescript,\n    aliases: {\n      utils: options.utils,\n      components: options.components,\n    },\n    registries: [\n      {\n        name: \"shadcn\",\n        baseUrl: process.env.COMPONENTS_REGISTRY_URL ?? \"https://ui.shadcn.com\",\n      },\n      {\n        name: \"shadxn\",\n        baseUrl: \"https://ui.shadxn.com\"\n      },\n      {\n        name: \"aceternity\",\n        baseUrl: \"https://ui.aceternity.com\"\n      }\n    ],\n  })\n\n  if (!skip) {\n    const { proceed } = await prompts({\n      type: \"confirm\",\n      name: \"proceed\",\n      message: `Write configuration to ${highlight(\n        \"components.json\"\n      )}. Proceed?`,\n      initial: true,\n    })\n\n    if (!proceed) {\n      process.exit(0)\n    }\n  }\n  // Write to file.\n  logger.info(\"\")\n  const spinner = ora(`Writing components.json...`).start()\n  const targetPath = path.resolve(cwd, \"components.json\")\n  await fs.writeFile(targetPath, JSON.stringify(config, null, 2), \"utf8\")\n  spinner.succeed()\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function promptForMinimalConfig(\n  cwd: string,\n  defaultConfig: Config,\n  defaults = false\n) {\n  const highlight = (text: string) => chalk.cyan(text)\n  let style = defaultConfig.style\n  let baseColor = defaultConfig.tailwind.baseColor\n  let cssVariables = defaultConfig.tailwind.cssVariables\n\n  if (!defaults) {\n    const styles = await getRegistryStyles()\n    const baseColors = await getRegistryBaseColors()\n\n    const options = await prompts([\n      {\n        type: \"select\",\n        name: \"style\",\n        message: `Which ${highlight(\"style\")} would you like to use?`,\n        choices: styles.map((style) => ({\n          title: style.label,\n          value: style.name,\n        })),\n      },\n      {\n        type: \"select\",\n        name: \"tailwindBaseColor\",\n        message: `Which color would you like to use as ${highlight(\n          \"base color\"\n        )}?`,\n        choices: baseColors.map((color) => ({\n          title: color.label,\n          value: color.name,\n        })),\n      },\n      {\n        type: \"toggle\",\n        name: \"tailwindCssVariables\",\n        message: `Would you like to use ${highlight(\n          \"CSS variables\"\n        )} for colors?`,\n        initial: defaultConfig?.tailwind.cssVariables,\n        active: \"yes\",\n        inactive: \"no\",\n      },\n    ])\n\n    style = options.style\n    baseColor = options.tailwindBaseColor\n    cssVariables = options.tailwindCssVariables\n  }\n\n  const config = rawConfigSchema.parse({\n    $schema: defaultConfig?.$schema,\n    style,\n    tailwind: {\n      ...defaultConfig?.tailwind,\n      baseColor,\n      cssVariables,\n    },\n    rsc: defaultConfig?.rsc,\n    tsx: defaultConfig?.tsx,\n    aliases: defaultConfig?.aliases,\n    registries: [\n      {\n        name: \"shadcn\",\n        baseUrl: \"https://ui.shadcn.com\"\n      },\n      {\n        name: \"shadxn\",\n        baseUrl: \"https://ui.shadxn.com\"\n      }\n    ],\n  })\n\n  // Write to file.\n  logger.info(\"\")\n  const spinner = ora(`Writing components.json...`).start()\n  const targetPath = path.resolve(cwd, \"components.json\")\n  await fs.writeFile(targetPath, JSON.stringify(config, null, 2), \"utf8\")\n  spinner.succeed()\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function runInit(cwd: string, config: Config) {\n  const spinner = ora(`Initializing project...`)?.start()\n\n  // Ensure all resolved paths directories exist.\n  for (const [key, resolvedPath] of Object.entries(config.resolvedPaths)) {\n    // Determine if the path is a file or directory.\n    // TODO: is there a better way to do this?\n    let dirname = path.extname(resolvedPath)\n      ? path.dirname(resolvedPath)\n      : resolvedPath\n\n    // If the utils alias is set to something like \"@/lib/utils\",\n    // assume this is a file and remove the \"utils\" file name.\n    // TODO: In future releases we should add support for individual utils.\n    if (key === \"utils\" && resolvedPath.endsWith(\"/utils\")) {\n      // Remove /utils at the end.\n      dirname = dirname.replace(/\\/utils$/, \"\")\n    }\n\n    if (!existsSync(dirname)) {\n      await fs.mkdir(dirname, { recursive: true })\n    }\n  }\n\n  const extension = config.tsx ? \"ts\" : \"js\"\n\n  const tailwindConfigExtension = path.extname(\n    config.resolvedPaths.tailwindConfig\n  )\n\n  let tailwindConfigTemplate: string\n  if (tailwindConfigExtension === \".ts\") {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_TS_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG_TS\n  } else {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG\n  }\n\n  // Write tailwind config.\n  await fs.writeFile(\n    config.resolvedPaths.tailwindConfig,\n    template(tailwindConfigTemplate)({\n      extension,\n      prefix: config.tailwind.prefix,\n    }),\n    \"utf8\"\n  )\n\n  // Write css file.\n  const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n  if (baseColor) {\n    await fs.writeFile(\n      config.resolvedPaths.tailwindCss,\n      config.tailwind.cssVariables\n        ? config.tailwind.prefix\n          ? applyPrefixesCss(baseColor.cssVarsTemplate, config.tailwind.prefix)\n          : baseColor.cssVarsTemplate\n        : baseColor.inlineColorsTemplate,\n      \"utf8\"\n    )\n  }\n\n  // Write cn file.\n  await fs.writeFile(\n    `${config.resolvedPaths.utils}.${extension}`,\n    extension === \"ts\" ? templates.UTILS : templates.UTILS_JS,\n    \"utf8\"\n  )\n\n  spinner?.succeed()\n\n  // Install dependencies.\n  const dependenciesSpinner = ora(`Installing dependencies...`)?.start()\n  const packageManager = await getPackageManager(cwd)\n\n  // TODO: add support for other icon libraries.\n  const deps = [\n    ...PROJECT_DEPENDENCIES,\n    config.style === \"new-york\" ? \"@radix-ui/react-icons\" : \"lucide-react\",\n  ]\n\n  await execa(\n    packageManager,\n    [packageManager === \"npm\" ? \"install\" : \"add\", ...deps],\n    {\n      cwd,\n    }\n  )\n  dependenciesSpinner?.succeed()\n}\n","import { existsSync } from \"fs\"\nimport path from \"path\"\nimport {\n  Config,\n  RawConfig,\n  getConfig,\n  resolveConfigPaths,\n} from \"@/src/utils/get-config\"\nimport fg from \"fast-glob\"\nimport fs, { pathExists } from \"fs-extra\"\nimport { loadConfig } from \"tsconfig-paths\"\n\n// TODO: Add support for more frameworks.\n// We'll start with Next.js for now.\nconst PROJECT_TYPES = [\n  \"next-app\",\n  \"next-app-src\",\n  \"next-pages\",\n  \"next-pages-src\",\n] as const\n\ntype ProjectType = (typeof PROJECT_TYPES)[number]\n\nconst PROJECT_SHARED_IGNORE = [\n  \"**/node_modules/**\",\n  \".next\",\n  \"public\",\n  \"dist\",\n  \"build\",\n]\n\nexport async function getProjectInfo() {\n  const info = {\n    tsconfig: null,\n    srcDir: false,\n    appDir: false,\n    srcComponentsUiDir: false,\n    componentsUiDir: false,\n  }\n\n  try {\n    const tsconfig = await getTsConfig()\n\n    return {\n      tsconfig,\n      srcDir: existsSync(path.resolve(\"./src\")),\n      appDir:\n        existsSync(path.resolve(\"./app\")) ||\n        existsSync(path.resolve(\"./src/app\")),\n      srcComponentsUiDir: existsSync(path.resolve(\"./src/components/ui\")),\n      componentsUiDir: existsSync(path.resolve(\"./components/ui\")),\n    }\n  } catch (error) {\n    return info\n  }\n}\n\nexport async function getTsConfig() {\n  try {\n    const tsconfigPath = path.join(\"tsconfig.json\")\n    const tsconfig = await fs.readJSON(tsconfigPath)\n\n    if (!tsconfig) {\n      throw new Error(\"tsconfig.json is missing\")\n    }\n\n    return tsconfig\n  } catch (error) {\n    return null\n  }\n}\n\nexport async function getProjectConfig(cwd: string): Promise<Config | null> {\n  // Check for existing component config.\n  const existingConfig = await getConfig(cwd)\n  if (existingConfig) {\n    return existingConfig\n  }\n\n  const projectType = await getProjectType(cwd)\n  const tailwindCssFile = await getTailwindCssFile(cwd)\n  const tsConfigAliasPrefix = await getTsConfigAliasPrefix(cwd)\n\n  if (!projectType || !tailwindCssFile || !tsConfigAliasPrefix) {\n    return null\n  }\n\n  const isTsx = await isTypeScriptProject(cwd)\n\n  const config: RawConfig = {\n    $schema: \"https://ui.shadcn.com/schema.json\",\n    rsc: [\"next-app\", \"next-app-src\"].includes(projectType),\n    tsx: isTsx,\n    style: \"new-york\",\n    tailwind: {\n      config: isTsx ? \"tailwind.config.ts\" : \"tailwind.config.js\",\n      baseColor: \"zinc\",\n      css: tailwindCssFile,\n      cssVariables: true,\n      prefix: \"\",\n    },\n    aliases: {\n      utils: `${tsConfigAliasPrefix}/lib/utils`,\n      components: `${tsConfigAliasPrefix}/components`,\n    },\n    registries: [\n      {\n        name: \"shadcn\",\n        baseUrl: \"https://ui.shadcn.com\",\n      }\n    ],\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function getProjectType(cwd: string): Promise<ProjectType | null> {\n  const files = await fg.glob(\"**/*\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  const isNextProject = files.find((file) => file.startsWith(\"next.config.\"))\n  if (!isNextProject) {\n    return null\n  }\n\n  const isUsingSrcDir = await fs.pathExists(path.resolve(cwd, \"src\"))\n  const isUsingAppDir = await fs.pathExists(\n    path.resolve(cwd, `${isUsingSrcDir ? \"src/\" : \"\"}app`)\n  )\n\n  if (isUsingAppDir) {\n    return isUsingSrcDir ? \"next-app-src\" : \"next-app\"\n  }\n\n  return isUsingSrcDir ? \"next-pages-src\" : \"next-pages\"\n}\n\nexport async function getTailwindCssFile(cwd: string) {\n  const files = await fg.glob(\"**/*.css\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  if (!files.length) {\n    return null\n  }\n\n  for (const file of files) {\n    const contents = await fs.readFile(path.resolve(cwd, file), \"utf8\")\n    // Assume that if the file contains `@tailwind base` it's the main css file.\n    if (contents.includes(\"@tailwind base\")) {\n      return file\n    }\n  }\n\n  return null\n}\n\nexport async function getTsConfigAliasPrefix(cwd: string) {\n  const tsConfig = await loadConfig(cwd)\n\n  if (tsConfig?.resultType === \"failed\" || !tsConfig?.paths) {\n    return null\n  }\n\n  // This assume that the first alias is the prefix.\n  for (const [alias, paths] of Object.entries(tsConfig.paths)) {\n    if (paths.includes(\"./*\") || paths.includes(\"./src/*\")) {\n      return alias.at(0)\n    }\n  }\n\n  return null\n}\n\nexport async function isTypeScriptProject(cwd: string) {\n  // Check if cwd has a tsconfig.json file.\n  return pathExists(path.resolve(cwd, \"tsconfig.json\"))\n}\n\nexport async function preFlight(cwd: string) {\n  // We need Tailwind CSS to be configured.\n  const tailwindConfig = await fg.glob(\"tailwind.config.*\", {\n    cwd,\n    deep: 3,\n    ignore: PROJECT_SHARED_IGNORE,\n  })\n\n  if (!tailwindConfig.length) {\n    throw new Error(\n      \"Tailwind CSS is not installed. Visit https://tailwindcss.com/docs/installation to get started.\"\n    )\n  }\n\n  return true\n}\n","export const UTILS = `import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const UTILS_JS = `import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const TAILWIND_CONFIG = `/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}`\n\nexport const TAILWIND_CONFIG_WITH_VARIABLES = `/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}`\n\nexport const TAILWIND_CONFIG_TS = `import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n  ],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config`\n\nexport const TAILWIND_CONFIG_TS_WITH_VARIABLES = `import type { Config } from \"tailwindcss\"\n\nconst config = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{<%- extension %>,<%- extension %>x}',\n    './components/**/*.{<%- extension %>,<%- extension %>x}',\n    './app/**/*.{<%- extension %>,<%- extension %>x}',\n    './src/**/*.{<%- extension %>,<%- extension %>x}',\n\t],\n  prefix: \"<%- prefix %>\",\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config\n\nexport default config`\n","// @ts-nocheck\nimport { Command } from \"commander\";\nimport { logger } from \"@/src/utils/logger\";\nimport * as fsx from \"fs-extra\";\nimport * as fs from \"fs\";\nimport path from \"path\";\nimport template from \"lodash.template\";\nimport { rimraf } from \"rimraf\";\nimport { existsSync, readFileSync, writeFileSync } from 'fs';\nimport { handleError } from \"@/src/utils/handle-error\";\nimport { z } from \"zod\";\nimport prompts from \"prompts\";\nimport { handleError } from \"@/src/utils/handle-error\";\nimport { registrySchema, types } from \"@/src/utils/registry/schema\";\nimport { pathToFileURL } from 'url';\n// Convert a file system path to a file URL\nconst toFileUrl = (filePath) => pathToFileURL(filePath).href;\nconst currentFileUrl = new URL(import.meta.url);\nconst __dirname = path.dirname(currentFileUrl.pathname);\n\n// Main registry command\nconst registry = new Command(\"registry\").description(\n  \"Manage the project registry.\"\n);\n\n// Subcommand for initialization\nregistry\n  .command(\"init\")\n  .description(\"Initialize the registry for a project.\")\n  .argument(\n    \"[project]\",\n    \"The project to initialize (default: default)\",\n    \"default\"\n  )\n  .option(\"-r, --registry <registry>\", \"the registry to use. We have blank, shadcn and aceternity. (default: blank)\", \"shadcn\")\n  .action(async (project, opts) => {\n    try {\n      await init(project, opts); // Assuming init accepts a project argument\n    } catch (error) {\n      logger.error(`Error initializing registry: ${error.message}`);\n    }\n  });\n\n// Subcommand for building\nregistry\n  .command(\"build\")\n  .description(\"Build the registry for a project.\")\n  .argument(\"[project]\", \"The project to build (default: default)\", \"default\")\n  .action(async (project) => {\n    try {\n      await build(project);\n    } catch (error) {\n      logger.error(`Error building registry: ${error.message}`);\n    }\n  });\n\nregistry\n  .command(\"add\")\n  .description(\"Activate a registry by adding its URL to your project.\")\n  .argument(\"<registryName>\", \"Name of the registry to add\")\n  .action(async (registryName) => {\n    const cwd = process.cwd();\n    const componentsPath = path.join(cwd, \"components.json\");\n\n    // Check if components.json exists\n    if (!existsSync(componentsPath)) {\n      logger.warn(\n        `components.json does not exist. Have you run the init command?`\n      );\n      return;\n    }\n\n    // Prompt for the registry URL\n    const answers = await prompts([\n      {\n        type: \"text\",\n        name: \"url\",\n        message: `Enter the URL for the ${registryName} registry:`,\n        validate: (input) => isValidUrl(input) || \"Please enter a valid URL.\",\n      },\n    ]);\n\n    // Read the existing components.json\n    let components = JSON.parse(readFileSync(componentsPath, \"utf8\"));\n\n    // Ensure the registries array exists\n    components.registries = components.registries || [];\n\n    // Check if the registry already exists\n    const registryIndex = components.registries.findIndex(\n      (registry) => registry.name === registryName\n    );\n\n    if (registryIndex > -1) {\n      // Update existing registry\n      components.registries[registryIndex].baseUrl = answers.url;\n      logger.info(`Updated ${registryName} registry URL to ${answers.url}`);\n    } else {\n      // Add new registry\n      components.registries.push({ name: registryName, baseUrl: answers.url });\n      logger.info(`Added ${registryName} registry with URL ${answers.url}`);\n    }\n\n    // Write the updated components.json back to disk\n    writeFileSync(componentsPath, JSON.stringify(components, null, 2), \"utf8\");\n  });\n\nfunction isValidUrl(url) {\n  const urlRule = z.string().url();\n  const result = urlRule.safeParse(url);\n  return result.success;\n}\n\nasync function init(project, opts) {\n  switch (project) {\n    case \"default\":\n      await initDefault(opts);\n      break;\n    default:\n      logger.warn(\"Unsupported project type.\");\n  }\n}\n\nasync function initDefault(opts) {\n  try {\n    logger.info(\"Initializing registry...\");\n    const { registry: registryName } = opts;\n    let source = path.join(__dirname, \"..\", \"src\", \"registries\", registryName);\n    source = decodeURIComponent(source);\n    // Remove the leading backslash if present for Windows Users\n    source = source.startsWith('\\\\') ? source.substring(1) : source;\n    const destination = path.join(process.cwd(), \"src\", \"registry\");\n\n    // Ensure the destination directory exists\n    await fsx.ensureDir(destination);\n\n    // Copy contents from source to destination\n    await fsx.copy(source, destination, {\n      overwrite: false,\n      errorOnExist: false, // Don't throw error if destination exists\n    });\n\n    console.log(\"✅ Registry initialized\");\n  } catch (err) {\n    handleError(err);\n  }\n}\n\nasync function build(project) {\n  switch (project) {\n    case \"default\":\n      await buildDefault();\n      break;\n    default:\n      logger.warn(\"Unsupported project type.\");\n  }\n}\n\nasync function buildDefault() {\n  try {\n  logger.info(\"Building registry for Next.js project...\");\n  const REGISTRY_PATH = path.join(process.cwd(), \"public/registry\");\n  const {registry: buildRegister} = await import(toFileUrl(path.join(process.cwd(), \"src/registry/registry.mjs\")));\n  const {styles} = await import(toFileUrl(path.join(process.cwd(), \"src/registry/styles.mjs\")));\n  const {colorMapping, colors} = await import(toFileUrl(path.join(process.cwd(), \"src/registry/colors.mjs\")));;\n  const {themes} = await import(toFileUrl(path.join(process.cwd(), \"src/registry/themes.mjs\")));\n\n  const result = registrySchema.safeParse(buildRegister);\n  if (!result.success) {\n    console.error(result.error);\n    process.exit(1);\n  }\n\n  // ----------------------------------------------------------------------------\n  // Build registry/styles/[style]/[name].json.\n  // ----------------------------------------------------------------------------\n  for (const style of styles) {\n    const targetPath = path.join(REGISTRY_PATH, \"styles\", style.name);\n\n    // Create directory if it doesn't exist.\n    if (!fs.existsSync(targetPath)) {\n      fs.mkdirSync(targetPath, { recursive: true });\n    }\n\n    for (const item of result.data) {\n      const files = item.files?.map((file) => {\n        // Construct the file path relative to the project structure\n        // Adjust the path as necessary based on your project's directory structure\n        const filePath = path.join(process.cwd(), \"src\", \"registry\", style.name, item.type.replace('components:', ''), file);\n        // Read the file content\n        const content = fs.readFileSync(filePath, \"utf8\");\n\n        return {\n          name: path.basename(file), // file name with extension\n          path: file, // preserving the relative path structure\n          content,\n        };\n      });\n      \n      const payload = {\n        ...item,\n        files,\n      };\n\n      // Determine the target path for each style. Sorry I'm in a rush, I can't finish this.\n      const targetPath = path.join(REGISTRY_PATH, \"styles\", style.name, `${item.name}.json`);\n      // Ensure the directory exists\n      fs.mkdirSync(path.dirname(targetPath), { recursive: true });\n\n      // Write the payload to the target file\n      fs.writeFileSync(targetPath, JSON.stringify(payload, null, 2), \"utf8\");\n    }\n  }\n\n  // ----------------------------------------------------------------------------\n  // Build registry/styles/index.json.\n  // ----------------------------------------------------------------------------\n  const stylesJson = JSON.stringify(styles, null, 2);\n  fs.writeFileSync(\n    path.join(REGISTRY_PATH, \"styles/index.json\"),\n    stylesJson,\n    \"utf8\"\n  );\n\n  // ----------------------------------------------------------------------------\n  // Build registry/index.json.\n  // ----------------------------------------------------------------------------\n  const names = result.data\n  .filter((item) => types.includes(item.type));\n  const registryJson = JSON.stringify(names, null, 2);\n  rimraf.sync(path.join(REGISTRY_PATH, \"index.json\"));\n  fs.writeFileSync(\n    path.join(REGISTRY_PATH, \"index.json\"),\n    registryJson,\n    \"utf8\"\n  );\n\n  // ----------------------------------------------------------------------------\n  // Build registry/colors/index.json.\n  // ----------------------------------------------------------------------------\n  const colorsTargetPath = path.join(REGISTRY_PATH, \"colors\");\n  rimraf.sync(colorsTargetPath);\n  if (!fs.existsSync(colorsTargetPath)) {\n    fs.mkdirSync(colorsTargetPath, { recursive: true });\n  }\n\n  const colorsData: Record<string, any> = {};\n  for (const [color, value] of Object.entries(colors)) {\n    if (typeof value === \"string\") {\n      colorsData[color] = value;\n      continue;\n    }\n\n    if (Array.isArray(value)) {\n      colorsData[color] = value.map((item) => ({\n        ...item,\n        rgbChannel: item.rgb.replace(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/, \"$1 $2 $3\"),\n        hslChannel: item.hsl.replace(\n          /^hsl\\(([\\d.]+),([\\d.]+%),([\\d.]+%)\\)$/,\n          \"$1 $2 $3\"\n        ),\n      }));\n      continue;\n    }\n\n    if (typeof value === \"object\") {\n      colorsData[color] = {\n        ...value,\n        rgbChannel: value.rgb.replace(/^rgb\\((\\d+),(\\d+),(\\d+)\\)$/, \"$1 $2 $3\"),\n        hslChannel: value.hsl.replace(\n          /^hsl\\(([\\d.]+),([\\d.]+%),([\\d.]+%)\\)$/,\n          \"$1 $2 $3\"\n        ),\n      };\n      continue;\n    }\n  }\n\n  fs.writeFileSync(\n    path.join(colorsTargetPath, \"index.json\"),\n    JSON.stringify(colorsData, null, 2),\n    \"utf8\"\n  );\n\n  // ----------------------------------------------------------------------------\n  // Build registry/colors/[base].json.\n  // ----------------------------------------------------------------------------\n  const BASE_STYLES = `@tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n  `;\n\n  const BASE_STYLES_WITH_VARIABLES = `@tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n   \n  @layer base {\n    :root {\n      --background: <%- colors.light[\"background\"] %>;\n      --foreground: <%- colors.light[\"foreground\"] %>;\n  \n      --card: <%- colors.light[\"card\"] %>;\n      --card-foreground: <%- colors.light[\"card-foreground\"] %>;\n   \n      --popover: <%- colors.light[\"popover\"] %>;\n      --popover-foreground: <%- colors.light[\"popover-foreground\"] %>;\n   \n      --primary: <%- colors.light[\"primary\"] %>;\n      --primary-foreground: <%- colors.light[\"primary-foreground\"] %>;\n   \n      --secondary: <%- colors.light[\"secondary\"] %>;\n      --secondary-foreground: <%- colors.light[\"secondary-foreground\"] %>;\n   \n      --muted: <%- colors.light[\"muted\"] %>;\n      --muted-foreground: <%- colors.light[\"muted-foreground\"] %>;\n   \n      --accent: <%- colors.light[\"accent\"] %>;\n      --accent-foreground: <%- colors.light[\"accent-foreground\"] %>;\n   \n      --destructive: <%- colors.light[\"destructive\"] %>;\n      --destructive-foreground: <%- colors.light[\"destructive-foreground\"] %>;\n  \n      --border: <%- colors.light[\"border\"] %>;\n      --input: <%- colors.light[\"input\"] %>;\n      --ring: <%- colors.light[\"ring\"] %>;\n   \n      --radius: 0.5rem;\n    }\n   \n    .dark {\n      --background: <%- colors.dark[\"background\"] %>;\n      --foreground: <%- colors.dark[\"foreground\"] %>;\n   \n      --card: <%- colors.dark[\"card\"] %>;\n      --card-foreground: <%- colors.dark[\"card-foreground\"] %>;\n   \n      --popover: <%- colors.dark[\"popover\"] %>;\n      --popover-foreground: <%- colors.dark[\"popover-foreground\"] %>;\n   \n      --primary: <%- colors.dark[\"primary\"] %>;\n      --primary-foreground: <%- colors.dark[\"primary-foreground\"] %>;\n   \n      --secondary: <%- colors.dark[\"secondary\"] %>;\n      --secondary-foreground: <%- colors.dark[\"secondary-foreground\"] %>;\n   \n      --muted: <%- colors.dark[\"muted\"] %>;\n      --muted-foreground: <%- colors.dark[\"muted-foreground\"] %>;\n   \n      --accent: <%- colors.dark[\"accent\"] %>;\n      --accent-foreground: <%- colors.dark[\"accent-foreground\"] %>;\n   \n      --destructive: <%- colors.dark[\"destructive\"] %>;\n      --destructive-foreground: <%- colors.dark[\"destructive-foreground\"] %>;\n   \n      --border: <%- colors.dark[\"border\"] %>;\n      --input: <%- colors.dark[\"input\"] %>;\n      --ring: <%- colors.dark[\"ring\"] %>;\n    }\n  }\n   \n  @layer base {\n    * {\n      @apply border-border;\n    }\n    body {\n      @apply bg-background text-foreground;\n    }\n  }`;\n\n  for (const baseColor of [\"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\"]) {\n    const base: Record<string, any> = {\n      inlineColors: {},\n      cssVars: {},\n    };\n    for (const [mode, values] of Object.entries(colorMapping)) {\n      base[\"inlineColors\"][mode] = {};\n      base[\"cssVars\"][mode] = {};\n      for (const [key, value] of Object.entries(values)) {\n        if (typeof value === \"string\") {\n          const resolvedColor = value.replace(/{{base}}-/g, `${baseColor}-`);\n          base[\"inlineColors\"][mode][key] = resolvedColor;\n\n          const [resolvedBase, scale] = resolvedColor.split(\"-\");\n          const color = scale\n            ? colorsData[resolvedBase].find(\n                (item: { scale: number }) => item.scale === parseInt(scale)\n              )\n            : colorsData[resolvedBase];\n          if (color) {\n            base[\"cssVars\"][mode][key] = color.hslChannel;\n          }\n        }\n      }\n    }\n\n    // Build css vars.\n    base[\"inlineColorsTemplate\"] = template(BASE_STYLES)({});\n    base[\"cssVarsTemplate\"] = template(BASE_STYLES_WITH_VARIABLES)({\n      colors: base[\"cssVars\"],\n    });\n\n    fs.writeFileSync(\n      path.join(REGISTRY_PATH, `colors/${baseColor}.json`),\n      JSON.stringify(base, null, 2),\n      \"utf8\"\n    );\n  }\n\n  // ----------------------------------------------------------------------------\n  // Build registry/themes.css\n  // ----------------------------------------------------------------------------\n  const THEME_STYLES_WITH_VARIABLES = `\n    .theme-<%- theme %> {\n      --background: <%- colors.light[\"background\"] %>;\n      --foreground: <%- colors.light[\"foreground\"] %>;\n   \n      --muted: <%- colors.light[\"muted\"] %>;\n      --muted-foreground: <%- colors.light[\"muted-foreground\"] %>;\n   \n      --popover: <%- colors.light[\"popover\"] %>;\n      --popover-foreground: <%- colors.light[\"popover-foreground\"] %>;\n   \n      --card: <%- colors.light[\"card\"] %>;\n      --card-foreground: <%- colors.light[\"card-foreground\"] %>;\n   \n      --border: <%- colors.light[\"border\"] %>;\n      --input: <%- colors.light[\"input\"] %>;\n   \n      --primary: <%- colors.light[\"primary\"] %>;\n      --primary-foreground: <%- colors.light[\"primary-foreground\"] %>;\n   \n      --secondary: <%- colors.light[\"secondary\"] %>;\n      --secondary-foreground: <%- colors.light[\"secondary-foreground\"] %>;\n   \n      --accent: <%- colors.light[\"accent\"] %>;\n      --accent-foreground: <%- colors.light[\"accent-foreground\"] %>;\n   \n      --destructive: <%- colors.light[\"destructive\"] %>;\n      --destructive-foreground: <%- colors.light[\"destructive-foreground\"] %>;\n   \n      --ring: <%- colors.light[\"ring\"] %>;\n   \n      --radius: <%- colors.light[\"radius\"] %>;\n    }\n   \n    .dark .theme-<%- theme %> {\n      --background: <%- colors.dark[\"background\"] %>;\n      --foreground: <%- colors.dark[\"foreground\"] %>;\n   \n      --muted: <%- colors.dark[\"muted\"] %>;\n      --muted-foreground: <%- colors.dark[\"muted-foreground\"] %>;\n   \n      --popover: <%- colors.dark[\"popover\"] %>;\n      --popover-foreground: <%- colors.dark[\"popover-foreground\"] %>;\n   \n      --card: <%- colors.dark[\"card\"] %>;\n      --card-foreground: <%- colors.dark[\"card-foreground\"] %>;\n   \n      --border: <%- colors.dark[\"border\"] %>;\n      --input: <%- colors.dark[\"input\"] %>;\n   \n      --primary: <%- colors.dark[\"primary\"] %>;\n      --primary-foreground: <%- colors.dark[\"primary-foreground\"] %>;\n   \n      --secondary: <%- colors.dark[\"secondary\"] %>;\n      --secondary-foreground: <%- colors.dark[\"secondary-foreground\"] %>;\n   \n      --accent: <%- colors.dark[\"accent\"] %>;\n      --accent-foreground: <%- colors.dark[\"accent-foreground\"] %>;\n   \n      --destructive: <%- colors.dark[\"destructive\"] %>;\n      --destructive-foreground: <%- colors.dark[\"destructive-foreground\"] %>;\n   \n      --ring: <%- colors.dark[\"ring\"] %>;\n    }`;\n\n  const themeCSS = [];\n  for (const theme of themes) {\n    themeCSS.push(\n      template(THEME_STYLES_WITH_VARIABLES)({\n        colors: theme.cssVars,\n        theme: theme.name,\n      })\n    );\n  }\n\n  fs.writeFileSync(\n    path.join(REGISTRY_PATH, `themes.css`),\n    themeCSS.join(\"\\n\"),\n    \"utf8\"\n  );\n\n  // ----------------------------------------------------------------------------\n  // Build registry/themes/[theme].json\n  // ----------------------------------------------------------------------------\n  rimraf.sync(path.join(REGISTRY_PATH, \"themes\"));\n  for (const baseColor of [\"slate\", \"gray\", \"zinc\", \"neutral\", \"stone\"]) {\n    const payload: {\n      name: string;\n      label: string;\n      cssVars: {\n        [x: string]: {};\n      };\n    } = {\n      name: baseColor,\n      label: baseColor.charAt(0).toUpperCase() + baseColor.slice(1),\n      cssVars: {},\n    };\n\n    for (const [mode, values] of Object.entries(colorMapping)) {\n      payload[\"cssVars\"][mode] = {};\n      for (const [key, value] of Object.entries(values)) {\n        if (typeof value === \"string\") {\n          const resolvedColor = value.replace(/{{base}}-/g, `${baseColor}-`);\n          payload[\"cssVars\"][mode][key] = resolvedColor;\n\n          const [resolvedBase, scale] = resolvedColor.split(\"-\");\n          const color = scale\n            ? colorsData[resolvedBase].find(\n                (item) => item.scale === parseInt(scale)\n              )\n            : colorsData[resolvedBase];\n          if (color) {\n            payload[\"cssVars\"][mode][key] = color.hslChannel;\n          }\n        }\n      }\n    }\n\n    const targetPath = path.join(REGISTRY_PATH, \"themes\");\n\n    // Create directory if it doesn't exist.\n    if (!fs.existsSync(targetPath)) {\n      fs.mkdirSync(targetPath, { recursive: true });\n    }\n\n    fs.writeFileSync(\n      path.join(targetPath, `${payload.name}.json`),\n      JSON.stringify(payload, null, 2),\n      \"utf8\"\n    );\n  }\n\n  console.log(\"✅ Done!\");\n} catch (error) {\n    handleError(error);\n  }\n}\n\nexport { registry };\n","import { GlobOptions } from 'glob'\nimport {\n  assertRimrafOptions,\n  RimrafAsyncOptions,\n  RimrafOptions,\n  RimrafSyncOptions,\n} from './index.js'\n\nconst optArgT = <T extends RimrafOptions>(\n  opt: T\n):\n  | (T & {\n      glob: GlobOptions & { withFileTypes: false }\n    })\n  | (T & { glob: undefined }) => {\n  assertRimrafOptions(opt)\n  const { glob, ...options } = opt\n  if (!glob) {\n    return options as T & { glob: undefined }\n  }\n  const globOpt =\n    glob === true\n      ? opt.signal\n        ? { signal: opt.signal }\n        : {}\n      : opt.signal\n      ? {\n          signal: opt.signal,\n          ...glob,\n        }\n      : glob\n  return {\n    ...options,\n    glob: {\n      ...globOpt,\n      // always get absolute paths from glob, to ensure\n      // that we are referencing the correct thing.\n      absolute: true,\n      withFileTypes: false,\n    },\n  } as T & { glob: GlobOptions & { withFileTypes: false } }\n}\n\nexport const optArg = (opt: RimrafAsyncOptions = {}) => optArgT(opt)\nexport const optArgSync = (opt: RimrafSyncOptions = {}) => optArgT(opt)\n","import { parse, resolve } from 'path'\nimport { inspect } from 'util'\nimport { RimrafAsyncOptions } from './index.js'\nimport platform from './platform.js'\n\nconst pathArg = (path: string, opt: RimrafAsyncOptions = {}) => {\n  const type = typeof path\n  if (type !== 'string') {\n    const ctor = path && type === 'object' && path.constructor\n    const received =\n      ctor && ctor.name\n        ? `an instance of ${ctor.name}`\n        : type === 'object'\n        ? inspect(path)\n        : `type ${type} ${path}`\n    const msg =\n      'The \"path\" argument must be of type string. ' + `Received ${received}`\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_TYPE',\n    })\n  }\n\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    const msg = 'path must be a string without null bytes'\n    throw Object.assign(new TypeError(msg), {\n      path,\n      code: 'ERR_INVALID_ARG_VALUE',\n    })\n  }\n\n  path = resolve(path)\n  const { root } = parse(path)\n\n  if (path === root && opt.preserveRoot !== false) {\n    const msg = 'refusing to remove root directory without preserveRoot:false'\n    throw Object.assign(new Error(msg), {\n      path,\n      code: 'ERR_PRESERVE_ROOT',\n    })\n  }\n\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const { root } = parse(path)\n    if (badWinChars.test(path.substring(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\n\nexport default pathArg\n","export default process.env.__TESTING_RIMRAF_PLATFORM__ || process.platform\n","import expand from 'brace-expansion'\nimport { assertValidPattern } from './assert-valid-pattern.js'\nimport { AST, ExtglobType } from './ast.js'\nimport { escape } from './escape.js'\nimport { unescape } from './unescape.js'\n\ntype Platform =\n  | 'aix'\n  | 'android'\n  | 'darwin'\n  | 'freebsd'\n  | 'haiku'\n  | 'linux'\n  | 'openbsd'\n  | 'sunos'\n  | 'win32'\n  | 'cygwin'\n  | 'netbsd'\n\nexport interface MinimatchOptions {\n  nobrace?: boolean\n  nocomment?: boolean\n  nonegate?: boolean\n  debug?: boolean\n  noglobstar?: boolean\n  noext?: boolean\n  nonull?: boolean\n  windowsPathsNoEscape?: boolean\n  allowWindowsEscape?: boolean\n  partial?: boolean\n  dot?: boolean\n  nocase?: boolean\n  nocaseMagicOnly?: boolean\n  magicalBraces?: boolean\n  matchBase?: boolean\n  flipNegate?: boolean\n  preserveMultipleSlashes?: boolean\n  optimizationLevel?: number\n  platform?: Platform\n  windowsNoMagicRoot?: boolean\n}\n\nexport const minimatch = (\n  p: string,\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nexport default minimatch\n\n// Optimized checking for the most common glob patterns.\nconst starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/\nconst starDotExtTest = (ext: string) => (f: string) =>\n  !f.startsWith('.') && f.endsWith(ext)\nconst starDotExtTestDot = (ext: string) => (f: string) => f.endsWith(ext)\nconst starDotExtTestNocase = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => !f.startsWith('.') && f.toLowerCase().endsWith(ext)\n}\nconst starDotExtTestNocaseDot = (ext: string) => {\n  ext = ext.toLowerCase()\n  return (f: string) => f.toLowerCase().endsWith(ext)\n}\nconst starDotStarRE = /^\\*+\\.\\*+$/\nconst starDotStarTest = (f: string) => !f.startsWith('.') && f.includes('.')\nconst starDotStarTestDot = (f: string) =>\n  f !== '.' && f !== '..' && f.includes('.')\nconst dotStarRE = /^\\.\\*+$/\nconst dotStarTest = (f: string) => f !== '.' && f !== '..' && f.startsWith('.')\nconst starRE = /^\\*+$/\nconst starTest = (f: string) => f.length !== 0 && !f.startsWith('.')\nconst starTestDot = (f: string) => f.length !== 0 && f !== '.' && f !== '..'\nconst qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/\nconst qmarksTestNocase = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestNocaseDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  if (!ext) return noext\n  ext = ext.toLowerCase()\n  return (f: string) => noext(f) && f.toLowerCase().endsWith(ext)\n}\nconst qmarksTestDot = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExtDot([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTest = ([$0, ext = '']: RegExpMatchArray) => {\n  const noext = qmarksTestNoExt([$0])\n  return !ext ? noext : (f: string) => noext(f) && f.endsWith(ext)\n}\nconst qmarksTestNoExt = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && !f.startsWith('.')\n}\nconst qmarksTestNoExtDot = ([$0]: RegExpMatchArray) => {\n  const len = $0.length\n  return (f: string) => f.length === len && f !== '.' && f !== '..'\n}\n\n/* c8 ignore start */\nconst defaultPlatform: Platform = (\n  typeof process === 'object' && process\n    ? (typeof process.env === 'object' &&\n        process.env &&\n        process.env.__MINIMATCH_TESTING_PLATFORM__) ||\n      process.platform\n    : 'posix'\n) as Platform\ntype Sep = '\\\\' | '/'\nconst path: { [k: string]: { sep: Sep } } = {\n  win32: { sep: '\\\\' },\n  posix: { sep: '/' },\n}\n/* c8 ignore stop */\n\nexport const sep = defaultPlatform === 'win32' ? path.win32.sep : path.posix.sep\nminimatch.sep = sep\n\nexport const GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\/|^)\\\\.).)*?'\n\nexport const filter =\n  (pattern: string, options: MinimatchOptions = {}) =>\n  (p: string) =>\n    minimatch(p, pattern, options)\nminimatch.filter = filter\n\nconst ext = (a: MinimatchOptions, b: MinimatchOptions = {}) =>\n  Object.assign({}, a, b)\n\nexport const defaults = (def: MinimatchOptions): typeof minimatch => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p: string, pattern: string, options: MinimatchOptions = {}) =>\n    orig(p, pattern, ext(def, options))\n\n  return Object.assign(m, {\n    Minimatch: class Minimatch extends orig.Minimatch {\n      constructor(pattern: string, options: MinimatchOptions = {}) {\n        super(pattern, ext(def, options))\n      }\n      static defaults(options: MinimatchOptions) {\n        return orig.defaults(ext(def, options)).Minimatch\n      }\n    },\n\n    AST: class AST extends orig.AST {\n      /* c8 ignore start */\n      constructor(\n        type: ExtglobType | null,\n        parent?: AST,\n        options: MinimatchOptions = {}\n      ) {\n        super(type, parent, ext(def, options))\n      }\n      /* c8 ignore stop */\n\n      static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n        return orig.AST.fromGlob(pattern, ext(def, options))\n      }\n    },\n\n    unescape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.unescape(s, ext(def, options)),\n\n    escape: (\n      s: string,\n      options: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n    ) => orig.escape(s, ext(def, options)),\n\n    filter: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.filter(pattern, ext(def, options)),\n\n    defaults: (options: MinimatchOptions) => orig.defaults(ext(def, options)),\n\n    makeRe: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.makeRe(pattern, ext(def, options)),\n\n    braceExpand: (pattern: string, options: MinimatchOptions = {}) =>\n      orig.braceExpand(pattern, ext(def, options)),\n\n    match: (list: string[], pattern: string, options: MinimatchOptions = {}) =>\n      orig.match(list, pattern, ext(def, options)),\n\n    sep: orig.sep,\n    GLOBSTAR: GLOBSTAR as typeof GLOBSTAR,\n  })\n}\nminimatch.defaults = defaults\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nexport const braceExpand = (\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\nminimatch.braceExpand = braceExpand\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\n\nexport const makeRe = (pattern: string, options: MinimatchOptions = {}) =>\n  new Minimatch(pattern, options).makeRe()\nminimatch.makeRe = makeRe\n\nexport const match = (\n  list: string[],\n  pattern: string,\n  options: MinimatchOptions = {}\n) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\nminimatch.match = match\n\n// replace stuff like \\* with *\nconst globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\nexport type MMRegExp = RegExp & {\n  _src?: string\n  _glob?: string\n}\n\nexport type ParseReturnFiltered = string | MMRegExp | typeof GLOBSTAR\nexport type ParseReturn = ParseReturnFiltered | false\n\nexport class Minimatch {\n  options: MinimatchOptions\n  set: ParseReturnFiltered[][]\n  pattern: string\n\n  windowsPathsNoEscape: boolean\n  nonegate: boolean\n  negate: boolean\n  comment: boolean\n  empty: boolean\n  preserveMultipleSlashes: boolean\n  partial: boolean\n  globSet: string[]\n  globParts: string[][]\n  nocase: boolean\n\n  isWindows: boolean\n  platform: Platform\n  windowsNoMagicRoot: boolean\n\n  regexp: false | null | MMRegExp\n  constructor(pattern: string, options: MinimatchOptions = {}) {\n    assertValidPattern(pattern)\n\n    options = options || {}\n    this.options = options\n    this.pattern = pattern\n    this.platform = options.platform || defaultPlatform\n    this.isWindows = this.platform === 'win32'\n    this.windowsPathsNoEscape =\n      !!options.windowsPathsNoEscape || options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.preserveMultipleSlashes = !!options.preserveMultipleSlashes\n    this.regexp = null\n    this.negate = false\n    this.nonegate = !!options.nonegate\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n    this.nocase = !!this.options.nocase\n    this.windowsNoMagicRoot =\n      options.windowsNoMagicRoot !== undefined\n        ? options.windowsNoMagicRoot\n        : !!(this.isWindows && this.nocase)\n\n    this.globSet = []\n    this.globParts = []\n    this.set = []\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  hasMagic(): boolean {\n    if (this.options.magicalBraces && this.set.length > 1) {\n      return true\n    }\n    for (const pattern of this.set) {\n      for (const part of pattern) {\n        if (typeof part !== 'string') return true\n      }\n    }\n    return false\n  }\n\n  debug(..._: any[]) {}\n\n  make() {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    this.globSet = [...new Set(this.braceExpand())]\n\n    if (options.debug) {\n      this.debug = (...args: any[]) => console.error(...args)\n    }\n\n    this.debug(this.pattern, this.globSet)\n\n    // step 3: now we have a set, so turn each one into a series of\n    // path-portion matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    //\n    // First, we preprocess to make the glob pattern sets a bit simpler\n    // and deduped.  There are some perf-killing patterns that can cause\n    // problems with a glob walk, but we can simplify them down a bit.\n    const rawGlobParts = this.globSet.map(s => this.slashSplit(s))\n    this.globParts = this.preprocess(rawGlobParts)\n    this.debug(this.pattern, this.globParts)\n\n    // glob --> regexps\n    let set = this.globParts.map((s, _, __) => {\n      if (this.isWindows && this.windowsNoMagicRoot) {\n        // check if it's a drive or unc path.\n        const isUNC =\n          s[0] === '' &&\n          s[1] === '' &&\n          (s[2] === '?' || !globMagic.test(s[2])) &&\n          !globMagic.test(s[3])\n        const isDrive = /^[a-z]:/i.test(s[0])\n        if (isUNC) {\n          return [...s.slice(0, 4), ...s.slice(4).map(ss => this.parse(ss))]\n        } else if (isDrive) {\n          return [s[0], ...s.slice(1).map(ss => this.parse(ss))]\n        }\n      }\n      return s.map(ss => this.parse(ss))\n    })\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    this.set = set.filter(\n      s => s.indexOf(false) === -1\n    ) as ParseReturnFiltered[][]\n\n    // do not treat the ? in UNC paths as magic\n    if (this.isWindows) {\n      for (let i = 0; i < this.set.length; i++) {\n        const p = this.set[i]\n        if (\n          p[0] === '' &&\n          p[1] === '' &&\n          this.globParts[i][2] === '?' &&\n          typeof p[3] === 'string' &&\n          /^[a-z]:$/i.test(p[3])\n        ) {\n          p[2] = '?'\n        }\n      }\n    }\n\n    this.debug(this.pattern, this.set)\n  }\n\n  // various transforms to equivalent pattern sets that are\n  // faster to process in a filesystem walk.  The goal is to\n  // eliminate what we can, and push all ** patterns as far\n  // to the right as possible, even if it increases the number\n  // of patterns that we have to process.\n  preprocess(globParts: string[][]) {\n    // if we're not in globstar mode, then turn all ** into *\n    if (this.options.noglobstar) {\n      for (let i = 0; i < globParts.length; i++) {\n        for (let j = 0; j < globParts[i].length; j++) {\n          if (globParts[i][j] === '**') {\n            globParts[i][j] = '*'\n          }\n        }\n      }\n    }\n\n    const { optimizationLevel = 1 } = this.options\n\n    if (optimizationLevel >= 2) {\n      // aggressive optimization for the purpose of fs walking\n      globParts = this.firstPhasePreProcess(globParts)\n      globParts = this.secondPhasePreProcess(globParts)\n    } else if (optimizationLevel >= 1) {\n      // just basic optimizations to remove some .. parts\n      globParts = this.levelOneOptimize(globParts)\n    } else {\n      globParts = this.adjascentGlobstarOptimize(globParts)\n    }\n\n    return globParts\n  }\n\n  // just get rid of adjascent ** portions\n  adjascentGlobstarOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      let gs: number = -1\n      while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n        let i = gs\n        while (parts[i + 1] === '**') {\n          i++\n        }\n        if (i !== gs) {\n          parts.splice(gs, i - gs)\n        }\n      }\n      return parts\n    })\n  }\n\n  // get rid of adjascent ** and resolve .. portions\n  levelOneOptimize(globParts: string[][]) {\n    return globParts.map(parts => {\n      parts = parts.reduce((set: string[], part) => {\n        const prev = set[set.length - 1]\n        if (part === '**' && prev === '**') {\n          return set\n        }\n        if (part === '..') {\n          if (prev && prev !== '..' && prev !== '.' && prev !== '**') {\n            set.pop()\n            return set\n          }\n        }\n        set.push(part)\n        return set\n      }, [])\n      return parts.length === 0 ? [''] : parts\n    })\n  }\n\n  levelTwoFileOptimize(parts: string | string[]) {\n    if (!Array.isArray(parts)) {\n      parts = this.slashSplit(parts)\n    }\n    let didSomething: boolean = false\n    do {\n      didSomething = false\n      // <pre>/<e>/<rest> -> <pre>/<rest>\n      if (!this.preserveMultipleSlashes) {\n        for (let i = 1; i < parts.length - 1; i++) {\n          const p = parts[i]\n          // don't squeeze out UNC patterns\n          if (i === 1 && p === '' && parts[0] === '') continue\n          if (p === '.' || p === '') {\n            didSomething = true\n            parts.splice(i, 1)\n            i--\n          }\n        }\n        if (\n          parts[0] === '.' &&\n          parts.length === 2 &&\n          (parts[1] === '.' || parts[1] === '')\n        ) {\n          didSomething = true\n          parts.pop()\n        }\n      }\n\n      // <pre>/<p>/../<rest> -> <pre>/<rest>\n      let dd: number = 0\n      while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n        const p = parts[dd - 1]\n        if (p && p !== '.' && p !== '..' && p !== '**') {\n          didSomething = true\n          parts.splice(dd - 1, 2)\n          dd -= 2\n        }\n      }\n    } while (didSomething)\n    return parts.length === 0 ? [''] : parts\n  }\n\n  // First phase: single-pattern processing\n  // <pre> is 1 or more portions\n  // <rest> is 1 or more portions\n  // <p> is any portion other than ., .., '', or **\n  // <e> is . or ''\n  //\n  // **/.. is *brutal* for filesystem walking performance, because\n  // it effectively resets the recursive walk each time it occurs,\n  // and ** cannot be reduced out by a .. pattern part like a regexp\n  // or most strings (other than .., ., and '') can be.\n  //\n  // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n  // <pre>/<e>/<rest> -> <pre>/<rest>\n  // <pre>/<p>/../<rest> -> <pre>/<rest>\n  // **/**/<rest> -> **/<rest>\n  //\n  // **/*/<rest> -> */**/<rest> <== not valid because ** doesn't follow\n  // this WOULD be allowed if ** did follow symlinks, or * didn't\n  firstPhasePreProcess(globParts: string[][]) {\n    let didSomething = false\n    do {\n      didSomething = false\n      // <pre>/**/../<p>/<p>/<rest> -> {<pre>/../<p>/<p>/<rest>,<pre>/**/<p>/<p>/<rest>}\n      for (let parts of globParts) {\n        let gs: number = -1\n        while (-1 !== (gs = parts.indexOf('**', gs + 1))) {\n          let gss: number = gs\n          while (parts[gss + 1] === '**') {\n            // <pre>/**/**/<rest> -> <pre>/**/<rest>\n            gss++\n          }\n          // eg, if gs is 2 and gss is 4, that means we have 3 **\n          // parts, and can remove 2 of them.\n          if (gss > gs) {\n            parts.splice(gs + 1, gss - gs)\n          }\n\n          let next = parts[gs + 1]\n          const p = parts[gs + 2]\n          const p2 = parts[gs + 3]\n          if (next !== '..') continue\n          if (\n            !p ||\n            p === '.' ||\n            p === '..' ||\n            !p2 ||\n            p2 === '.' ||\n            p2 === '..'\n          ) {\n            continue\n          }\n          didSomething = true\n          // edit parts in place, and push the new one\n          parts.splice(gs, 1)\n          const other = parts.slice(0)\n          other[gs] = '**'\n          globParts.push(other)\n          gs--\n        }\n\n        // <pre>/<e>/<rest> -> <pre>/<rest>\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1; i < parts.length - 1; i++) {\n            const p = parts[i]\n            // don't squeeze out UNC patterns\n            if (i === 1 && p === '' && parts[0] === '') continue\n            if (p === '.' || p === '') {\n              didSomething = true\n              parts.splice(i, 1)\n              i--\n            }\n          }\n          if (\n            parts[0] === '.' &&\n            parts.length === 2 &&\n            (parts[1] === '.' || parts[1] === '')\n          ) {\n            didSomething = true\n            parts.pop()\n          }\n        }\n\n        // <pre>/<p>/../<rest> -> <pre>/<rest>\n        let dd: number = 0\n        while (-1 !== (dd = parts.indexOf('..', dd + 1))) {\n          const p = parts[dd - 1]\n          if (p && p !== '.' && p !== '..' && p !== '**') {\n            didSomething = true\n            const needDot = dd === 1 && parts[dd + 1] === '**'\n            const splin = needDot ? ['.'] : []\n            parts.splice(dd - 1, 2, ...splin)\n            if (parts.length === 0) parts.push('')\n            dd -= 2\n          }\n        }\n      }\n    } while (didSomething)\n\n    return globParts\n  }\n\n  // second phase: multi-pattern dedupes\n  // {<pre>/*/<rest>,<pre>/<p>/<rest>} -> <pre>/*/<rest>\n  // {<pre>/<rest>,<pre>/<rest>} -> <pre>/<rest>\n  // {<pre>/**/<rest>,<pre>/<rest>} -> <pre>/**/<rest>\n  //\n  // {<pre>/**/<rest>,<pre>/**/<p>/<rest>} -> <pre>/**/<rest>\n  // ^-- not valid because ** doens't follow symlinks\n  secondPhasePreProcess(globParts: string[][]): string[][] {\n    for (let i = 0; i < globParts.length - 1; i++) {\n      for (let j = i + 1; j < globParts.length; j++) {\n        const matched = this.partsMatch(\n          globParts[i],\n          globParts[j],\n          !this.preserveMultipleSlashes\n        )\n        if (!matched) continue\n        globParts[i] = matched\n        globParts[j] = []\n      }\n    }\n    return globParts.filter(gs => gs.length)\n  }\n\n  partsMatch(\n    a: string[],\n    b: string[],\n    emptyGSMatch: boolean = false\n  ): false | string[] {\n    let ai = 0\n    let bi = 0\n    let result: string[] = []\n    let which: string = ''\n    while (ai < a.length && bi < b.length) {\n      if (a[ai] === b[bi]) {\n        result.push(which === 'b' ? b[bi] : a[ai])\n        ai++\n        bi++\n      } else if (emptyGSMatch && a[ai] === '**' && b[bi] === a[ai + 1]) {\n        result.push(a[ai])\n        ai++\n      } else if (emptyGSMatch && b[bi] === '**' && a[ai] === b[bi + 1]) {\n        result.push(b[bi])\n        bi++\n      } else if (\n        a[ai] === '*' &&\n        b[bi] &&\n        (this.options.dot || !b[bi].startsWith('.')) &&\n        b[bi] !== '**'\n      ) {\n        if (which === 'b') return false\n        which = 'a'\n        result.push(a[ai])\n        ai++\n        bi++\n      } else if (\n        b[bi] === '*' &&\n        a[ai] &&\n        (this.options.dot || !a[ai].startsWith('.')) &&\n        a[ai] !== '**'\n      ) {\n        if (which === 'a') return false\n        which = 'b'\n        result.push(b[bi])\n        ai++\n        bi++\n      } else {\n        return false\n      }\n    }\n    // if we fall out of the loop, it means they two are identical\n    // as long as their lengths match\n    return a.length === b.length && result\n  }\n\n  parseNegate() {\n    if (this.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne(file: string[], pattern: ParseReturn[], partial: boolean = false) {\n    const options = this.options\n\n    // a UNC pattern like //?/c:/* can match a path like c:/x\n    // and vice versa\n    if (this.isWindows) {\n      const fileUNC =\n        file[0] === '' &&\n        file[1] === '' &&\n        file[2] === '?' &&\n        typeof file[3] === 'string' &&\n        /^[a-z]:$/i.test(file[3])\n      const patternUNC =\n        pattern[0] === '' &&\n        pattern[1] === '' &&\n        pattern[2] === '?' &&\n        typeof pattern[3] === 'string' &&\n        /^[a-z]:$/i.test(pattern[3])\n\n      if (fileUNC && patternUNC) {\n        const fd = file[3] as string\n        const pd = pattern[3] as string\n        if (fd.toLowerCase() === pd.toLowerCase()) {\n          file[3] = pd\n        }\n      } else if (patternUNC && typeof file[0] === 'string') {\n        const pd = pattern[3] as string\n        const fd = file[0]\n        if (pd.toLowerCase() === fd.toLowerCase()) {\n          pattern[3] = fd\n          pattern = pattern.slice(3)\n        }\n      } else if (fileUNC && typeof pattern[0] === 'string') {\n        const fd = file[3]\n        if (fd.toLowerCase() === pattern[0].toLowerCase()) {\n          pattern[0] = fd\n          file = file.slice(3)\n        }\n      }\n    }\n\n    // resolve and reduce . and .. portions in the file as well.\n    // dont' need to do the second phase, because it's only one string[]\n    const { optimizationLevel = 1 } = this.options\n    if (optimizationLevel >= 2) {\n      file = this.levelTwoFileOptimize(file)\n    }\n\n    this.debug('matchOne', this, { file, pattern })\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (\n      var fi = 0, pi = 0, fl = file.length, pl = pattern.length;\n      fi < fl && pi < pl;\n      fi++, pi++\n    ) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* c8 ignore start */\n      if (p === false) {\n        return false\n      }\n      /* c8 ignore stop */\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (\n              file[fi] === '.' ||\n              file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')\n            )\n              return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (\n              swallowee === '.' ||\n              swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')\n            ) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        /* c8 ignore start */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) {\n            return true\n          }\n        }\n        /* c8 ignore stop */\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      let hit: boolean\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = p.test(f)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return fi === fl - 1 && file[fi] === ''\n\n      /* c8 ignore start */\n    } else {\n      // should be unreachable.\n      throw new Error('wtf?')\n    }\n    /* c8 ignore stop */\n  }\n\n  braceExpand() {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse(pattern: string): ParseReturn {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') return GLOBSTAR\n    if (pattern === '') return ''\n\n    // far and away, the most common glob pattern parts are\n    // *, *.*, and *.<ext>  Add a fast check method for those.\n    let m: RegExpMatchArray | null\n    let fastTest: null | ((f: string) => boolean) = null\n    if ((m = pattern.match(starRE))) {\n      fastTest = options.dot ? starTestDot : starTest\n    } else if ((m = pattern.match(starDotExtRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? starDotExtTestNocaseDot\n            : starDotExtTestNocase\n          : options.dot\n          ? starDotExtTestDot\n          : starDotExtTest\n      )(m[1])\n    } else if ((m = pattern.match(qmarksRE))) {\n      fastTest = (\n        options.nocase\n          ? options.dot\n            ? qmarksTestNocaseDot\n            : qmarksTestNocase\n          : options.dot\n          ? qmarksTestDot\n          : qmarksTest\n      )(m)\n    } else if ((m = pattern.match(starDotStarRE))) {\n      fastTest = options.dot ? starDotStarTestDot : starDotStarTest\n    } else if ((m = pattern.match(dotStarRE))) {\n      fastTest = dotStarTest\n    }\n\n    const re = AST.fromGlob(pattern, this.options).toMMPattern()\n    return fastTest ? Object.assign(re, { test: fastTest }) : re\n  }\n\n  makeRe() {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar\n      ? star\n      : options.dot\n      ? twoStarDot\n      : twoStarNoDot\n    const flags = new Set(options.nocase ? ['i'] : [])\n\n    // regexpify non-globstar patterns\n    // if ** is only item, then we just do one twoStar\n    // if ** is first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if ** is last, append (\\/twoStar|) to previous\n    // if ** is in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set\n      .map(pattern => {\n        const pp: (string | typeof GLOBSTAR)[] = pattern.map(p => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split('')) flags.add(f)\n          }\n          return typeof p === 'string'\n            ? regExpEscape(p)\n            : p === GLOBSTAR\n            ? GLOBSTAR\n            : p._src\n        }) as (string | typeof GLOBSTAR)[]\n        pp.forEach((p, i) => {\n          const next = pp[i + 1]\n          const prev = pp[i - 1]\n          if (p !== GLOBSTAR || prev === GLOBSTAR) {\n            return\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== GLOBSTAR) {\n              pp[i + 1] = '(?:\\\\/|' + twoStar + '\\\\/)?' + next\n            } else {\n              pp[i] = twoStar\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + '(?:\\\\/|' + twoStar + ')?'\n          } else if (next !== GLOBSTAR) {\n            pp[i - 1] = prev + '(?:\\\\/|\\\\/' + twoStar + '\\\\/)' + next\n            pp[i + 1] = GLOBSTAR\n          }\n        })\n        return pp.filter(p => p !== GLOBSTAR).join('/')\n      })\n      .join('|')\n\n    // need to wrap in parens if we had more than one thing with |,\n    // otherwise only the first will be anchored to ^ and the last to $\n    const [open, close] = set.length > 1 ? ['(?:', ')'] : ['', '']\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^' + open + re + close + '$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').+$'\n\n    try {\n      this.regexp = new RegExp(re, [...flags].join(''))\n      /* c8 ignore start */\n    } catch (ex) {\n      // should be impossible\n      this.regexp = false\n    }\n    /* c8 ignore stop */\n    return this.regexp\n  }\n\n  slashSplit(p: string) {\n    // if p starts with // on windows, we preserve that\n    // so that UNC paths aren't broken.  Otherwise, any number of\n    // / characters are coalesced into one, unless\n    // preserveMultipleSlashes is set to true.\n    if (this.preserveMultipleSlashes) {\n      return p.split('/')\n    } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n      // add an extra '' for the one we lose\n      return ['', ...p.split(/\\/+/)]\n    } else {\n      return p.split(/\\/+/)\n    }\n  }\n\n  match(f: string, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) {\n      return false\n    }\n    if (this.empty) {\n      return f === ''\n    }\n\n    if (f === '/' && partial) {\n      return true\n    }\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (this.isWindows) {\n      f = f.split('\\\\').join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    const ff = this.slashSplit(f)\n    this.debug(this.pattern, 'split', ff)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename: string = ff[ff.length - 1]\n    if (!filename) {\n      for (let i = ff.length - 2; !filename && i >= 0; i--) {\n        filename = ff[i]\n      }\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = ff\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) {\n          return true\n        }\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) {\n      return false\n    }\n    return this.negate\n  }\n\n  static defaults(def: MinimatchOptions) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n/* c8 ignore start */\nexport { AST } from './ast.js'\nexport { escape } from './escape.js'\nexport { unescape } from './unescape.js'\n/* c8 ignore stop */\nminimatch.AST = AST\nminimatch.Minimatch = Minimatch\nminimatch.escape = escape\nminimatch.unescape = unescape\n","const MAX_PATTERN_LENGTH = 1024 * 64\nexport const assertValidPattern: (pattern: any) => void = (\n  pattern: any\n): asserts pattern is string => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n","// translate the various posix character classes into unicode properties\n// this works across all unicode locales\n\n// { <posix class>: [<translation>, /u flag required, negated]\nconst posixClasses: { [k: string]: [e: string, u: boolean, n?: boolean] } = {\n  '[:alnum:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}', true],\n  '[:alpha:]': ['\\\\p{L}\\\\p{Nl}', true],\n  '[:ascii:]': ['\\\\x' + '00-\\\\x' + '7f', false],\n  '[:blank:]': ['\\\\p{Zs}\\\\t', true],\n  '[:cntrl:]': ['\\\\p{Cc}', true],\n  '[:digit:]': ['\\\\p{Nd}', true],\n  '[:graph:]': ['\\\\p{Z}\\\\p{C}', true, true],\n  '[:lower:]': ['\\\\p{Ll}', true],\n  '[:print:]': ['\\\\p{C}', true],\n  '[:punct:]': ['\\\\p{P}', true],\n  '[:space:]': ['\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f', true],\n  '[:upper:]': ['\\\\p{Lu}', true],\n  '[:word:]': ['\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}', true],\n  '[:xdigit:]': ['A-Fa-f0-9', false],\n}\n\n// only need to escape a few things inside of brace expressions\n// escapes: [ \\ ] -\nconst braceEscape = (s: string) => s.replace(/[[\\]\\\\-]/g, '\\\\$&')\n// escape all regexp magic characters\nconst regexpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// everything has already been escaped, we just have to join\nconst rangesToString = (ranges: string[]): string => ranges.join('')\n\nexport type ParseClassResult = [\n  src: string,\n  uFlag: boolean,\n  consumed: number,\n  hasMagic: boolean\n]\n\n// takes a glob string at a posix brace expression, and returns\n// an equivalent regular expression source, and boolean indicating\n// whether the /u flag needs to be applied, and the number of chars\n// consumed to parse the character class.\n// This also removes out of order ranges, and returns ($.) if the\n// entire class just no good.\nexport const parseClass = (\n  glob: string,\n  position: number\n): ParseClassResult => {\n  const pos = position\n  /* c8 ignore start */\n  if (glob.charAt(pos) !== '[') {\n    throw new Error('not in a brace expression')\n  }\n  /* c8 ignore stop */\n  const ranges: string[] = []\n  const negs: string[] = []\n\n  let i = pos + 1\n  let sawStart = false\n  let uflag = false\n  let escaping = false\n  let negate = false\n  let endPos = pos\n  let rangeStart = ''\n  WHILE: while (i < glob.length) {\n    const c = glob.charAt(i)\n    if ((c === '!' || c === '^') && i === pos + 1) {\n      negate = true\n      i++\n      continue\n    }\n\n    if (c === ']' && sawStart && !escaping) {\n      endPos = i + 1\n      break\n    }\n\n    sawStart = true\n    if (c === '\\\\') {\n      if (!escaping) {\n        escaping = true\n        i++\n        continue\n      }\n      // escaped \\ char, fall through and treat like normal char\n    }\n    if (c === '[' && !escaping) {\n      // either a posix class, a collation equivalent, or just a [\n      for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n        if (glob.startsWith(cls, i)) {\n          // invalid, [a-[] is fine, but not [a-[:alpha]]\n          if (rangeStart) {\n            return ['$.', false, glob.length - pos, true]\n          }\n          i += cls.length\n          if (neg) negs.push(unip)\n          else ranges.push(unip)\n          uflag = uflag || u\n          continue WHILE\n        }\n      }\n    }\n\n    // now it's just a normal character, effectively\n    escaping = false\n    if (rangeStart) {\n      // throw this range away if it's not valid, but others\n      // can still match.\n      if (c > rangeStart) {\n        ranges.push(braceEscape(rangeStart) + '-' + braceEscape(c))\n      } else if (c === rangeStart) {\n        ranges.push(braceEscape(c))\n      }\n      rangeStart = ''\n      i++\n      continue\n    }\n\n    // now might be the start of a range.\n    // can be either c-d or c-] or c<more...>] or c] at this point\n    if (glob.startsWith('-]', i + 1)) {\n      ranges.push(braceEscape(c + '-'))\n      i += 2\n      continue\n    }\n    if (glob.startsWith('-', i + 1)) {\n      rangeStart = c\n      i += 2\n      continue\n    }\n\n    // not the start of a range, just a single character\n    ranges.push(braceEscape(c))\n    i++\n  }\n\n  if (endPos < i) {\n    // didn't see the end of the class, not a valid class,\n    // but might still be valid as a literal match.\n    return ['', false, 0, false]\n  }\n\n  // if we got no ranges and no negates, then we have a range that\n  // cannot possibly match anything, and that poisons the whole glob\n  if (!ranges.length && !negs.length) {\n    return ['$.', false, glob.length - pos, true]\n  }\n\n  // if we got one positive range, and it's a single character, then that's\n  // not actually a magic pattern, it's just that one literal character.\n  // we should not treat that as \"magic\", we should just return the literal\n  // character. [_] is a perfectly valid way to escape glob magic chars.\n  if (\n    negs.length === 0 &&\n    ranges.length === 1 &&\n    /^\\\\?.$/.test(ranges[0]) &&\n    !negate\n  ) {\n    const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0]\n    return [regexpEscape(r), false, endPos - pos, false]\n  }\n\n  const sranges = '[' + (negate ? '^' : '') + rangesToString(ranges) + ']'\n  const snegs = '[' + (negate ? '' : '^') + rangesToString(negs) + ']'\n  const comb =\n    ranges.length && negs.length\n      ? '(' + sranges + '|' + snegs + ')'\n      : ranges.length\n      ? sranges\n      : snegs\n\n  return [comb, uflag, endPos - pos, true]\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Un-escape a string that has been escaped with {@link escape}.\n *\n * If the {@link windowsPathsNoEscape} option is used, then square-brace\n * escapes are removed, but not backslash escapes.  For example, it will turn\n * the string `'[*]'` into `*`, but it will not turn `'\\\\*'` into `'*'`,\n * becuase `\\` is a path separator in `windowsPathsNoEscape` mode.\n *\n * When `windowsPathsNoEscape` is not set, then both brace escapes and\n * backslash escapes are removed.\n *\n * Slashes (and backslashes in `windowsPathsNoEscape` mode) cannot be escaped\n * or unescaped.\n */\nexport const unescape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  return windowsPathsNoEscape\n    ? s.replace(/\\[([^\\/\\\\])\\]/g, '$1')\n    : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, '$1$2').replace(/\\\\([^\\/])/g, '$1')\n}\n","// parse a single path portion\n\nimport { MinimatchOptions, MMRegExp } from './index.js'\nimport { parseClass } from './brace-expressions.js'\nimport { unescape } from './unescape.js'\n\n// classes [] are handled by the parseClass method\n// for positive extglobs, we sub-parse the contents, and combine,\n// with the appropriate regexp close.\n// for negative extglobs, we sub-parse the contents, but then\n// have to include the rest of the pattern, then the parent, etc.,\n// as the thing that cannot be because RegExp negative lookaheads\n// are different from globs.\n//\n// So for example:\n// a@(i|w!(x|y)z|j)b => ^a(i|w((!?(x|y)zb).*)z|j)b$\n//   1   2 3   4 5 6      1   2    3   46      5 6\n//\n// Assembling the extglob requires not just the negated patterns themselves,\n// but also anything following the negative patterns up to the boundary\n// of the current pattern, plus anything following in the parent pattern.\n//\n//\n// So, first, we parse the string into an AST of extglobs, without turning\n// anything into regexps yet.\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y']}, 'z'], ['j']]}, 'b']\n//\n// Then, for all the negative extglobs, we append whatever comes after in\n// each parent as their tail\n//\n// ['a', {@ [['i'], ['w', {!['x', 'y'], 'z', 'b'}, 'z'], ['j']]}, 'b']\n//\n// Lastly, we turn each of these pieces into a regexp, and join\n//\n//                                 v----- .* because there's more following,\n//                                 v    v  otherwise, .+ because it must be\n//                                 v    v  *something* there.\n// ['^a', {@ ['i', 'w(?:(!?(?:x|y).*zb$).*)z', 'j' ]}, 'b$']\n//   copy what follows into here--^^^^^\n// ['^a', '(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)', 'b$']\n// ['^a(?:i|w(?:(?!(?:x|y).*zb$).*)z|j)b$']\n\nexport type ExtglobType = '!' | '?' | '+' | '*' | '@'\nconst types = new Set<ExtglobType>(['!', '?', '+', '*', '@'])\nconst isExtglobType = (c: string): c is ExtglobType =>\n  types.has(c as ExtglobType)\n\n// Patterns that get prepended to bind to the start of either the\n// entire string, or just a single path portion, to prevent dots\n// and/or traversal patterns, when needed.\n// Exts don't need the ^ or / bit, because the root binds that already.\nconst startNoTraversal = '(?!\\\\.\\\\.?(?:$|/))'\nconst startNoDot = '(?!\\\\.)'\n\n// characters that indicate a start of pattern needs the \"no dots\" bit,\n// because a dot *might* be matched. ( is not in the list, because in\n// the case of a child extglob, it will handle the prevention itself.\nconst addPatternStart = new Set(['[', '.'])\n// cases where traversal is A-OK, no dot prevention needed\nconst justDots = new Set(['..', '.'])\nconst reSpecials = new Set('().*{}+?[]^$\\\\!')\nconst regExpEscape = (s: string) =>\n  s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n\n// any single thing other than /\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n// use + when we need to ensure that *something* matches, because the * is\n// the only thing in the path portion.\nconst starNoEmpty = qmark + '+?'\n\n// remove the \\ chars that we added if we end up doing a nonmagic compare\n// const deslash = (s: string) => s.replace(/\\\\(.)/g, '$1')\n\nexport class AST {\n  type: ExtglobType | null\n  readonly #root: AST\n\n  #hasMagic?: boolean\n  #uflag: boolean = false\n  #parts: (string | AST)[] = []\n  readonly #parent?: AST\n  readonly #parentIndex: number\n  #negs: AST[]\n  #filledNegs: boolean = false\n  #options: MinimatchOptions\n  #toString?: string\n  // set to true if it's an extglob with no children\n  // (which really means one child of '')\n  #emptyExt: boolean = false\n\n  constructor(\n    type: ExtglobType | null,\n    parent?: AST,\n    options: MinimatchOptions = {}\n  ) {\n    this.type = type\n    // extglobs are inherently magical\n    if (type) this.#hasMagic = true\n    this.#parent = parent\n    this.#root = this.#parent ? this.#parent.#root : this\n    this.#options = this.#root === this ? options : this.#root.#options\n    this.#negs = this.#root === this ? [] : this.#root.#negs\n    if (type === '!' && !this.#root.#filledNegs) this.#negs.push(this)\n    this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0\n  }\n\n  get hasMagic(): boolean | undefined {\n    /* c8 ignore start */\n    if (this.#hasMagic !== undefined) return this.#hasMagic\n    /* c8 ignore stop */\n    for (const p of this.#parts) {\n      if (typeof p === 'string') continue\n      if (p.type || p.hasMagic) return (this.#hasMagic = true)\n    }\n    // note: will be undefined until we generate the regexp src and find out\n    return this.#hasMagic\n  }\n\n  // reconstructs the pattern\n  toString(): string {\n    if (this.#toString !== undefined) return this.#toString\n    if (!this.type) {\n      return (this.#toString = this.#parts.map(p => String(p)).join(''))\n    } else {\n      return (this.#toString =\n        this.type + '(' + this.#parts.map(p => String(p)).join('|') + ')')\n    }\n  }\n\n  #fillNegs() {\n    /* c8 ignore start */\n    if (this !== this.#root) throw new Error('should only call on root')\n    if (this.#filledNegs) return this\n    /* c8 ignore stop */\n\n    // call toString() once to fill this out\n    this.toString()\n    this.#filledNegs = true\n    let n: AST | undefined\n    while ((n = this.#negs.pop())) {\n      if (n.type !== '!') continue\n      // walk up the tree, appending everthing that comes AFTER parentIndex\n      let p: AST | undefined = n\n      let pp = p.#parent\n      while (pp) {\n        for (\n          let i = p.#parentIndex + 1;\n          !pp.type && i < pp.#parts.length;\n          i++\n        ) {\n          for (const part of n.#parts) {\n            /* c8 ignore start */\n            if (typeof part === 'string') {\n              throw new Error('string part in extglob AST??')\n            }\n            /* c8 ignore stop */\n            part.copyIn(pp.#parts[i])\n          }\n        }\n        p = pp\n        pp = p.#parent\n      }\n    }\n    return this\n  }\n\n  push(...parts: (string | AST)[]) {\n    for (const p of parts) {\n      if (p === '') continue\n      /* c8 ignore start */\n      if (typeof p !== 'string' && !(p instanceof AST && p.#parent === this)) {\n        throw new Error('invalid part: ' + p)\n      }\n      /* c8 ignore stop */\n      this.#parts.push(p)\n    }\n  }\n\n  toJSON() {\n    const ret: any[] =\n      this.type === null\n        ? this.#parts.slice().map(p => (typeof p === 'string' ? p : p.toJSON()))\n        : [this.type, ...this.#parts.map(p => (p as AST).toJSON())]\n    if (this.isStart() && !this.type) ret.unshift([])\n    if (\n      this.isEnd() &&\n      (this === this.#root ||\n        (this.#root.#filledNegs && this.#parent?.type === '!'))\n    ) {\n      ret.push({})\n    }\n    return ret\n  }\n\n  isStart(): boolean {\n    if (this.#root === this) return true\n    // if (this.type) return !!this.#parent?.isStart()\n    if (!this.#parent?.isStart()) return false\n    if (this.#parentIndex === 0) return true\n    // if everything AHEAD of this is a negation, then it's still the \"start\"\n    const p = this.#parent\n    for (let i = 0; i < this.#parentIndex; i++) {\n      const pp = p.#parts[i]\n      if (!(pp instanceof AST && pp.type === '!')) {\n        return false\n      }\n    }\n    return true\n  }\n\n  isEnd(): boolean {\n    if (this.#root === this) return true\n    if (this.#parent?.type === '!') return true\n    if (!this.#parent?.isEnd()) return false\n    if (!this.type) return this.#parent?.isEnd()\n    // if not root, it'll always have a parent\n    /* c8 ignore start */\n    const pl = this.#parent ? this.#parent.#parts.length : 0\n    /* c8 ignore stop */\n    return this.#parentIndex === pl - 1\n  }\n\n  copyIn(part: AST | string) {\n    if (typeof part === 'string') this.push(part)\n    else this.push(part.clone(this))\n  }\n\n  clone(parent: AST) {\n    const c = new AST(this.type, parent)\n    for (const p of this.#parts) {\n      c.copyIn(p)\n    }\n    return c\n  }\n\n  static #parseAST(\n    str: string,\n    ast: AST,\n    pos: number,\n    opt: MinimatchOptions\n  ): number {\n    let escaping = false\n    let inBrace = false\n    let braceStart = -1\n    let braceNeg = false\n    if (ast.type === null) {\n      // outside of a extglob, append until we find a start\n      let i = pos\n      let acc = ''\n      while (i < str.length) {\n        const c = str.charAt(i++)\n        // still accumulate escapes at this point, but we do ignore\n        // starts that are escaped\n        if (escaping || c === '\\\\') {\n          escaping = !escaping\n          acc += c\n          continue\n        }\n\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === '^' || c === '!') {\n              braceNeg = true\n            }\n          } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false\n          }\n          acc += c\n          continue\n        } else if (c === '[') {\n          inBrace = true\n          braceStart = i\n          braceNeg = false\n          acc += c\n          continue\n        }\n\n        if (!opt.noext && isExtglobType(c) && str.charAt(i) === '(') {\n          ast.push(acc)\n          acc = ''\n          const ext = new AST(c, ast)\n          i = AST.#parseAST(str, ext, i, opt)\n          ast.push(ext)\n          continue\n        }\n        acc += c\n      }\n      ast.push(acc)\n      return i\n    }\n\n    // some kind of extglob, pos is at the (\n    // find the next | or )\n    let i = pos + 1\n    let part = new AST(null, ast)\n    const parts: AST[] = []\n    let acc = ''\n    while (i < str.length) {\n      const c = str.charAt(i++)\n      // still accumulate escapes at this point, but we do ignore\n      // starts that are escaped\n      if (escaping || c === '\\\\') {\n        escaping = !escaping\n        acc += c\n        continue\n      }\n\n      if (inBrace) {\n        if (i === braceStart + 1) {\n          if (c === '^' || c === '!') {\n            braceNeg = true\n          }\n        } else if (c === ']' && !(i === braceStart + 2 && braceNeg)) {\n          inBrace = false\n        }\n        acc += c\n        continue\n      } else if (c === '[') {\n        inBrace = true\n        braceStart = i\n        braceNeg = false\n        acc += c\n        continue\n      }\n\n      if (isExtglobType(c) && str.charAt(i) === '(') {\n        part.push(acc)\n        acc = ''\n        const ext = new AST(c, part)\n        part.push(ext)\n        i = AST.#parseAST(str, ext, i, opt)\n        continue\n      }\n      if (c === '|') {\n        part.push(acc)\n        acc = ''\n        parts.push(part)\n        part = new AST(null, ast)\n        continue\n      }\n      if (c === ')') {\n        if (acc === '' && ast.#parts.length === 0) {\n          ast.#emptyExt = true\n        }\n        part.push(acc)\n        acc = ''\n        ast.push(...parts, part)\n        return i\n      }\n      acc += c\n    }\n\n    // unfinished extglob\n    // if we got here, it was a malformed extglob! not an extglob, but\n    // maybe something else in there.\n    ast.type = null\n    ast.#hasMagic = undefined\n    ast.#parts = [str.substring(pos - 1)]\n    return i\n  }\n\n  static fromGlob(pattern: string, options: MinimatchOptions = {}) {\n    const ast = new AST(null, undefined, options)\n    AST.#parseAST(pattern, ast, 0, options)\n    return ast\n  }\n\n  // returns the regular expression if there's magic, or the unescaped\n  // string if not.\n  toMMPattern(): MMRegExp | string {\n    // should only be called on root\n    /* c8 ignore start */\n    if (this !== this.#root) return this.#root.toMMPattern()\n    /* c8 ignore stop */\n    const glob = this.toString()\n    const [re, body, hasMagic, uflag] = this.toRegExpSource()\n    // if we're in nocase mode, and not nocaseMagicOnly, then we do\n    // still need a regular expression if we have to case-insensitively\n    // match capital/lowercase characters.\n    const anyMagic =\n      hasMagic ||\n      this.#hasMagic ||\n      (this.#options.nocase &&\n        !this.#options.nocaseMagicOnly &&\n        glob.toUpperCase() !== glob.toLowerCase())\n    if (!anyMagic) {\n      return body\n    }\n\n    const flags = (this.#options.nocase ? 'i' : '') + (uflag ? 'u' : '')\n    return Object.assign(new RegExp(`^${re}$`, flags), {\n      _src: re,\n      _glob: glob,\n    })\n  }\n\n  // returns the string match, the regexp source, whether there's magic\n  // in the regexp (so a regular expression is required) and whether or\n  // not the uflag is needed for the regular expression (for posix classes)\n  // TODO: instead of injecting the start/end at this point, just return\n  // the BODY of the regexp, along with the start/end portions suitable\n  // for binding the start/end in either a joined full-path makeRe context\n  // (where we bind to (^|/), or a standalone matchPart context (where\n  // we bind to ^, and not /).  Otherwise slashes get duped!\n  //\n  // In part-matching mode, the start is:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: ^(?!\\.\\.?$)\n  // - if dots allowed or not possible: ^\n  // - if dots possible and not allowed: ^(?!\\.)\n  // end is:\n  // - if not isEnd(): nothing\n  // - else: $\n  //\n  // In full-path matching mode, we put the slash at the START of the\n  // pattern, so start is:\n  // - if first pattern: same as part-matching mode\n  // - if not isStart(): nothing\n  // - if traversal possible, but not allowed: /(?!\\.\\.?(?:$|/))\n  // - if dots allowed or not possible: /\n  // - if dots possible and not allowed: /(?!\\.)\n  // end is:\n  // - if last pattern, same as part-matching mode\n  // - else nothing\n  //\n  // Always put the (?:$|/) on negated tails, though, because that has to be\n  // there to bind the end of the negated pattern portion, and it's easier to\n  // just stick it in now rather than try to inject it later in the middle of\n  // the pattern.\n  //\n  // We can just always return the same end, and leave it up to the caller\n  // to know whether it's going to be used joined or in parts.\n  // And, if the start is adjusted slightly, can do the same there:\n  // - if not isStart: nothing\n  // - if traversal possible, but not allowed: (?:/|^)(?!\\.\\.?$)\n  // - if dots allowed or not possible: (?:/|^)\n  // - if dots possible and not allowed: (?:/|^)(?!\\.)\n  //\n  // But it's better to have a simpler binding without a conditional, for\n  // performance, so probably better to return both start options.\n  //\n  // Then the caller just ignores the end if it's not the first pattern,\n  // and the start always gets applied.\n  //\n  // But that's always going to be $ if it's the ending pattern, or nothing,\n  // so the caller can just attach $ at the end of the pattern when building.\n  //\n  // So the todo is:\n  // - better detect what kind of start is needed\n  // - return both flavors of starting pattern\n  // - attach $ at the end of the pattern when creating the actual RegExp\n  //\n  // Ah, but wait, no, that all only applies to the root when the first pattern\n  // is not an extglob. If the first pattern IS an extglob, then we need all\n  // that dot prevention biz to live in the extglob portions, because eg\n  // +(*|.x*) can match .xy but not .yx.\n  //\n  // So, return the two flavors if it's #root and the first child is not an\n  // AST, otherwise leave it to the child AST to handle it, and there,\n  // use the (?:^|/) style of start binding.\n  //\n  // Even simplified further:\n  // - Since the start for a join is eg /(?!\\.) and the start for a part\n  // is ^(?!\\.), we can just prepend (?!\\.) to the pattern (either root\n  // or start or whatever) and prepend ^ or / at the Regexp construction.\n  toRegExpSource(): [\n    re: string,\n    body: string,\n    hasMagic: boolean,\n    uflag: boolean\n  ] {\n    if (this.#root === this) this.#fillNegs()\n    if (!this.type) {\n      const noEmpty = this.isStart() && this.isEnd()\n      const src = this.#parts\n        .map(p => {\n          const [re, _, hasMagic, uflag] =\n            typeof p === 'string'\n              ? AST.#parseGlob(p, this.#hasMagic, noEmpty)\n              : p.toRegExpSource()\n          this.#hasMagic = this.#hasMagic || hasMagic\n          this.#uflag = this.#uflag || uflag\n          return re\n        })\n        .join('')\n\n      let start = ''\n      if (this.isStart()) {\n        if (typeof this.#parts[0] === 'string') {\n          // this is the string that will match the start of the pattern,\n          // so we need to protect against dots and such.\n\n          // '.' and '..' cannot match unless the pattern is that exactly,\n          // even if it starts with . or dot:true is set.\n          const dotTravAllowed =\n            this.#parts.length === 1 && justDots.has(this.#parts[0])\n          if (!dotTravAllowed) {\n            const aps = addPatternStart\n            // check if we have a possibility of matching . or ..,\n            // and prevent that.\n            const needNoTrav =\n              // dots are allowed, and the pattern starts with [ or .\n              (this.#options.dot && aps.has(src.charAt(0))) ||\n              // the pattern starts with \\., and then [ or .\n              (src.startsWith('\\\\.') && aps.has(src.charAt(2))) ||\n              // the pattern starts with \\.\\., and then [ or .\n              (src.startsWith('\\\\.\\\\.') && aps.has(src.charAt(4)))\n            // no need to prevent dots if it can't match a dot, or if a\n            // sub-pattern will be preventing it anyway.\n            const needNoDot = !this.#options.dot && aps.has(src.charAt(0))\n\n            start = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : ''\n          }\n        }\n      }\n\n      // append the \"end of path portion\" pattern to negation tails\n      let end = ''\n      if (\n        this.isEnd() &&\n        this.#root.#filledNegs &&\n        this.#parent?.type === '!'\n      ) {\n        end = '(?:$|\\\\/)'\n      }\n      const final = start + src + end\n      return [\n        final,\n        unescape(src),\n        (this.#hasMagic = !!this.#hasMagic),\n        this.#uflag,\n      ]\n    }\n\n    // some kind of extglob\n    const start = this.type === '!' ? '(?:(?!(?:' : '(?:'\n    const body = this.#parts\n      .map(p => {\n        // extglob ASTs should only contain parent ASTs\n        /* c8 ignore start */\n        if (typeof p === 'string') {\n          throw new Error('string type in extglob ast??')\n        }\n        /* c8 ignore stop */\n        // can ignore hasMagic, because extglobs are already always magic\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource()\n        this.#uflag = this.#uflag || uflag\n        return re\n      })\n      .filter(p => !(this.isStart() && this.isEnd()) || !!p)\n      .join('|')\n    if (this.isStart() && this.isEnd() && !body && this.type !== '!') {\n      // invalid extglob, has to at least be *something* present, if it's\n      // the entire path portion.\n      const s = this.toString()\n      this.#parts = [s]\n      this.type = null\n      this.#hasMagic = undefined\n      return [s, unescape(this.toString()), false, false]\n    }\n    // an empty !() is exactly equivalent to a starNoEmpty\n    let final = ''\n    if (this.type === '!' && this.#emptyExt) {\n      final =\n        (this.isStart() && !this.#options.dot ? startNoDot : '') + starNoEmpty\n    } else {\n      const close =\n        this.type === '!'\n          ? // !() must match something,but !(x) can match ''\n            '))' +\n            (this.isStart() && !this.#options.dot ? startNoDot : '') +\n            star +\n            ')'\n          : this.type === '@'\n          ? ')'\n          : `)${this.type}`\n      final = start + body + close\n    }\n    return [\n      final,\n      unescape(body),\n      (this.#hasMagic = !!this.#hasMagic),\n      this.#uflag,\n    ]\n  }\n\n  static #parseGlob(\n    glob: string,\n    hasMagic: boolean | undefined,\n    noEmpty: boolean = false\n  ): [re: string, body: string, hasMagic: boolean, uflag: boolean] {\n    let escaping = false\n    let re = ''\n    let uflag = false\n    for (let i = 0; i < glob.length; i++) {\n      const c = glob.charAt(i)\n      if (escaping) {\n        escaping = false\n        re += (reSpecials.has(c) ? '\\\\' : '') + c\n        continue\n      }\n      if (c === '\\\\') {\n        if (i === glob.length - 1) {\n          re += '\\\\\\\\'\n        } else {\n          escaping = true\n        }\n        continue\n      }\n      if (c === '[') {\n        const [src, needUflag, consumed, magic] = parseClass(glob, i)\n        if (consumed) {\n          re += src\n          uflag = uflag || needUflag\n          i += consumed - 1\n          hasMagic = hasMagic || magic\n          continue\n        }\n      }\n      if (c === '*') {\n        if (noEmpty && glob === '*') re += starNoEmpty\n        else re += star\n        hasMagic = true\n        continue\n      }\n      if (c === '?') {\n        re += qmark\n        hasMagic = true\n        continue\n      }\n      re += regExpEscape(c)\n    }\n    return [re, unescape(glob), !!hasMagic, uflag]\n  }\n}\n","import { MinimatchOptions } from './index.js'\n/**\n * Escape all magic characters in a glob pattern.\n *\n * If the {@link windowsPathsNoEscape | GlobOptions.windowsPathsNoEscape}\n * option is used, then characters are escaped by wrapping in `[]`, because\n * a magic character wrapped in a character class can only be satisfied by\n * that exact character.  In this mode, `\\` is _not_ escaped, because it is\n * not interpreted as a magic character, but instead as a path separator.\n */\nexport const escape = (\n  s: string,\n  {\n    windowsPathsNoEscape = false,\n  }: Pick<MinimatchOptions, 'windowsPathsNoEscape'> = {}\n) => {\n  // don't need to escape +@! because we escape the parens\n  // that make those magic, and escaping ! as [!] isn't valid,\n  // because [!]] is a valid glob class meaning not ']'.\n  return windowsPathsNoEscape\n    ? s.replace(/[?*()[\\]]/g, '[$&]')\n    : s.replace(/[?*()[\\]\\\\]/g, '\\\\$&')\n}\n","/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   */\n  export type DisposeReason = 'evict' | 'set' | 'delete'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Status object that may be passed to {@link LRUCache#fetch},\n   * {@link LRUCache#get}, {@link LRUCache#set}, and {@link LRUCache#has}.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no fetchMethod, so {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed\n     * by default, and MAY live in the cache long after they have expired.\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * Must be an integer number of ms. If set to 0, this indicates \"no TTL\"\n     *\n     * @default 0\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     * Note that this may significantly degrade performance,\n     * especially if the cache is storing a large number of items.\n     * It is almost always best to just leave the stale items in\n     * the cache, and let them fall out as new items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * @default false\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#get}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * Update the age of items on {@link LRUCache#has}, renewing their TTL\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * @default false\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the cache.\n     * This can be handy if you want to close file descriptors or do other\n     * cleanup tasks when items are no longer accessible. Called with `key,\n     * value`.  It's called before actually removing the item from the\n     * internal cache, so it is *NOT* safe to re-add them.\n     *\n     * Use {@link OptionsBase.disposeAfter} if you wish to dispose items after\n     * they have been full removed, when it is safe to add them back to the\n     * cache.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when\n     * setting a new value for an existing key (ie, when updating a value\n     * rather than inserting a new value).  Note that the TTL value is\n     * _always_ set (if provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * If you wish to track item size, you must provide a maxSize\n     * note that we still will only keep up to max *actual items*,\n     * if max is set, so size tracking may cause fewer than max items\n     * to be stored.  At the extreme, a single item of maxSize size\n     * will cause everything else in the cache to be dropped when it\n     * is added.  Use with caution!\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod}, then it will not be stored in the\n     * cache.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the\n     * {@link LRUCache#fetch} fails, not any other times.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches an `'abort'`\n     * event, whether user-triggered, or due to internal cache behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls are not\n     * immediately resolved or rejected when they are aborted, and instead\n     * take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> implements Map<K,V> {\n  // properties coming in from the options of these, only max and maxSize\n  // really *need* to be protected. The rest can be modified, as they just\n  // set defaults for various methods.\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the remaining TTL time for a given entry key\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.delete(this.#keyList[index] as K)\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string description of an object.\n   * Called by the built-in method Object.prototype.toString.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to Array.find().  fn is called as fn(value, key, cache).\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from\n   * most recently used to least recently used.  fn is called as\n   * fn(value, key, cache).  Does not update age or recenty of use.\n   * Does not iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.delete(this.#keyList[i] as K)\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Like {@link LRUCache#dump}, but just for a\n   * single key. Always returns stale values, if their info is found in the\n   * cache, so be sure to check for expired TTLs if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to cache.load()\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   * Note that the shape of the resulting cache may be different if the\n   * same options are not used in both caches.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.delete(k)\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.delete(k)\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.delete(k)\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   */\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.delete(k)\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.clear()\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, 'delete')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, 'delete'])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, 'delete')\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, 'delete'])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n","import { LRUCache } from 'lru-cache'\nimport { posix, win32 } from 'path'\n\nimport { fileURLToPath } from 'url'\n\nimport * as actualFS from 'fs'\nimport {\n  lstatSync,\n  readdir as readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync as rps,\n} from 'fs'\nconst realpathSync = rps.native\n// TODO: test perf of fs/promises realpath vs realpathCB,\n// since the promises one uses realpath.native\nimport { lstat, readdir, readlink, realpath } from 'fs/promises'\n\nimport type { Dirent, Stats } from 'fs'\nimport { Minipass } from 'minipass'\n\n/**\n * An object that will be used to override the default `fs`\n * methods.  Any methods that are not overridden will use Node's\n * built-in implementations.\n *\n * - lstatSync\n * - readdir (callback `withFileTypes` Dirent variant, used for\n *   readdirCB and most walks)\n * - readdirSync\n * - readlinkSync\n * - realpathSync\n * - promises: Object containing the following async methods:\n *   - lstat\n *   - readdir (Dirent variant only)\n *   - readlink\n *   - realpath\n */\nexport interface FSOption {\n  lstatSync?: (path: string) => Stats\n  readdir?: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync?: (\n    path: string,\n    options: { withFileTypes: true }\n  ) => Dirent[]\n  readlinkSync?: (path: string) => string\n  realpathSync?: (path: string) => string\n  promises?: {\n    lstat?: (path: string) => Promise<Stats>\n    readdir?: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink?: (path: string) => Promise<string>\n    realpath?: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\ninterface FSValue {\n  lstatSync: (path: string) => Stats\n  readdir: (\n    path: string,\n    options: { withFileTypes: true },\n    cb: (er: NodeJS.ErrnoException | null, entries?: Dirent[]) => any\n  ) => void\n  readdirSync: (path: string, options: { withFileTypes: true }) => Dirent[]\n  readlinkSync: (path: string) => string\n  realpathSync: (path: string) => string\n  promises: {\n    lstat: (path: string) => Promise<Stats>\n    readdir: (\n      path: string,\n      options: { withFileTypes: true }\n    ) => Promise<Dirent[]>\n    readlink: (path: string) => Promise<string>\n    realpath: (path: string) => Promise<string>\n    [k: string]: any\n  }\n  [k: string]: any\n}\n\nconst defaultFS: FSValue = {\n  lstatSync,\n  readdir: readdirCB,\n  readdirSync,\n  readlinkSync,\n  realpathSync,\n  promises: {\n    lstat,\n    readdir,\n    readlink,\n    realpath,\n  },\n}\n\n// if they just gave us require('fs') then use our default\nconst fsFromOption = (fsOption?: FSOption): FSValue =>\n  !fsOption || fsOption === defaultFS || fsOption === actualFS\n    ? defaultFS\n    : {\n        ...defaultFS,\n        ...fsOption,\n        promises: {\n          ...defaultFS.promises,\n          ...(fsOption.promises || {}),\n        },\n      }\n\n// turn something like //?/c:/ into c:\\\nconst uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i\nconst uncToDrive = (rootPath: string): string =>\n  rootPath.replace(/\\//g, '\\\\').replace(uncDriveRegexp, '$1\\\\')\n\n// windows paths are separated by either / or \\\nconst eitherSep = /[\\\\\\/]/\n\nconst UNKNOWN = 0 // may not even exist, for all we know\nconst IFIFO = 0b0001\nconst IFCHR = 0b0010\nconst IFDIR = 0b0100\nconst IFBLK = 0b0110\nconst IFREG = 0b1000\nconst IFLNK = 0b1010\nconst IFSOCK = 0b1100\nconst IFMT = 0b1111\n\nexport type Type =\n  | 'Unknown'\n  | 'FIFO'\n  | 'CharacterDevice'\n  | 'Directory'\n  | 'BlockDevice'\n  | 'File'\n  | 'SymbolicLink'\n  | 'Socket'\n\n// mask to unset low 4 bits\nconst IFMT_UNKNOWN = ~IFMT\n\n// set after successfully calling readdir() and getting entries.\nconst READDIR_CALLED = 0b0000_0001_0000\n// set after a successful lstat()\nconst LSTAT_CALLED = 0b0000_0010_0000\n// set if an entry (or one of its parents) is definitely not a dir\nconst ENOTDIR = 0b0000_0100_0000\n// set if an entry (or one of its parents) does not exist\n// (can also be set on lstat errors like EACCES or ENAMETOOLONG)\nconst ENOENT = 0b0000_1000_0000\n// cannot have child entries -- also verify &IFMT is either IFDIR or IFLNK\n// set if we fail to readlink\nconst ENOREADLINK = 0b0001_0000_0000\n// set if we know realpath() will fail\nconst ENOREALPATH = 0b0010_0000_0000\n\nconst ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH\nconst TYPEMASK = 0b0011_1111_1111\n\nconst entToType = (s: Dirent | Stats) =>\n  s.isFile()\n    ? IFREG\n    : s.isDirectory()\n    ? IFDIR\n    : s.isSymbolicLink()\n    ? IFLNK\n    : s.isCharacterDevice()\n    ? IFCHR\n    : s.isBlockDevice()\n    ? IFBLK\n    : s.isSocket()\n    ? IFSOCK\n    : s.isFIFO()\n    ? IFIFO\n    : UNKNOWN\n\n// normalize unicode path names\nconst normalizeCache = new Map<string, string>()\nconst normalize = (s: string) => {\n  const c = normalizeCache.get(s)\n  if (c) return c\n  const n = s.normalize('NFKD')\n  normalizeCache.set(s, n)\n  return n\n}\n\nconst normalizeNocaseCache = new Map<string, string>()\nconst normalizeNocase = (s: string) => {\n  const c = normalizeNocaseCache.get(s)\n  if (c) return c\n  const n = normalize(s.toLowerCase())\n  normalizeNocaseCache.set(s, n)\n  return n\n}\n\n/**\n * Options that may be provided to the Path constructor\n */\nexport interface PathOpts {\n  fullpath?: string\n  relative?: string\n  relativePosix?: string\n  parent?: PathBase\n  /**\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * An LRUCache for storing resolved path strings or Path objects.\n * @internal\n */\nexport class ResolveCache extends LRUCache<string, string> {\n  constructor() {\n    super({ max: 256 })\n  }\n}\n\n// In order to prevent blowing out the js heap by allocating hundreds of\n// thousands of Path entries when walking extremely large trees, the \"children\"\n// in this tree are represented by storing an array of Path entries in an\n// LRUCache, indexed by the parent.  At any time, Path.children() may return an\n// empty array, indicating that it doesn't know about any of its children, and\n// thus has to rebuild that cache.  This is fine, it just means that we don't\n// benefit as much from having the cached entries, but huge directory walks\n// don't blow out the stack, and smaller ones are still as fast as possible.\n//\n//It does impose some complexity when building up the readdir data, because we\n//need to pass a reference to the children array that we started with.\n\n/**\n * an LRUCache for storing child entries.\n * @internal\n */\nexport class ChildrenCache extends LRUCache<PathBase, Children> {\n  constructor(maxSize: number = 16 * 1024) {\n    super({\n      maxSize,\n      // parent + children\n      sizeCalculation: a => a.length + 1,\n    })\n  }\n}\n\n/**\n * Array of Path objects, plus a marker indicating the first provisional entry\n *\n * @internal\n */\nexport type Children = PathBase[] & { provisional: number }\n\nconst setAsCwd = Symbol('PathScurry setAsCwd')\n\n/**\n * Path objects are sort of like a super-powered\n * {@link https://nodejs.org/docs/latest/api/fs.html#class-fsdirent fs.Dirent}\n *\n * Each one represents a single filesystem entry on disk, which may or may not\n * exist. It includes methods for reading various types of information via\n * lstat, readlink, and readdir, and caches all information to the greatest\n * degree possible.\n *\n * Note that fs operations that would normally throw will instead return an\n * \"empty\" value. This is in order to prevent excessive overhead from error\n * stack traces.\n */\nexport abstract class PathBase implements Dirent {\n  /**\n   * the basename of this path\n   *\n   * **Important**: *always* test the path name against any test string\n   * usingthe {@link isNamed} method, and not by directly comparing this\n   * string. Otherwise, unicode path strings that the system sees as identical\n   * will not be properly treated as the same path, leading to incorrect\n   * behavior and possible security issues.\n   */\n  name: string\n  /**\n   * the Path entry corresponding to the path root.\n   *\n   * @internal\n   */\n  root: PathBase\n  /**\n   * All roots found within the current PathScurry family\n   *\n   * @internal\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * a reference to the parent path, or undefined in the case of root entries\n   *\n   * @internal\n   */\n  parent?: PathBase\n  /**\n   * boolean indicating whether paths are compared case-insensitively\n   * @internal\n   */\n  nocase: boolean\n\n  /**\n   * the string or regexp used to split paths. On posix, it is `'/'`, and on\n   * windows it is a RegExp matching either `'/'` or `'\\\\'`\n   */\n  abstract splitSep: string | RegExp\n  /**\n   * The path separator string to use when joining paths\n   */\n  abstract sep: string\n\n  // potential default fs override\n  #fs: FSValue\n\n  // Stats fields\n  #dev?: number\n  get dev() {\n    return this.#dev\n  }\n  #mode?: number\n  get mode() {\n    return this.#mode\n  }\n  #nlink?: number\n  get nlink() {\n    return this.#nlink\n  }\n  #uid?: number\n  get uid() {\n    return this.#uid\n  }\n  #gid?: number\n  get gid() {\n    return this.#gid\n  }\n  #rdev?: number\n  get rdev() {\n    return this.#rdev\n  }\n  #blksize?: number\n  get blksize() {\n    return this.#blksize\n  }\n  #ino?: number\n  get ino() {\n    return this.#ino\n  }\n  #size?: number\n  get size() {\n    return this.#size\n  }\n  #blocks?: number\n  get blocks() {\n    return this.#blocks\n  }\n  #atimeMs?: number\n  get atimeMs() {\n    return this.#atimeMs\n  }\n  #mtimeMs?: number\n  get mtimeMs() {\n    return this.#mtimeMs\n  }\n  #ctimeMs?: number\n  get ctimeMs() {\n    return this.#ctimeMs\n  }\n  #birthtimeMs?: number\n  get birthtimeMs() {\n    return this.#birthtimeMs\n  }\n  #atime?: Date\n  get atime() {\n    return this.#atime\n  }\n  #mtime?: Date\n  get mtime() {\n    return this.#mtime\n  }\n  #ctime?: Date\n  get ctime() {\n    return this.#ctime\n  }\n  #birthtime?: Date\n  get birthtime() {\n    return this.#birthtime\n  }\n\n  #matchName: string\n  #depth?: number\n  #fullpath?: string\n  #fullpathPosix?: string\n  #relative?: string\n  #relativePosix?: string\n  #type: number\n  #children: ChildrenCache\n  #linkTarget?: PathBase\n  #realpath?: PathBase\n\n  /**\n   * This property is for compatibility with the Dirent class as of\n   * Node v20, where Dirent['path'] refers to the path of the directory\n   * that was passed to readdir.  So, somewhat counterintuitively, this\n   * property refers to the *parent* path, not the path object itself.\n   * For root entries, it's the path to the entry itself.\n   */\n  get path(): string {\n    return (this.parent || this).fullpath()\n  }\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    this.name = name\n    this.#matchName = nocase ? normalizeNocase(name) : normalize(name)\n    this.#type = type & TYPEMASK\n    this.nocase = nocase\n    this.roots = roots\n    this.root = root || this\n    this.#children = children\n    this.#fullpath = opts.fullpath\n    this.#relative = opts.relative\n    this.#relativePosix = opts.relativePosix\n    this.parent = opts.parent\n    if (this.parent) {\n      this.#fs = this.parent.#fs\n    } else {\n      this.#fs = fsFromOption(opts.fs)\n    }\n  }\n\n  /**\n   * Returns the depth of the Path object from its root.\n   *\n   * For example, a path at `/foo/bar` would have a depth of 2.\n   */\n  depth(): number {\n    if (this.#depth !== undefined) return this.#depth\n    if (!this.parent) return (this.#depth = 0)\n    return (this.#depth = this.parent.depth() + 1)\n  }\n\n  /**\n   * @internal\n   */\n  abstract getRootString(path: string): string\n  /**\n   * @internal\n   */\n  abstract getRoot(rootPath: string): PathBase\n  /**\n   * @internal\n   */\n  abstract newChild(name: string, type?: number, opts?: PathOpts): PathBase\n\n  /**\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Get the Path object referenced by the string path, resolved from this Path\n   */\n  resolve(path?: string): PathBase {\n    if (!path) {\n      return this\n    }\n    const rootPath = this.getRootString(path)\n    const dir = path.substring(rootPath.length)\n    const dirParts = dir.split(this.splitSep)\n    const result: PathBase = rootPath\n      ? this.getRoot(rootPath).#resolveParts(dirParts)\n      : this.#resolveParts(dirParts)\n    return result\n  }\n\n  #resolveParts(dirParts: string[]) {\n    let p: PathBase = this\n    for (const part of dirParts) {\n      p = p.child(part)\n    }\n    return p\n  }\n\n  /**\n   * Returns the cached children Path objects, if still available.  If they\n   * have fallen out of the cache, then returns an empty array, and resets the\n   * READDIR_CALLED bit, so that future calls to readdir() will require an fs\n   * lookup.\n   *\n   * @internal\n   */\n  children(): Children {\n    const cached = this.#children.get(this)\n    if (cached) {\n      return cached\n    }\n    const children: Children = Object.assign([], { provisional: 0 })\n    this.#children.set(this, children)\n    this.#type &= ~READDIR_CALLED\n    return children\n  }\n\n  /**\n   * Resolves a path portion and returns or creates the child Path.\n   *\n   * Returns `this` if pathPart is `''` or `'.'`, or `parent` if pathPart is\n   * `'..'`.\n   *\n   * This should not be called directly.  If `pathPart` contains any path\n   * separators, it will lead to unsafe undefined behavior.\n   *\n   * Use `Path.resolve()` instead.\n   *\n   * @internal\n   */\n  child(pathPart: string, opts?: PathOpts): PathBase {\n    if (pathPart === '' || pathPart === '.') {\n      return this\n    }\n    if (pathPart === '..') {\n      return this.parent || this\n    }\n\n    // find the child\n    const children = this.children()\n    const name = this.nocase\n      ? normalizeNocase(pathPart)\n      : normalize(pathPart)\n    for (const p of children) {\n      if (p.#matchName === name) {\n        return p\n      }\n    }\n\n    // didn't find it, create provisional child, since it might not\n    // actually exist.  If we know the parent isn't a dir, then\n    // in fact it CAN'T exist.\n    const s = this.parent ? this.sep : ''\n    const fullpath = this.#fullpath\n      ? this.#fullpath + s + pathPart\n      : undefined\n    const pchild = this.newChild(pathPart, UNKNOWN, {\n      ...opts,\n      parent: this,\n      fullpath,\n    })\n\n    if (!this.canReaddir()) {\n      pchild.#type |= ENOENT\n    }\n\n    // don't have to update provisional, because if we have real children,\n    // then provisional is set to children.length, otherwise a lower number\n    children.push(pchild)\n    return pchild\n  }\n\n  /**\n   * The relative path from the cwd. If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpath()\n   */\n  relative(): string {\n    if (this.#relative !== undefined) {\n      return this.#relative\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relative = this.name)\n    }\n    const pv = p.relative()\n    return pv + (!pv || !p.parent ? '' : this.sep) + name\n  }\n\n  /**\n   * The relative path from the cwd, using / as the path separator.\n   * If it does not share an ancestor with\n   * the cwd, then this ends up being equivalent to the fullpathPosix()\n   * On posix systems, this is identical to relative().\n   */\n  relativePosix(): string {\n    if (this.sep === '/') return this.relative()\n    if (this.#relativePosix !== undefined) return this.#relativePosix\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#relativePosix = this.fullpathPosix())\n    }\n    const pv = p.relativePosix()\n    return pv + (!pv || !p.parent ? '' : '/') + name\n  }\n\n  /**\n   * The fully resolved path string for this Path entry\n   */\n  fullpath(): string {\n    if (this.#fullpath !== undefined) {\n      return this.#fullpath\n    }\n    const name = this.name\n    const p = this.parent\n    if (!p) {\n      return (this.#fullpath = this.name)\n    }\n    const pv = p.fullpath()\n    const fp = pv + (!p.parent ? '' : this.sep) + name\n    return (this.#fullpath = fp)\n  }\n\n  /**\n   * On platforms other than windows, this is identical to fullpath.\n   *\n   * On windows, this is overridden to return the forward-slash form of the\n   * full UNC path.\n   */\n  fullpathPosix(): string {\n    if (this.#fullpathPosix !== undefined) return this.#fullpathPosix\n    if (this.sep === '/') return (this.#fullpathPosix = this.fullpath())\n    if (!this.parent) {\n      const p = this.fullpath().replace(/\\\\/g, '/')\n      if (/^[a-z]:\\//i.test(p)) {\n        return (this.#fullpathPosix = `//?/${p}`)\n      } else {\n        return (this.#fullpathPosix = p)\n      }\n    }\n    const p = this.parent\n    const pfpp = p.fullpathPosix()\n    const fpp = pfpp + (!pfpp || !p.parent ? '' : '/') + this.name\n    return (this.#fullpathPosix = fpp)\n  }\n\n  /**\n   * Is the Path of an unknown type?\n   *\n   * Note that we might know *something* about it if there has been a previous\n   * filesystem operation, for example that it does not exist, or is not a\n   * link, or whether it has child entries.\n   */\n  isUnknown(): boolean {\n    return (this.#type & IFMT) === UNKNOWN\n  }\n\n  isType(type: Type): boolean {\n    return this[`is${type}`]()\n  }\n\n  getType(): Type {\n    return this.isUnknown()\n      ? 'Unknown'\n      : this.isDirectory()\n      ? 'Directory'\n      : this.isFile()\n      ? 'File'\n      : this.isSymbolicLink()\n      ? 'SymbolicLink'\n      : this.isFIFO()\n      ? 'FIFO'\n      : this.isCharacterDevice()\n      ? 'CharacterDevice'\n      : this.isBlockDevice()\n      ? 'BlockDevice'\n      : /* c8 ignore start */ this.isSocket()\n      ? 'Socket'\n      : 'Unknown'\n    /* c8 ignore stop */\n  }\n\n  /**\n   * Is the Path a regular file?\n   */\n  isFile(): boolean {\n    return (this.#type & IFMT) === IFREG\n  }\n\n  /**\n   * Is the Path a directory?\n   */\n  isDirectory(): boolean {\n    return (this.#type & IFMT) === IFDIR\n  }\n\n  /**\n   * Is the path a character device?\n   */\n  isCharacterDevice(): boolean {\n    return (this.#type & IFMT) === IFCHR\n  }\n\n  /**\n   * Is the path a block device?\n   */\n  isBlockDevice(): boolean {\n    return (this.#type & IFMT) === IFBLK\n  }\n\n  /**\n   * Is the path a FIFO pipe?\n   */\n  isFIFO(): boolean {\n    return (this.#type & IFMT) === IFIFO\n  }\n\n  /**\n   * Is the path a socket?\n   */\n  isSocket(): boolean {\n    return (this.#type & IFMT) === IFSOCK\n  }\n\n  /**\n   * Is the path a symbolic link?\n   */\n  isSymbolicLink(): boolean {\n    return (this.#type & IFLNK) === IFLNK\n  }\n\n  /**\n   * Return the entry if it has been subject of a successful lstat, or\n   * undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* simply\n   * mean that we haven't called lstat on it.\n   */\n  lstatCached(): PathBase | undefined {\n    return this.#type & LSTAT_CALLED ? this : undefined\n  }\n\n  /**\n   * Return the cached link target if the entry has been the subject of a\n   * successful readlink, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readlink() has been called at some point.\n   */\n  readlinkCached(): PathBase | undefined {\n    return this.#linkTarget\n  }\n\n  /**\n   * Returns the cached realpath target if the entry has been the subject\n   * of a successful realpath, or undefined otherwise.\n   *\n   * Does not read the filesystem, so an undefined result *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * realpath() has been called at some point.\n   */\n  realpathCached(): PathBase | undefined {\n    return this.#realpath\n  }\n\n  /**\n   * Returns the cached child Path entries array if the entry has been the\n   * subject of a successful readdir(), or [] otherwise.\n   *\n   * Does not read the filesystem, so an empty array *could* just mean we\n   * don't have any cached data. Only use it if you are very sure that a\n   * readdir() has been called recently enough to still be valid.\n   */\n  readdirCached(): PathBase[] {\n    const children = this.children()\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * Return true if it's worth trying to readlink.  Ie, we don't (yet) have\n   * any indication that readlink will definitely fail.\n   *\n   * Returns false if the path is known to not be a symlink, if a previous\n   * readlink failed, or if the entry does not exist.\n   */\n  canReadlink(): boolean {\n    if (this.#linkTarget) return true\n    if (!this.parent) return false\n    // cases where it cannot possibly succeed\n    const ifmt = this.#type & IFMT\n    return !(\n      (ifmt !== UNKNOWN && ifmt !== IFLNK) ||\n      this.#type & ENOREADLINK ||\n      this.#type & ENOENT\n    )\n  }\n\n  /**\n   * Return true if readdir has previously been successfully called on this\n   * path, indicating that cachedReaddir() is likely valid.\n   */\n  calledReaddir(): boolean {\n    return !!(this.#type & READDIR_CALLED)\n  }\n\n  /**\n   * Returns true if the path is known to not exist. That is, a previous lstat\n   * or readdir failed to verify its existence when that would have been\n   * expected, or a parent entry was marked either enoent or enotdir.\n   */\n  isENOENT(): boolean {\n    return !!(this.#type & ENOENT)\n  }\n\n  /**\n   * Return true if the path is a match for the given path name.  This handles\n   * case sensitivity and unicode normalization.\n   *\n   * Note: even on case-sensitive systems, it is **not** safe to test the\n   * equality of the `.name` property to determine whether a given pathname\n   * matches, due to unicode normalization mismatches.\n   *\n   * Always use this method instead of testing the `path.name` property\n   * directly.\n   */\n  isNamed(n: string): boolean {\n    return !this.nocase\n      ? this.#matchName === normalize(n)\n      : this.#matchName === normalizeNocase(n)\n  }\n\n  /**\n   * Return the Path object corresponding to the target of a symbolic link.\n   *\n   * If the Path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   */\n  async readlink(): Promise<PathBase | undefined> {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = await this.#fs.promises.readlink(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  /**\n   * Synchronous {@link PathBase.readlink}\n   */\n  readlinkSync(): PathBase | undefined {\n    const target = this.#linkTarget\n    if (target) {\n      return target\n    }\n    if (!this.canReadlink()) {\n      return undefined\n    }\n    /* c8 ignore start */\n    // already covered by the canReadlink test, here for ts grumples\n    if (!this.parent) {\n      return undefined\n    }\n    /* c8 ignore stop */\n    try {\n      const read = this.#fs.readlinkSync(this.fullpath())\n      const linkTarget = this.parent.resolve(read)\n      if (linkTarget) {\n        return (this.#linkTarget = linkTarget)\n      }\n    } catch (er) {\n      this.#readlinkFail((er as NodeJS.ErrnoException).code)\n      return undefined\n    }\n  }\n\n  #readdirSuccess(children: Children) {\n    // succeeded, mark readdir called bit\n    this.#type |= READDIR_CALLED\n    // mark all remaining provisional children as ENOENT\n    for (let p = children.provisional; p < children.length; p++) {\n      children[p].#markENOENT()\n    }\n  }\n\n  #markENOENT() {\n    // mark as UNKNOWN and ENOENT\n    if (this.#type & ENOENT) return\n    this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN\n    this.#markChildrenENOENT()\n  }\n\n  #markChildrenENOENT() {\n    // all children are provisional and do not exist\n    const children = this.children()\n    children.provisional = 0\n    for (const p of children) {\n      p.#markENOENT()\n    }\n  }\n\n  #markENOREALPATH() {\n    this.#type |= ENOREALPATH\n    this.#markENOTDIR()\n  }\n\n  // save the information when we know the entry is not a dir\n  #markENOTDIR() {\n    // entry is not a directory, so any children can't exist.\n    // this *should* be impossible, since any children created\n    // after it's been marked ENOTDIR should be marked ENOENT,\n    // so it won't even get to this point.\n    /* c8 ignore start */\n    if (this.#type & ENOTDIR) return\n    /* c8 ignore stop */\n    let t = this.#type\n    // this could happen if we stat a dir, then delete it,\n    // then try to read it or one of its children.\n    if ((t & IFMT) === IFDIR) t &= IFMT_UNKNOWN\n    this.#type = t | ENOTDIR\n    this.#markChildrenENOENT()\n  }\n\n  #readdirFail(code: string = '') {\n    // markENOTDIR and markENOENT also set provisional=0\n    if (code === 'ENOTDIR' || code === 'EPERM') {\n      this.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      this.#markENOENT()\n    } else {\n      this.children().provisional = 0\n    }\n  }\n\n  #lstatFail(code: string = '') {\n    // Windows just raises ENOENT in this case, disable for win CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR') {\n      // already know it has a parent by this point\n      const p = this.parent as PathBase\n      p.#markENOTDIR()\n    } else if (code === 'ENOENT') {\n      /* c8 ignore stop */\n      this.#markENOENT()\n    }\n  }\n\n  #readlinkFail(code: string = '') {\n    let ter = this.#type\n    ter |= ENOREADLINK\n    if (code === 'ENOENT') ter |= ENOENT\n    // windows gets a weird error when you try to readlink a file\n    if (code === 'EINVAL' || code === 'UNKNOWN') {\n      // exists, but not a symlink, we don't know WHAT it is, so remove\n      // all IFMT bits.\n      ter &= IFMT_UNKNOWN\n    }\n    this.#type = ter\n    // windows just gets ENOENT in this case.  We do cover the case,\n    // just disabled because it's impossible on Windows CI\n    /* c8 ignore start */\n    if (code === 'ENOTDIR' && this.parent) {\n      this.parent.#markENOTDIR()\n    }\n    /* c8 ignore stop */\n  }\n\n  #readdirAddChild(e: Dirent, c: Children) {\n    return (\n      this.#readdirMaybePromoteChild(e, c) ||\n      this.#readdirAddNewChild(e, c)\n    )\n  }\n\n  #readdirAddNewChild(e: Dirent, c: Children): PathBase {\n    // alloc new entry at head, so it's never provisional\n    const type = entToType(e)\n    const child = this.newChild(e.name, type, { parent: this })\n    const ifmt = child.#type & IFMT\n    if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n      child.#type |= ENOTDIR\n    }\n    c.unshift(child)\n    c.provisional++\n    return child\n  }\n\n  #readdirMaybePromoteChild(e: Dirent, c: Children): PathBase | undefined {\n    for (let p = c.provisional; p < c.length; p++) {\n      const pchild = c[p]\n      const name = this.nocase\n        ? normalizeNocase(e.name)\n        : normalize(e.name)\n      if (name !== pchild.#matchName) {\n        continue\n      }\n\n      return this.#readdirPromoteChild(e, pchild, p, c)\n    }\n  }\n\n  #readdirPromoteChild(\n    e: Dirent,\n    p: PathBase,\n    index: number,\n    c: Children\n  ): PathBase {\n    const v = p.name\n    // retain any other flags, but set ifmt from dirent\n    p.#type = (p.#type & IFMT_UNKNOWN) | entToType(e)\n    // case sensitivity fixing when we learn the true name.\n    if (v !== e.name) p.name = e.name\n\n    // just advance provisional index (potentially off the list),\n    // otherwise we have to splice/pop it out and re-insert at head\n    if (index !== c.provisional) {\n      if (index === c.length - 1) c.pop()\n      else c.splice(index, 1)\n      c.unshift(p)\n    }\n    c.provisional++\n    return p\n  }\n\n  /**\n   * Call lstat() on this Path, and update all known information that can be\n   * determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(): Promise<PathBase | undefined> {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(await this.#fs.promises.lstat(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  /**\n   * synchronous {@link PathBase.lstat}\n   */\n  lstatSync(): PathBase | undefined {\n    if ((this.#type & ENOENT) === 0) {\n      try {\n        this.#applyStat(this.#fs.lstatSync(this.fullpath()))\n        return this\n      } catch (er) {\n        this.#lstatFail((er as NodeJS.ErrnoException).code)\n      }\n    }\n  }\n\n  #applyStat(st: Stats) {\n    const {\n      atime,\n      atimeMs,\n      birthtime,\n      birthtimeMs,\n      blksize,\n      blocks,\n      ctime,\n      ctimeMs,\n      dev,\n      gid,\n      ino,\n      mode,\n      mtime,\n      mtimeMs,\n      nlink,\n      rdev,\n      size,\n      uid,\n    } = st\n    this.#atime = atime\n    this.#atimeMs = atimeMs\n    this.#birthtime = birthtime\n    this.#birthtimeMs = birthtimeMs\n    this.#blksize = blksize\n    this.#blocks = blocks\n    this.#ctime = ctime\n    this.#ctimeMs = ctimeMs\n    this.#dev = dev\n    this.#gid = gid\n    this.#ino = ino\n    this.#mode = mode\n    this.#mtime = mtime\n    this.#mtimeMs = mtimeMs\n    this.#nlink = nlink\n    this.#rdev = rdev\n    this.#size = size\n    this.#uid = uid\n    const ifmt = entToType(st)\n    // retain any other flags, but set the ifmt\n    this.#type = (this.#type & IFMT_UNKNOWN) | ifmt | LSTAT_CALLED\n    if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n      this.#type |= ENOTDIR\n    }\n  }\n\n  #onReaddirCB: ((\n    er: NodeJS.ErrnoException | null,\n    entries: Path[]\n  ) => any)[] = []\n  #readdirCBInFlight: boolean = false\n  #callOnReaddirCB(children: Path[]) {\n    this.#readdirCBInFlight = false\n    const cbs = this.#onReaddirCB.slice()\n    this.#onReaddirCB.length = 0\n    cbs.forEach(cb => cb(null, children))\n  }\n\n  /**\n   * Standard node-style callback interface to get list of directory entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * @param cb The callback called with (er, entries).  Note that the `er`\n   * param is somewhat extraneous, as all readdir() errors are handled and\n   * simply result in an empty set of entries being returned.\n   * @param allowZalgo Boolean indicating that immediately known results should\n   * *not* be deferred with `queueMicrotask`. Defaults to `false`. Release\n   * zalgo at your peril, the dark pony lord is devious and unforgiving.\n   */\n  readdirCB(\n    cb: (er: NodeJS.ErrnoException | null, entries: PathBase[]) => any,\n    allowZalgo: boolean = false\n  ): void {\n    if (!this.canReaddir()) {\n      if (allowZalgo) cb(null, [])\n      else queueMicrotask(() => cb(null, []))\n      return\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      const c = children.slice(0, children.provisional)\n      if (allowZalgo) cb(null, c)\n      else queueMicrotask(() => cb(null, c))\n      return\n    }\n\n    // don't have to worry about zalgo at this point.\n    this.#onReaddirCB.push(cb)\n    if (this.#readdirCBInFlight) {\n      return\n    }\n    this.#readdirCBInFlight = true\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n      if (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      } else {\n        // if we didn't get an error, we always get entries.\n        //@ts-ignore\n        for (const e of entries) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      }\n      this.#callOnReaddirCB(children.slice(0, children.provisional))\n      return\n    })\n  }\n\n  #asyncReaddirInFlight?: Promise<void>\n\n  /**\n   * Return an array of known child entries.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async readdir(): Promise<PathBase[]> {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    if (this.#asyncReaddirInFlight) {\n      await this.#asyncReaddirInFlight\n    } else {\n      /* c8 ignore start */\n      let resolve: () => void = () => {}\n      /* c8 ignore stop */\n      this.#asyncReaddirInFlight = new Promise<void>(\n        res => (resolve = res)\n      )\n      try {\n        for (const e of await this.#fs.promises.readdir(fullpath, {\n          withFileTypes: true,\n        })) {\n          this.#readdirAddChild(e, children)\n        }\n        this.#readdirSuccess(children)\n      } catch (er) {\n        this.#readdirFail((er as NodeJS.ErrnoException).code)\n        children.provisional = 0\n      }\n      this.#asyncReaddirInFlight = undefined\n      resolve()\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  /**\n   * synchronous {@link PathBase.readdir}\n   */\n  readdirSync(): PathBase[] {\n    if (!this.canReaddir()) {\n      return []\n    }\n\n    const children = this.children()\n    if (this.calledReaddir()) {\n      return children.slice(0, children.provisional)\n    }\n\n    // else read the directory, fill up children\n    // de-provisionalize any provisional children.\n    const fullpath = this.fullpath()\n    try {\n      for (const e of this.#fs.readdirSync(fullpath, {\n        withFileTypes: true,\n      })) {\n        this.#readdirAddChild(e, children)\n      }\n      this.#readdirSuccess(children)\n    } catch (er) {\n      this.#readdirFail((er as NodeJS.ErrnoException).code)\n      children.provisional = 0\n    }\n    return children.slice(0, children.provisional)\n  }\n\n  canReaddir() {\n    if (this.#type & ENOCHILD) return false\n    const ifmt = IFMT & this.#type\n    // we always set ENOTDIR when setting IFMT, so should be impossible\n    /* c8 ignore start */\n    if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n      return false\n    }\n    /* c8 ignore stop */\n    return true\n  }\n\n  shouldWalk(\n    dirs: Set<PathBase | undefined>,\n    walkFilter?: (e: PathBase) => boolean\n  ): boolean {\n    return (\n      (this.#type & IFDIR) === IFDIR &&\n      !(this.#type & ENOCHILD) &&\n      !dirs.has(this) &&\n      (!walkFilter || walkFilter(this))\n    )\n  }\n\n  /**\n   * Return the Path object corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   * On success, returns a Path object.\n   */\n  async realpath(): Promise<PathBase | undefined> {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = await this.#fs.promises.realpath(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Synchronous {@link realpath}\n   */\n  realpathSync(): PathBase | undefined {\n    if (this.#realpath) return this.#realpath\n    if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type) return undefined\n    try {\n      const rp = this.#fs.realpathSync(this.fullpath())\n      return (this.#realpath = this.resolve(rp))\n    } catch (_) {\n      this.#markENOREALPATH()\n    }\n  }\n\n  /**\n   * Internal method to mark this Path object as the scurry cwd,\n   * called by {@link PathScurry#chdir}\n   *\n   * @internal\n   */\n  [setAsCwd](oldCwd: PathBase): void {\n    if (oldCwd === this) return\n\n    const changed = new Set<PathBase>([])\n    let rp = []\n    let p: PathBase = this\n    while (p && p.parent) {\n      changed.add(p)\n      p.#relative = rp.join(this.sep)\n      p.#relativePosix = rp.join('/')\n      p = p.parent\n      rp.push('..')\n    }\n    // now un-memoize parents of old cwd\n    p = oldCwd\n    while (p && p.parent && !changed.has(p)) {\n      p.#relative = undefined\n      p.#relativePosix = undefined\n      p = p.parent\n    }\n  }\n}\n\n/**\n * Path class used on win32 systems\n *\n * Uses `'\\\\'` as the path separator for returned paths, either `'\\\\'` or `'/'`\n * as the path separator for parsing paths.\n */\nexport class PathWin32 extends PathBase {\n  /**\n   * Separator for generating path strings.\n   */\n  sep: '\\\\' = '\\\\'\n  /**\n   * Separator for parsing path strings.\n   */\n  splitSep: RegExp = eitherSep\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathWin32(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return win32.parse(path).root\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(rootPath: string): PathBase {\n    rootPath = uncToDrive(rootPath.toUpperCase())\n    if (rootPath === this.root.name) {\n      return this.root\n    }\n    // ok, not that one, check if it matches another we know about\n    for (const [compare, root] of Object.entries(this.roots)) {\n      if (this.sameRoot(rootPath, compare)) {\n        return (this.roots[rootPath] = root)\n      }\n    }\n    // otherwise, have to create a new one.\n    return (this.roots[rootPath] = new PathScurryWin32(\n      rootPath,\n      this\n    ).root)\n  }\n\n  /**\n   * @internal\n   */\n  sameRoot(rootPath: string, compare: string = this.root.name): boolean {\n    // windows can (rarely) have case-sensitive filesystem, but\n    // UNC and drive letters are always case-insensitive, and canonically\n    // represented uppercase.\n    rootPath = rootPath\n      .toUpperCase()\n      .replace(/\\//g, '\\\\')\n      .replace(uncDriveRegexp, '$1\\\\')\n    return rootPath === compare\n  }\n}\n\n/**\n * Path class used on all posix systems.\n *\n * Uses `'/'` as the path separator.\n */\nexport class PathPosix extends PathBase {\n  /**\n   * separator for parsing path strings\n   */\n  splitSep: '/' = '/'\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n\n  /**\n   * Do not create new Path objects directly.  They should always be accessed\n   * via the PathScurry class or other methods on the Path class.\n   *\n   * @internal\n   */\n  constructor(\n    name: string,\n    type: number = UNKNOWN,\n    root: PathBase | undefined,\n    roots: { [k: string]: PathBase },\n    nocase: boolean,\n    children: ChildrenCache,\n    opts: PathOpts\n  ) {\n    super(name, type, root, roots, nocase, children, opts)\n  }\n\n  /**\n   * @internal\n   */\n  getRootString(path: string): string {\n    return path.startsWith('/') ? '/' : ''\n  }\n\n  /**\n   * @internal\n   */\n  getRoot(_rootPath: string): PathBase {\n    return this.root\n  }\n\n  /**\n   * @internal\n   */\n  newChild(name: string, type: number = UNKNOWN, opts: PathOpts = {}) {\n    return new PathPosix(\n      name,\n      type,\n      this.root,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      opts\n    )\n  }\n}\n\n/**\n * Options that may be provided to the PathScurry constructor\n */\nexport interface PathScurryOpts {\n  /**\n   * perform case-insensitive path matching. Default based on platform\n   * subclass.\n   */\n  nocase?: boolean\n  /**\n   * Number of Path entries to keep in the cache of Path child references.\n   *\n   * Setting this higher than 65536 will dramatically increase the data\n   * consumption and construction time overhead of each PathScurry.\n   *\n   * Setting this value to 256 or lower will significantly reduce the data\n   * consumption and construction time overhead, but may also reduce resolve()\n   * and readdir() performance on large filesystems.\n   *\n   * Default `16384`.\n   */\n  childrenCacheSize?: number\n  /**\n   * An object that overrides the built-in functions from the fs and\n   * fs/promises modules.\n   *\n   * See {@link FSOption}\n   */\n  fs?: FSOption\n}\n\n/**\n * The base class for all PathScurry classes, providing the interface for path\n * resolution and filesystem operations.\n *\n * Typically, you should *not* instantiate this class directly, but rather one\n * of the platform-specific classes, or the exported {@link PathScurry} which\n * defaults to the current platform.\n */\nexport abstract class PathScurryBase {\n  /**\n   * The root Path entry for the current working directory of this Scurry\n   */\n  root: PathBase\n  /**\n   * The string path for the root of this Scurry's current working directory\n   */\n  rootPath: string\n  /**\n   * A collection of all roots encountered, referenced by rootPath\n   */\n  roots: { [k: string]: PathBase }\n  /**\n   * The Path entry corresponding to this PathScurry's current working directory.\n   */\n  cwd: PathBase\n  #resolveCache: ResolveCache\n  #resolvePosixCache: ResolveCache\n  #children: ChildrenCache\n  /**\n   * Perform path comparisons case-insensitively.\n   *\n   * Defaults true on Darwin and Windows systems, false elsewhere.\n   */\n  nocase: boolean\n\n  /**\n   * The path separator used for parsing paths\n   *\n   * `'/'` on Posix systems, either `'/'` or `'\\\\'` on Windows\n   */\n  abstract sep: string | RegExp\n\n  #fs: FSValue\n\n  /**\n   * This class should not be instantiated directly.\n   *\n   * Use PathScurryWin32, PathScurryDarwin, PathScurryPosix, or PathScurry\n   *\n   * @internal\n   */\n  constructor(\n    cwd: URL | string = process.cwd(),\n    pathImpl: typeof win32 | typeof posix,\n    sep: string | RegExp,\n    {\n      nocase,\n      childrenCacheSize = 16 * 1024,\n      fs = defaultFS,\n    }: PathScurryOpts = {}\n  ) {\n    this.#fs = fsFromOption(fs)\n    if (cwd instanceof URL || cwd.startsWith('file://')) {\n      cwd = fileURLToPath(cwd)\n    }\n    // resolve and split root, and then add to the store.\n    // this is the only time we call path.resolve()\n    const cwdPath = pathImpl.resolve(cwd)\n    this.roots = Object.create(null)\n    this.rootPath = this.parseRootPath(cwdPath)\n    this.#resolveCache = new ResolveCache()\n    this.#resolvePosixCache = new ResolveCache()\n    this.#children = new ChildrenCache(childrenCacheSize)\n\n    const split = cwdPath.substring(this.rootPath.length).split(sep)\n    // resolve('/') leaves '', splits to [''], we don't want that.\n    if (split.length === 1 && !split[0]) {\n      split.pop()\n    }\n    /* c8 ignore start */\n    if (nocase === undefined) {\n      throw new TypeError(\n        'must provide nocase setting to PathScurryBase ctor'\n      )\n    }\n    /* c8 ignore stop */\n    this.nocase = nocase\n    this.root = this.newRoot(this.#fs)\n    this.roots[this.rootPath] = this.root\n    let prev: PathBase = this.root\n    let len = split.length - 1\n    const joinSep = pathImpl.sep\n    let abs = this.rootPath\n    let sawFirst = false\n    for (const part of split) {\n      const l = len--\n      prev = prev.child(part, {\n        relative: new Array(l).fill('..').join(joinSep),\n        relativePosix: new Array(l).fill('..').join('/'),\n        fullpath: (abs += (sawFirst ? '' : joinSep) + part),\n      })\n      sawFirst = true\n    }\n    this.cwd = prev\n  }\n\n  /**\n   * Get the depth of a provided path, string, or the cwd\n   */\n  depth(path: Path | string = this.cwd): number {\n    if (typeof path === 'string') {\n      path = this.cwd.resolve(path)\n    }\n    return path.depth()\n  }\n\n  /**\n   * Parse the root portion of a path string\n   *\n   * @internal\n   */\n  abstract parseRootPath(dir: string): string\n  /**\n   * create a new Path to use as root during construction.\n   *\n   * @internal\n   */\n  abstract newRoot(fs: FSValue): PathBase\n  /**\n   * Determine whether a given path string is absolute\n   */\n  abstract isAbsolute(p: string): boolean\n\n  /**\n   * Return the cache of child entries.  Exposed so subclasses can create\n   * child Path objects in a platform-specific way.\n   *\n   * @internal\n   */\n  childrenCache() {\n    return this.#children\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolve(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolveCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpath()\n    this.#resolveCache.set(r, result)\n    return result\n  }\n\n  /**\n   * Resolve one or more path strings to a resolved string, returning\n   * the posix path.  Identical to .resolve() on posix systems, but on\n   * windows will return a forward-slash separated UNC path.\n   *\n   * Same interface as require('path').resolve.\n   *\n   * Much faster than path.resolve() when called multiple times for the same\n   * path, because the resolved Path objects are cached.  Much slower\n   * otherwise.\n   */\n  resolvePosix(...paths: string[]): string {\n    // first figure out the minimum number of paths we have to test\n    // we always start at cwd, but any absolutes will bump the start\n    let r = ''\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const p = paths[i]\n      if (!p || p === '.') continue\n      r = r ? `${p}/${r}` : p\n      if (this.isAbsolute(p)) {\n        break\n      }\n    }\n    const cached = this.#resolvePosixCache.get(r)\n    if (cached !== undefined) {\n      return cached\n    }\n    const result = this.cwd.resolve(r).fullpathPosix()\n    this.#resolvePosixCache.set(r, result)\n    return result\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or entry\n   */\n  relative(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relative()\n  }\n\n  /**\n   * find the relative path from the cwd to the supplied path string or\n   * entry, using / as the path delimiter, even on Windows.\n   */\n  relativePosix(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.relativePosix()\n  }\n\n  /**\n   * Return the basename for the provided string or Path object\n   */\n  basename(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.name\n  }\n\n  /**\n   * Return the dirname for the provided string or Path object\n   */\n  dirname(entry: PathBase | string = this.cwd): string {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return (entry.parent || entry).fullpath()\n  }\n\n  /**\n   * Return an array of known child entries.\n   *\n   * First argument may be either a string, or a Path object.\n   *\n   * If the Path cannot or does not contain any children, then an empty array\n   * is returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   *\n   * Unlike `fs.readdir()`, the `withFileTypes` option defaults to `true`. Set\n   * `{ withFileTypes: false }` to return strings.\n   */\n\n  readdir(): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: true }): Promise<PathBase[]>\n  readdir(opts: { withFileTypes: false }): Promise<string[]>\n  readdir(opts: { withFileTypes: boolean }): Promise<PathBase[] | string[]>\n  readdir(entry: PathBase | string): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): Promise<PathBase[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): Promise<string[]>\n  readdir(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): Promise<PathBase[] | string[]>\n  async readdir(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else {\n      const p = await entry.readdir()\n      return withFileTypes ? p : p.map(e => e.name)\n    }\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readdir}\n   */\n  readdirSync(): PathBase[]\n  readdirSync(opts: { withFileTypes: true }): PathBase[]\n  readdirSync(opts: { withFileTypes: false }): string[]\n  readdirSync(opts: { withFileTypes: boolean }): PathBase[] | string[]\n  readdirSync(entry: PathBase | string): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: true }\n  ): PathBase[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: false }\n  ): string[]\n  readdirSync(\n    entry: PathBase | string,\n    opts: { withFileTypes: boolean }\n  ): PathBase[] | string[]\n  readdirSync(\n    entry: PathBase | string | { withFileTypes: boolean } = this.cwd,\n    opts: { withFileTypes: boolean } = {\n      withFileTypes: true,\n    }\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const { withFileTypes = true } = opts\n    if (!entry.canReaddir()) {\n      return []\n    } else if (withFileTypes) {\n      return entry.readdirSync()\n    } else {\n      return entry.readdirSync().map(e => e.name)\n    }\n  }\n\n  /**\n   * Call lstat() on the string or Path object, and update all known\n   * information that can be determined.\n   *\n   * Note that unlike `fs.lstat()`, the returned value does not contain some\n   * information, such as `mode`, `dev`, `nlink`, and `ino`.  If that\n   * information is required, you will need to call `fs.lstat` yourself.\n   *\n   * If the Path refers to a nonexistent file, or if the lstat call fails for\n   * any reason, `undefined` is returned.  Otherwise the updated Path object is\n   * returned.\n   *\n   * Results are cached, and thus may be out of date if the filesystem is\n   * mutated.\n   */\n  async lstat(\n    entry: string | PathBase = this.cwd\n  ): Promise<PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstat()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.lstat}\n   */\n  lstatSync(entry: string | PathBase = this.cwd): PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    }\n    return entry.lstatSync()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to the target of a\n   * symbolic link.\n   *\n   * If the path is not a symbolic link, or if the readlink call fails for any\n   * reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  readlink(): Promise<string | undefined>\n  readlink(opt: { withFileTypes: false }): Promise<string | undefined>\n  readlink(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  readlink(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  readlink(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async readlink(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.readlink()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * synchronous {@link PathScurryBase.readlink}\n   */\n  readlinkSync(): string | undefined\n  readlinkSync(opt: { withFileTypes: false }): string | undefined\n  readlinkSync(opt: { withFileTypes: true }): PathBase | undefined\n  readlinkSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  readlinkSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.readlinkSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Return the Path object or string path corresponding to path as resolved\n   * by realpath(3).\n   *\n   * If the realpath call fails for any reason, `undefined` is returned.\n   *\n   * Result is cached, and thus may be outdated if the filesystem is mutated.\n   *\n   * `{withFileTypes}` option defaults to `false`.\n   *\n   * On success, returns a Path object if `withFileTypes` option is true,\n   * otherwise a string.\n   */\n  realpath(): Promise<string | undefined>\n  realpath(opt: { withFileTypes: false }): Promise<string | undefined>\n  realpath(opt: { withFileTypes: true }): Promise<PathBase | undefined>\n  realpath(opt: {\n    withFileTypes: boolean\n  }): Promise<PathBase | string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): Promise<string | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): Promise<PathBase | undefined>\n  realpath(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): Promise<string | PathBase | undefined>\n  async realpath(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): Promise<string | PathBase | undefined> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = await entry.realpath()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  realpathSync(): string | undefined\n  realpathSync(opt: { withFileTypes: false }): string | undefined\n  realpathSync(opt: { withFileTypes: true }): PathBase | undefined\n  realpathSync(opt: {\n    withFileTypes: boolean\n  }): PathBase | string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt?: { withFileTypes: false }\n  ): string | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: true }\n  ): PathBase | undefined\n  realpathSync(\n    entry: string | PathBase,\n    opt: { withFileTypes: boolean }\n  ): string | PathBase | undefined\n  realpathSync(\n    entry: string | PathBase | { withFileTypes: boolean } = this.cwd,\n    { withFileTypes }: { withFileTypes: boolean } = {\n      withFileTypes: false,\n    }\n  ): string | PathBase | undefined {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      withFileTypes = entry.withFileTypes\n      entry = this.cwd\n    }\n    const e = entry.realpathSync()\n    return withFileTypes ? e : e?.fullpath()\n  }\n\n  /**\n   * Asynchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walk(): Promise<PathBase[]>\n  walk(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(opts: WalkOptionsWithFileTypesFalse): Promise<string[]>\n  walk(opts: WalkOptions): Promise<string[] | PathBase[]>\n  walk(entry: string | PathBase): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Promise<PathBase[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Promise<string[]>\n  walk(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Promise<PathBase[] | string[]>\n  async walk(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Promise<PathBase[] | string[]> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const walk = (\n      dir: PathBase,\n      cb: (er?: NodeJS.ErrnoException) => void\n    ) => {\n      dirs.add(dir)\n      dir.readdirCB((er, entries) => {\n        /* c8 ignore start */\n        if (er) {\n          return cb(er)\n        }\n        /* c8 ignore stop */\n        let len = entries.length\n        if (!len) return cb()\n        const next = () => {\n          if (--len === 0) {\n            cb()\n          }\n        }\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath())\n          }\n          if (follow && e.isSymbolicLink()) {\n            e.realpath()\n              .then(r => (r?.isUnknown() ? r.lstat() : r))\n              .then(r =>\n                r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next()\n              )\n          } else {\n            if (e.shouldWalk(dirs, walkFilter)) {\n              walk(e, next)\n            } else {\n              next()\n            }\n          }\n        }\n      }, true) // zalgooooooo\n    }\n\n    const start = entry\n    return new Promise<PathBase[] | string[]>((res, rej) => {\n      walk(start, er => {\n        /* c8 ignore start */\n        if (er) return rej(er)\n        /* c8 ignore stop */\n        res(results as PathBase[] | string[])\n      })\n    })\n  }\n\n  /**\n   * Synchronously walk the directory tree, returning an array of\n   * all path strings or Path objects found.\n   *\n   * Note that this will be extremely memory-hungry on large filesystems.\n   * In such cases, it may be better to use the stream or async iterator\n   * walk implementation.\n   */\n  walkSync(): PathBase[]\n  walkSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): PathBase[]\n  walkSync(opts: WalkOptionsWithFileTypesFalse): string[]\n  walkSync(opts: WalkOptions): string[] | PathBase[]\n  walkSync(entry: string | PathBase): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): PathBase[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): string[]\n  walkSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): PathBase[] | string[]\n  walkSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): PathBase[] | string[] {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results: (string | PathBase)[] = []\n    if (!filter || filter(entry)) {\n      results.push(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          results.push(withFileTypes ? e : e.fullpath())\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n    return results as string[] | PathBase[]\n  }\n\n  /**\n   * Support for `for await`\n   *\n   * Alias for {@link PathScurryBase.iterate}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n\n  /**\n   * Async generator form of {@link PathScurryBase.walk}\n   *\n   * Note: As of Node 19, this is very slow, compared to other methods of\n   * walking, especially if most/all of the directory tree has been previously\n   * walked.  Consider using {@link PathScurryBase.stream} if memory overhead\n   * and backpressure are concerns, or {@link PathScurryBase.walk} if not.\n   */\n  iterate(): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(opts: WalkOptions): AsyncGenerator<string | PathBase, void, void>\n  iterate(entry: string | PathBase): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): AsyncGenerator<PathBase, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): AsyncGenerator<string, void, void>\n  iterate(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): AsyncGenerator<PathBase | string, void, void>\n  iterate(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    options: WalkOptions = {}\n  ): AsyncGenerator<PathBase | string, void, void> {\n    // iterating async over the stream is significantly more performant,\n    // especially in the warm-cache scenario, because it buffers up directory\n    // entries in the background instead of waiting for a yield for each one.\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      options = entry\n      entry = this.cwd\n    }\n    return this.stream(entry, options)[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Iterating over a PathScurry performs a synchronous walk.\n   *\n   * Alias for {@link PathScurryBase.iterateSync}\n   */\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  iterateSync(): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(opts: WalkOptions): Generator<string | PathBase, void, void>\n  iterateSync(entry: string | PathBase): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Generator<PathBase, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Generator<string, void, void>\n  iterateSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Generator<PathBase | string, void, void>\n  *iterateSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Generator<PathBase | string, void, void> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    if (!filter || filter(entry)) {\n      yield withFileTypes ? entry : entry.fullpath()\n    }\n    const dirs = new Set<PathBase>([entry])\n    for (const dir of dirs) {\n      const entries = dir.readdirSync()\n      for (const e of entries) {\n        if (!filter || filter(e)) {\n          yield withFileTypes ? e : e.fullpath()\n        }\n        let r: PathBase | undefined = e\n        if (e.isSymbolicLink()) {\n          if (!(follow && (r = e.realpathSync()))) continue\n          if (r.isUnknown()) r.lstatSync()\n        }\n        if (r.shouldWalk(dirs, walkFilter)) {\n          dirs.add(r)\n        }\n      }\n    }\n  }\n\n  /**\n   * Stream form of {@link PathScurryBase.walk}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   */\n  stream(): Minipass<PathBase>\n  stream(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  stream(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  stream(opts: WalkOptions): Minipass<string | PathBase>\n  stream(entry: string | PathBase): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  stream(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  stream(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const dirs = new Set<PathBase>()\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n\n        processing++\n        dirs.add(dir)\n\n        const onReaddir = (\n          er: null | NodeJS.ErrnoException,\n          entries: PathBase[],\n          didRealpaths: boolean = false\n        ) => {\n          /* c8 ignore start */\n          if (er) return results.emit('error', er)\n          /* c8 ignore stop */\n          if (follow && !didRealpaths) {\n            const promises: Promise<PathBase | undefined>[] = []\n            for (const e of entries) {\n              if (e.isSymbolicLink()) {\n                promises.push(\n                  e\n                    .realpath()\n                    .then((r: PathBase | undefined) =>\n                      r?.isUnknown() ? r.lstat() : r\n                    )\n                )\n              }\n            }\n            if (promises.length) {\n              Promise.all(promises).then(() =>\n                onReaddir(null, entries, true)\n              )\n              return\n            }\n          }\n\n          for (const e of entries) {\n            if (e && (!filter || filter(e))) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true\n              }\n            }\n          }\n\n          processing--\n          for (const e of entries) {\n            const r = e.realpathCached() || e\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r)\n            }\n          }\n          if (paused && !results.flowing) {\n            results.once('drain', process)\n          } else if (!sync) {\n            process()\n          }\n        }\n\n        // zalgo containment\n        let sync = true\n        dir.readdirCB(onReaddir, true)\n        sync = false\n      }\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  /**\n   * Synchronous form of {@link PathScurryBase.stream}\n   *\n   * Returns a Minipass stream that emits {@link PathBase} objects by default,\n   * or strings if `{ withFileTypes: false }` is set in the options.\n   *\n   * Will complete the walk in a single tick if the stream is consumed fully.\n   * Otherwise, will pause as needed for stream backpressure.\n   */\n  streamSync(): Minipass<PathBase>\n  streamSync(\n    opts: WalkOptionsWithFileTypesTrue | WalkOptionsWithFileTypesUnset\n  ): Minipass<PathBase>\n  streamSync(opts: WalkOptionsWithFileTypesFalse): Minipass<string>\n  streamSync(opts: WalkOptions): Minipass<string | PathBase>\n  streamSync(entry: string | PathBase): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesUnset | WalkOptionsWithFileTypesTrue\n  ): Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptionsWithFileTypesFalse\n  ): Minipass<string>\n  streamSync(\n    entry: string | PathBase,\n    opts: WalkOptions\n  ): Minipass<string> | Minipass<PathBase>\n  streamSync(\n    entry: string | PathBase | WalkOptions = this.cwd,\n    opts: WalkOptions = {}\n  ): Minipass<string> | Minipass<PathBase> {\n    if (typeof entry === 'string') {\n      entry = this.cwd.resolve(entry)\n    } else if (!(entry instanceof PathBase)) {\n      opts = entry\n      entry = this.cwd\n    }\n    const {\n      withFileTypes = true,\n      follow = false,\n      filter,\n      walkFilter,\n    } = opts\n    const results = new Minipass<string | PathBase>({ objectMode: true })\n    const dirs = new Set<PathBase>()\n    if (!filter || filter(entry)) {\n      results.write(withFileTypes ? entry : entry.fullpath())\n    }\n    const queue: PathBase[] = [entry]\n    let processing = 0\n    const process = () => {\n      let paused = false\n      while (!paused) {\n        const dir = queue.shift()\n        if (!dir) {\n          if (processing === 0) results.end()\n          return\n        }\n        processing++\n        dirs.add(dir)\n\n        const entries = dir.readdirSync()\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            if (!results.write(withFileTypes ? e : e.fullpath())) {\n              paused = true\n            }\n          }\n        }\n        processing--\n        for (const e of entries) {\n          let r: PathBase | undefined = e\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync()))) continue\n            if (r.isUnknown()) r.lstatSync()\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            queue.push(r)\n          }\n        }\n      }\n      if (paused && !results.flowing) results.once('drain', process)\n    }\n    process()\n    return results as Minipass<string> | Minipass<PathBase>\n  }\n\n  chdir(path: string | Path = this.cwd) {\n    const oldCwd = this.cwd\n    this.cwd = typeof path === 'string' ? this.cwd.resolve(path) : path\n    this.cwd[setAsCwd](oldCwd)\n  }\n}\n\n/**\n * Options provided to all walk methods.\n */\nexport interface WalkOptions {\n  /**\n   * Return results as {@link PathBase} objects rather than strings.\n   * When set to false, results are fully resolved paths, as returned by\n   * {@link PathBase.fullpath}.\n   * @default true\n   */\n  withFileTypes?: boolean\n\n  /**\n   *  Attempt to read directory entries from symbolic links. Otherwise, only\n   *  actual directories are traversed. Regardless of this setting, a given\n   *  target path will only ever be walked once, meaning that a symbolic link\n   *  to a previously traversed directory will never be followed.\n   *\n   *  Setting this imposes a slight performance penalty, because `readlink`\n   *  must be called on all symbolic links encountered, in order to avoid\n   *  infinite cycles.\n   * @default false\n   */\n  follow?: boolean\n\n  /**\n   * Only return entries where the provided function returns true.\n   *\n   * This will not prevent directories from being traversed, even if they do\n   * not pass the filter, though it will prevent directories themselves from\n   * being included in the result set.  See {@link walkFilter}\n   *\n   * Asynchronous functions are not supported here.\n   *\n   * By default, if no filter is provided, all entries and traversed\n   * directories are included.\n   */\n  filter?: (entry: PathBase) => boolean\n\n  /**\n   * Only traverse directories (and in the case of {@link follow} being set to\n   * true, symbolic links to directories) if the provided function returns\n   * true.\n   *\n   * This will not prevent directories from being included in the result set,\n   * even if they do not pass the supplied filter function.  See {@link filter}\n   * to do that.\n   *\n   * Asynchronous functions are not supported here.\n   */\n  walkFilter?: (entry: PathBase) => boolean\n}\n\nexport type WalkOptionsWithFileTypesUnset = WalkOptions & {\n  withFileTypes?: undefined\n}\nexport type WalkOptionsWithFileTypesTrue = WalkOptions & {\n  withFileTypes: true\n}\nexport type WalkOptionsWithFileTypesFalse = WalkOptions & {\n  withFileTypes: false\n}\n\n/**\n * Windows implementation of {@link PathScurryBase}\n *\n * Defaults to case insensitve, uses `'\\\\'` to generate path strings.  Uses\n * {@link PathWin32} for Path objects.\n */\nexport class PathScurryWin32 extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '\\\\' = '\\\\'\n\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, win32, '\\\\', { ...opts, nocase })\n    this.nocase = nocase\n    for (let p: PathBase | undefined = this.cwd; p; p = p.parent) {\n      p.nocase = this.nocase\n    }\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(dir: string): string {\n    // if the path starts with a single separator, it's not a UNC, and we'll\n    // just get separator as the root, and driveFromUNC will return \\\n    // In that case, mount \\ on the root from the cwd.\n    return win32.parse(dir).root.toUpperCase()\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathWin32(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return (\n      p.startsWith('/') || p.startsWith('\\\\') || /^[a-z]:(\\/|\\\\)/i.test(p)\n    )\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for all posix systems other than Darwin.\n *\n * Defaults to case-sensitive matching, uses `'/'` to generate path strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryPosix extends PathScurryBase {\n  /**\n   * separator for generating path strings\n   */\n  sep: '/' = '/'\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = false } = opts\n    super(cwd, posix, '/', { ...opts, nocase })\n    this.nocase = nocase\n  }\n\n  /**\n   * @internal\n   */\n  parseRootPath(_dir: string): string {\n    return '/'\n  }\n\n  /**\n   * @internal\n   */\n  newRoot(fs: FSValue) {\n    return new PathPosix(\n      this.rootPath,\n      IFDIR,\n      undefined,\n      this.roots,\n      this.nocase,\n      this.childrenCache(),\n      { fs }\n    )\n  }\n\n  /**\n   * Return true if the provided path string is an absolute path\n   */\n  isAbsolute(p: string): boolean {\n    return p.startsWith('/')\n  }\n}\n\n/**\n * {@link PathScurryBase} implementation for Darwin (macOS) systems.\n *\n * Defaults to case-insensitive matching, uses `'/'` for generating path\n * strings.\n *\n * Uses {@link PathPosix} for Path objects.\n */\nexport class PathScurryDarwin extends PathScurryPosix {\n  constructor(\n    cwd: URL | string = process.cwd(),\n    opts: PathScurryOpts = {}\n  ) {\n    const { nocase = true } = opts\n    super(cwd, { ...opts, nocase })\n  }\n}\n\n/**\n * Default {@link PathBase} implementation for the current platform.\n *\n * {@link PathWin32} on Windows systems, {@link PathPosix} on all others.\n */\nexport const Path = process.platform === 'win32' ? PathWin32 : PathPosix\nexport type Path = PathBase | InstanceType<typeof Path>\n\n/**\n * Default {@link PathScurryBase} implementation for the current platform.\n *\n * {@link PathScurryWin32} on Windows systems, {@link PathScurryDarwin} on\n * Darwin (macOS) systems, {@link PathScurryPosix} on all others.\n */\nexport const PathScurry:\n  | typeof PathScurryWin32\n  | typeof PathScurryDarwin\n  | typeof PathScurryPosix =\n  process.platform === 'win32'\n    ? PathScurryWin32\n    : process.platform === 'darwin'\n    ? PathScurryDarwin\n    : PathScurryPosix\nexport type PathScurry = PathScurryBase | InstanceType<typeof PathScurry>\n","const proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport { EventEmitter } from 'events'\nimport Stream from 'stream'\nimport { StringDecoder } from 'string_decoder'\n\n/**\n * Same as StringDecoder, but exposing the `lastNeed` flag on the type\n */\ntype SD = StringDecoder & { lastNeed: boolean }\n\nexport type { SD, Pipe, PipeProxyErrors }\n\n/**\n * Return true if the argument is a Minipass stream, Node stream, or something\n * else that Minipass can interact with.\n */\nexport const isStream = (\n  s: any\n): s is Minipass.Readable | Minipass.Writable =>\n  !!s &&\n  typeof s === 'object' &&\n  (s instanceof Minipass ||\n    s instanceof Stream ||\n    isReadable(s) ||\n    isWritable(s))\n\n/**\n * Return true if the argument is a valid {@link Minipass.Readable}\n */\nexport const isReadable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Readable).pipe === 'function' &&\n  // node core Writable streams have a pipe() method, but it throws\n  (s as Minipass.Readable).pipe !== Stream.Writable.prototype.pipe\n\n/**\n * Return true if the argument is a valid {@link Minipass.Writable}\n */\nexport const isWritable = (s: any): s is Minipass.Readable =>\n  !!s &&\n  typeof s === 'object' &&\n  s instanceof EventEmitter &&\n  typeof (s as Minipass.Writable).write === 'function' &&\n  typeof (s as Minipass.Writable).end === 'function'\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\nconst DATALISTENERS = Symbol('dataListeners')\nconst DISCARDED = Symbol('discarded')\n\nconst defer = (fn: (...a: any[]) => any) => Promise.resolve().then(fn)\nconst nodefer = (fn: (...a: any[]) => any) => fn()\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\ntype EndishEvent = 'end' | 'finish' | 'prefinish'\nconst isEndish = (ev: any): ev is EndishEvent =>\n  ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBufferLike = (b: any): b is ArrayBufferLike =>\n  b instanceof ArrayBuffer ||\n  (!!b &&\n    typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = (b: any): b is ArrayBufferView =>\n  !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\n/**\n * Options that may be passed to stream.pipe()\n */\nexport interface PipeOptions {\n  /**\n   * end the destination stream when the source stream ends\n   */\n  end?: boolean\n  /**\n   * proxy errors from the source stream to the destination stream\n   */\n  proxyErrors?: boolean\n}\n\n/**\n * Internal class representing a pipe to a destination stream.\n *\n * @internal\n */\nclass Pipe<T extends unknown> {\n  src: Minipass<T>\n  dest: Minipass<any, T>\n  opts: PipeOptions\n  ondrain: () => any\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    this.src = src\n    this.dest = dest as Minipass<any, T>\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    this.dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // only here for the prototype\n  /* c8 ignore start */\n  proxyErrors(_er: any) {}\n  /* c8 ignore stop */\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\n/**\n * Internal class representing a pipe to a destination stream where\n * errors are proxied.\n *\n * @internal\n */\nclass PipeProxyErrors<T> extends Pipe<T> {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(\n    src: Minipass<T>,\n    dest: Minipass.Writable,\n    opts: PipeOptions\n  ) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nexport namespace Minipass {\n  /**\n   * Encoding used to create a stream that outputs strings rather than\n   * Buffer objects.\n   */\n  export type Encoding = BufferEncoding | 'buffer' | null\n\n  /**\n   * Any stream that Minipass can pipe into\n   */\n  export type Writable =\n    | Minipass<any, any, any>\n    | NodeJS.WriteStream\n    | (NodeJS.WriteStream & { fd: number })\n    | (EventEmitter & {\n        end(): any\n        write(chunk: any, ...args: any[]): any\n      })\n\n  /**\n   * Any stream that can be read from\n   */\n  export type Readable =\n    | Minipass<any, any, any>\n    | NodeJS.ReadStream\n    | (NodeJS.ReadStream & { fd: number })\n    | (EventEmitter & {\n        pause(): any\n        resume(): any\n        pipe(...destArgs: any[]): any\n      })\n\n  /**\n   * Utility type that can be iterated sync or async\n   */\n  export type DualIterable<T> = Iterable<T> & AsyncIterable<T>\n\n  type EventArguments = Record<string | symbol, unknown[]>\n\n  /**\n   * The listing of events that a Minipass class can emit.\n   * Extend this when extending the Minipass class, and pass as\n   * the third template argument.  The key is the name of the event,\n   * and the value is the argument list.\n   *\n   * Any undeclared events will still be allowed, but the handler will get\n   * arguments as `unknown[]`.\n   */\n  export interface Events<RType extends any = Buffer>\n    extends EventArguments {\n    readable: []\n    data: [chunk: RType]\n    error: [er: unknown]\n    abort: [reason: unknown]\n    drain: []\n    resume: []\n    end: []\n    finish: []\n    prefinish: []\n    close: []\n    [DESTROYED]: [er?: unknown]\n    [ERROR]: [er: unknown]\n  }\n\n  /**\n   * String or buffer-like data that can be joined and sliced\n   */\n  export type ContiguousData =\n    | Buffer\n    | ArrayBufferLike\n    | ArrayBufferView\n    | string\n  export type BufferOrString = Buffer | string\n\n  /**\n   * Options passed to the Minipass constructor.\n   */\n  export type SharedOptions = {\n    /**\n     * Defer all data emission and other events until the end of the\n     * current tick, similar to Node core streams\n     */\n    async?: boolean\n    /**\n     * A signal which will abort the stream\n     */\n    signal?: AbortSignal\n    /**\n     * Output string encoding. Set to `null` or `'buffer'` (or omit) to\n     * emit Buffer objects rather than strings.\n     *\n     * Conflicts with `objectMode`\n     */\n    encoding?: BufferEncoding | null | 'buffer'\n    /**\n     * Output data exactly as it was written, supporting non-buffer/string\n     * data (such as arbitrary objects, falsey values, etc.)\n     *\n     * Conflicts with `encoding`\n     */\n    objectMode?: boolean\n  }\n\n  /**\n   * Options for a string encoded output\n   */\n  export type EncodingOptions = SharedOptions & {\n    encoding: BufferEncoding\n    objectMode?: false\n  }\n\n  /**\n   * Options for contiguous data buffer output\n   */\n  export type BufferOptions = SharedOptions & {\n    encoding?: null | 'buffer'\n    objectMode?: false\n  }\n\n  /**\n   * Options for objectMode arbitrary output\n   */\n  export type ObjectModeOptions = SharedOptions & {\n    objectMode: true\n    encoding?: null\n  }\n\n  /**\n   * Utility type to determine allowed options based on read type\n   */\n  export type Options<T> = T extends string\n    ? EncodingOptions | ObjectModeOptions\n    : T extends Buffer\n    ? BufferOptions | ObjectModeOptions\n    : SharedOptions\n}\n\nconst isObjectModeOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.ObjectModeOptions => !!o.objectMode\n\nconst isEncodingOptions = (\n  o: Minipass.SharedOptions\n): o is Minipass.EncodingOptions =>\n  !o.objectMode && !!o.encoding && o.encoding !== 'buffer'\n\n/**\n * Main export, the Minipass class\n *\n * `RType` is the type of data emitted, defaults to Buffer\n *\n * `WType` is the type of data to be written, if RType is buffer or string,\n * then any {@link Minipass.ContiguousData} is allowed.\n *\n * `Events` is the set of event handler signatures that this object\n * will emit, see {@link Minipass.Events}\n */\nexport class Minipass<\n    RType extends unknown = Buffer,\n    WType extends unknown = RType extends Minipass.BufferOrString\n      ? Minipass.ContiguousData\n      : RType,\n    Events extends Minipass.Events<RType> = Minipass.Events<RType>\n  >\n  extends EventEmitter\n  implements Minipass.DualIterable<RType>\n{\n  [FLOWING]: boolean = false;\n  [PAUSED]: boolean = false;\n  [PIPES]: Pipe<RType>[] = [];\n  [BUFFER]: RType[] = [];\n  [OBJECTMODE]: boolean;\n  [ENCODING]: BufferEncoding | null;\n  [ASYNC]: boolean;\n  [DECODER]: SD | null;\n  [EOF]: boolean = false;\n  [EMITTED_END]: boolean = false;\n  [EMITTING_END]: boolean = false;\n  [CLOSED]: boolean = false;\n  [EMITTED_ERROR]: unknown = null;\n  [BUFFERLENGTH]: number = 0;\n  [DESTROYED]: boolean = false;\n  [SIGNAL]?: AbortSignal;\n  [ABORTED]: boolean = false;\n  [DATALISTENERS]: number = 0;\n  [DISCARDED]: boolean = false\n\n  /**\n   * true if the stream can be written\n   */\n  writable: boolean = true\n  /**\n   * true if the stream can be read\n   */\n  readable: boolean = true\n\n  /**\n   * If `RType` is Buffer, then options do not need to be provided.\n   * Otherwise, an options object must be provided to specify either\n   * {@link Minipass.SharedOptions.objectMode} or\n   * {@link Minipass.SharedOptions.encoding}, as appropriate.\n   */\n  constructor(\n    ...args: RType extends Buffer\n      ? [] | [Minipass.Options<RType>]\n      : [Minipass.Options<RType>]\n  ) {\n    const options: Minipass.Options<RType> = (args[0] ||\n      {}) as Minipass.Options<RType>\n    super()\n    if (options.objectMode && typeof options.encoding === 'string') {\n      throw new TypeError(\n        'Encoding and objectMode may not be used together'\n      )\n    }\n    if (isObjectModeOptions(options)) {\n      this[OBJECTMODE] = true\n      this[ENCODING] = null\n    } else if (isEncodingOptions(options)) {\n      this[ENCODING] = options.encoding\n      this[OBJECTMODE] = false\n    } else {\n      this[OBJECTMODE] = false\n      this[ENCODING] = null\n    }\n    this[ASYNC] = !!options.async\n    this[DECODER] = this[ENCODING]\n      ? (new StringDecoder(this[ENCODING]) as SD)\n      : null\n\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    //@ts-ignore - private option for debugging and testing\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n\n    const { signal } = options\n    if (signal) {\n      this[SIGNAL] = signal\n      if (signal.aborted) {\n        this[ABORT]()\n      } else {\n        signal.addEventListener('abort', () => this[ABORT]())\n      }\n    }\n  }\n\n  /**\n   * The amount of data stored in the buffer waiting to be read.\n   *\n   * For Buffer strings, this will be the total byte length.\n   * For string encoding streams, this will be the string character length,\n   * according to JavaScript's `string.length` logic.\n   * For objectMode streams, this is a count of the items waiting to be\n   * emitted.\n   */\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  /**\n   * The `BufferEncoding` currently in use, or `null`\n   */\n  get encoding() {\n    return this[ENCODING]\n  }\n\n  /**\n   * @deprecated - This is a read only property\n   */\n  set encoding(_enc) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * @deprecated - Encoding may only be set at instantiation time\n   */\n  setEncoding(_enc: Minipass.Encoding) {\n    throw new Error('Encoding must be set at instantiation time')\n  }\n\n  /**\n   * True if this is an objectMode stream\n   */\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n\n  /**\n   * @deprecated - This is a read-only property\n   */\n  set objectMode(_om) {\n    throw new Error('objectMode must be set at instantiation time')\n  }\n\n  /**\n   * true if this is an async stream\n   */\n  get ['async'](): boolean {\n    return this[ASYNC]\n  }\n  /**\n   * Set to true to make this stream async.\n   *\n   * Once set, it cannot be unset, as this would potentially cause incorrect\n   * behavior.  Ie, a sync stream can be made async, but an async stream\n   * cannot be safely made sync.\n   */\n  set ['async'](a: boolean) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL]?.reason)\n    this.destroy(this[SIGNAL]?.reason)\n  }\n\n  /**\n   * True if the stream has been aborted.\n   */\n  get aborted() {\n    return this[ABORTED]\n  }\n  /**\n   * No-op setter. Stream aborted status is set via the AbortSignal provided\n   * in the constructor options.\n   */\n  set aborted(_) {}\n\n  /**\n   * Write data into the stream\n   *\n   * If the chunk written is a string, and encoding is not specified, then\n   * `utf8` will be assumed. If the stream encoding matches the encoding of\n   * a written string, and the state of the string decoder allows it, then\n   * the string will be passed through to either the output or the internal\n   * buffer without any processing. Otherwise, it will be turned into a\n   * Buffer object for processing into the desired encoding.\n   *\n   * If provided, `cb` function is called immediately before return for\n   * sync streams, or on next tick for async streams, because for this\n   * base class, a chunk is considered \"processed\" once it is accepted\n   * and either emitted or buffered. That is, the callback does not indicate\n   * that the chunk has been eventually emitted, though of course child\n   * classes can override this function to do whatever processing is required\n   * and call `super.write(...)` only once processing is completed.\n   */\n  write(chunk: WType, cb?: () => void): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding,\n    cb?: () => void\n  ): boolean\n  write(\n    chunk: WType,\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ): boolean {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : nodefer\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything is only allowed if in object mode, so throw\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(\n          chunk.buffer,\n          chunk.byteOffset,\n          chunk.byteLength\n        )\n      } else if (isArrayBufferLike(chunk)) {\n        //@ts-ignore - sinful unsafe type changing\n        chunk = Buffer.from(chunk)\n      } else if (typeof chunk !== 'string') {\n        throw new Error(\n          'Non-contiguous data written to non-objectMode stream'\n        )\n      }\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      // maybe impossible?\n      /* c8 ignore start */\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n      /* c8 ignore stop */\n\n      if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n      else this[BUFFERPUSH](chunk as unknown as RType)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this[FLOWING]\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!(chunk as Minipass.BufferOrString).length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this[FLOWING]\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)\n    ) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n      //@ts-ignore - sinful unsafe type change\n      chunk = this[DECODER].write(chunk)\n    }\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this[FLOWING] && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this[FLOWING]) this.emit('data', chunk as unknown as RType)\n    else this[BUFFERPUSH](chunk as unknown as RType)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this[FLOWING]\n  }\n\n  /**\n   * Low-level explicit read method.\n   *\n   * In objectMode, the argument is ignored, and one item is returned if\n   * available.\n   *\n   * `n` is the number of bytes (or in the case of encoding streams,\n   * characters) to consume. If `n` is not provided, then the entire buffer\n   * is returned, or `null` is returned if no data is available.\n   *\n   * If `n` is greater that the amount of data in the internal buffer,\n   * then `null` is returned.\n   */\n  read(n?: number | null): RType | null {\n    if (this[DESTROYED]) return null\n    this[DISCARDED] = false\n\n    if (\n      this[BUFFERLENGTH] === 0 ||\n      n === 0 ||\n      (n && n > this[BUFFERLENGTH])\n    ) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      // not object mode, so if we have an encoding, then RType is string\n      // otherwise, must be Buffer\n      this[BUFFER] = [\n        (this[ENCODING]\n          ? this[BUFFER].join('')\n          : Buffer.concat(\n              this[BUFFER] as Buffer[],\n              this[BUFFERLENGTH]\n            )) as RType,\n      ]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0] as RType)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n: number | null, chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERSHIFT]()\n    else {\n      const c = chunk as Minipass.BufferOrString\n      if (n === c.length || n === null) this[BUFFERSHIFT]()\n      else if (typeof c === 'string') {\n        this[BUFFER][0] = c.slice(n) as RType\n        chunk = c.slice(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      } else {\n        this[BUFFER][0] = c.subarray(n) as RType\n        chunk = c.subarray(0, n) as RType\n        this[BUFFERLENGTH] -= n\n      }\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  /**\n   * End the stream, optionally providing a final write.\n   *\n   * See {@link Minipass#write} for argument descriptions\n   */\n  end(cb?: () => void): this\n  end(chunk: WType, cb?: () => void): this\n  end(chunk: WType, encoding?: Minipass.Encoding, cb?: () => void): this\n  end(\n    chunk?: WType | (() => void),\n    encoding?: Minipass.Encoding | (() => void),\n    cb?: () => void\n  ) {\n    if (typeof chunk === 'function') {\n      cb = chunk as () => void\n      chunk = undefined\n    }\n    if (typeof encoding === 'function') {\n      cb = encoding\n      encoding = 'utf8'\n    }\n    if (chunk !== undefined) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this[FLOWING] || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    if (!this[DATALISTENERS] && !this[PIPES].length) {\n      this[DISCARDED] = true\n    }\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  /**\n   * Resume the stream if it is currently in a paused state\n   *\n   * If called when there are no pipe destinations or `data` event listeners,\n   * this will place the stream in a \"discarded\" state, where all data will\n   * be thrown away. The discarded state is removed if a pipe destination or\n   * data handler is added, if pause() is called, or if any synchronous or\n   * asynchronous iteration is started.\n   */\n  resume() {\n    return this[RESUME]()\n  }\n\n  /**\n   * Pause the stream\n   */\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n    this[DISCARDED] = false\n  }\n\n  /**\n   * true if the stream has been forcibly destroyed\n   */\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  /**\n   * true if the stream is currently in a flowing state, meaning that\n   * any writes will be immediately emitted.\n   */\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  /**\n   * true if the stream is currently in a paused state\n   */\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk: RType) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += (chunk as Minipass.BufferOrString).length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT](): RType {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else\n      this[BUFFERLENGTH] -= (\n        this[BUFFER][0] as Minipass.BufferOrString\n      ).length\n    return this[BUFFER].shift() as RType\n  }\n\n  [FLUSH](noDrain: boolean = false) {\n    do {} while (\n      this[FLUSHCHUNK](this[BUFFERSHIFT]()) &&\n      this[BUFFER].length\n    )\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk: RType) {\n    this.emit('data', chunk)\n    return this[FLOWING]\n  }\n\n  /**\n   * Pipe all data emitted by this stream into the destination provided.\n   *\n   * Triggers the flow of data.\n   */\n  pipe<W extends Minipass.Writable>(dest: W, opts?: PipeOptions): W {\n    if (this[DESTROYED]) return dest\n    this[DISCARDED] = false\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      // \"as\" here just ignores the WType, which pipes don't care about,\n      // since they're only consuming from us, and writing to the dest\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe<RType>(this as Minipass<RType>, dest, opts)\n          : new PipeProxyErrors<RType>(this as Minipass<RType>, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  /**\n   * Fully unhook a piped destination stream.\n   *\n   * If the destination stream was the only consumer of this stream (ie,\n   * there are no other piped destinations or `'data'` event listeners)\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  unpipe<W extends Minipass.Writable>(dest: W) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      if (this[PIPES].length === 1) {\n        if (this[FLOWING] && this[DATALISTENERS] === 0) {\n          this[FLOWING] = false\n        }\n        this[PIPES] = []\n      } else this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  /**\n   * Alias for {@link Minipass#on}\n   */\n  addListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    return this.on(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.on`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * - Adding a 'data' event handler will trigger the flow of data\n   *\n   * - Adding a 'readable' event handler when there is data waiting to be read\n   *   will cause 'readable' to be emitted immediately.\n   *\n   * - Adding an 'endish' event handler ('end', 'finish', etc.) which has\n   *   already passed will cause the event to be emitted immediately and all\n   *   handlers removed.\n   *\n   * - Adding an 'error' event handler after an error has been emitted will\n   *   cause the event to be re-emitted immediately with the error previously\n   *   raised.\n   */\n  on<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ): this {\n    const ret = super.on(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    if (ev === 'data') {\n      this[DISCARDED] = false\n      this[DATALISTENERS]++\n      if (!this[PIPES].length && !this[FLOWING]) {\n        this[RESUME]()\n      }\n    } else if (ev === 'readable' && this[BUFFERLENGTH] !== 0) {\n      super.emit('readable')\n    } else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      const h = handler as (...a: Events['error']) => any\n      if (this[ASYNC]) defer(() => h.call(this, this[EMITTED_ERROR]))\n      else h.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  /**\n   * Alias for {@link Minipass#off}\n   */\n  removeListener<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    return this.off(ev, handler)\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.off`\n   *\n   * If a 'data' event handler is removed, and it was the last consumer\n   * (ie, there are no pipe destinations or other 'data' event listeners),\n   * then the flow of data will stop until there is another consumer or\n   * {@link Minipass#resume} is explicitly called.\n   */\n  off<Event extends keyof Events>(\n    ev: Event,\n    handler: (...args: Events[Event]) => any\n  ) {\n    const ret = super.off(\n      ev as string | symbol,\n      handler as (...a: any[]) => any\n    )\n    // if we previously had listeners, and now we don't, and we don't\n    // have any pipes, then stop the flow, unless it's been explicitly\n    // put in a discarded flowing state via stream.resume().\n    if (ev === 'data') {\n      this[DATALISTENERS] = this.listeners('data').length\n      if (\n        this[DATALISTENERS] === 0 &&\n        !this[DISCARDED] &&\n        !this[PIPES].length\n      ) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.removeAllListeners`\n   *\n   * If all 'data' event handlers are removed, and they were the last consumer\n   * (ie, there are no pipe destinations), then the flow of data will stop\n   * until there is another consumer or {@link Minipass#resume} is explicitly\n   * called.\n   */\n  removeAllListeners<Event extends keyof Events>(ev?: Event) {\n    const ret = super.removeAllListeners(ev as string | symbol | undefined)\n    if (ev === 'data' || ev === undefined) {\n      this[DATALISTENERS] = 0\n      if (!this[DISCARDED] && !this[PIPES].length) {\n        this[FLOWING] = false\n      }\n    }\n    return ret\n  }\n\n  /**\n   * true if the 'end' event has been emitted\n   */\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  /**\n   * Mostly identical to `EventEmitter.emit`, with the following\n   * behavior differences to prevent data loss and unnecessary hangs:\n   *\n   * If the stream has been destroyed, and the event is something other\n   * than 'close' or 'error', then `false` is returned and no handlers\n   * are called.\n   *\n   * If the event is 'end', and has already been emitted, then the event\n   * is ignored. If the stream is in a paused or non-flowing state, then\n   * the event will be deferred until data flow resumes. If the stream is\n   * async, then handlers will be called on the next tick rather than\n   * immediately.\n   *\n   * If the event is 'close', and 'end' has not yet been emitted, then\n   * the event will be deferred until after 'end' is emitted.\n   *\n   * If the event is 'error', and an AbortSignal was provided for the stream,\n   * and there are no listeners, then the event is ignored, matching the\n   * behavior of node core streams in the presense of an AbortSignal.\n   *\n   * If the event is 'finish' or 'prefinish', then all listeners will be\n   * removed after emitting the event, to prevent double-firing.\n   */\n  emit<Event extends keyof Events>(\n    ev: Event,\n    ...args: Events[Event]\n  ): boolean {\n    const data = args[0]\n    // error and close are only events allowed after calling destroy()\n    if (\n      ev !== 'error' &&\n      ev !== 'close' &&\n      ev !== DESTROYED &&\n      this[DESTROYED]\n    ) {\n      return false\n    } else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? (defer(() => this[EMITDATA](data as RType)), true)\n        : this[EMITDATA](data as RType)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return false\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev as string, ...args)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data: RType) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = this[DISCARDED] ? false : super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return false\n\n    this[EMITTED_END] = true\n    this.readable = false\n    return this[ASYNC]\n      ? (defer(() => this[EMITEND2]()), true)\n      : this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data as RType)\n        }\n        if (!this[DISCARDED]) super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  /**\n   * Return a Promise that resolves to an array of all emitted data once\n   * the stream ends.\n   */\n  async collect(): Promise<RType[] & { dataLength: number }> {\n    const buf: RType[] & { dataLength: number } = Object.assign([], {\n      dataLength: 0,\n    })\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE])\n        buf.dataLength += (c as Minipass.BufferOrString).length\n    })\n    await p\n    return buf\n  }\n\n  /**\n   * Return a Promise that resolves to the concatenation of all emitted data\n   * once the stream ends.\n   *\n   * Not allowed on objectMode streams.\n   */\n  async concat(): Promise<RType> {\n    if (this[OBJECTMODE]) {\n      throw new Error('cannot concat in objectMode')\n    }\n    const buf = await this.collect()\n    return (\n      this[ENCODING]\n        ? buf.join('')\n        : Buffer.concat(buf as Buffer[], buf.dataLength)\n    ) as RType\n  }\n\n  /**\n   * Return a void Promise that resolves once the stream ends.\n   */\n  async promise(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  /**\n   * Asynchronous `for await of` iteration.\n   *\n   * This will continue emitting all chunks until the stream terminates.\n   */\n  [Symbol.asyncIterator](): AsyncGenerator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = async (): Promise<IteratorReturnResult<void>> => {\n      this.pause()\n      stopped = true\n      return { value: undefined, done: true }\n    }\n    const next = (): Promise<IteratorResult<RType, void>> => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve!: (res: IteratorResult<RType>) => void\n      let reject!: (er: unknown) => void\n      const onerr = (er: unknown) => {\n        this.off('data', ondata)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = (value: RType) => {\n        this.off('error', onerr)\n        this.off('end', onend)\n        this.off(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.off('error', onerr)\n        this.off('data', ondata)\n        this.off(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true, value: undefined })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise<IteratorResult<RType>>((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.asyncIterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Synchronous `for of` iteration.\n   *\n   * The iteration will terminate when the internal buffer runs out, even\n   * if the stream has not yet terminated.\n   */\n  [Symbol.iterator](): Generator<RType, void, void> {\n    // set this up front, in case the consumer doesn't call next()\n    // right away.\n    this[DISCARDED] = false\n    let stopped = false\n    const stop = (): IteratorReturnResult<void> => {\n      this.pause()\n      this.off(ERROR, stop)\n      this.off(DESTROYED, stop)\n      this.off('end', stop)\n      stopped = true\n      return { done: true, value: undefined }\n    }\n\n    const next = (): IteratorResult<RType, void> => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { done: false, value }\n    }\n\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [Symbol.iterator]() {\n        return this\n      },\n    }\n  }\n\n  /**\n   * Destroy a stream, preventing it from being used for any further purpose.\n   *\n   * If the stream has a `close()` method, then it will be called on\n   * destruction.\n   *\n   * After destruction, any attempt to write data, read data, or emit most\n   * events will be ignored.\n   *\n   * If an error argument is provided, then it will be emitted in an\n   * 'error' event.\n   */\n  destroy(er?: unknown) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n    this[DISCARDED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    const wc = this as Minipass<RType, WType, Events> & {\n      close?: () => void\n    }\n    if (typeof wc.close === 'function' && !this[CLOSED]) wc.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  /**\n   * Alias for {@link isStream}\n   *\n   * Former export location, maintained for backwards compatibility.\n   *\n   * @deprecated\n   */\n  static get isStream() {\n    return isStream\n  }\n}\n","import { Minimatch, MinimatchOptions } from 'minimatch'\nimport Minipass from 'minipass'\nimport {\n  FSOption,\n  Path,\n  PathScurry,\n  PathScurryDarwin,\n  PathScurryPosix,\n  PathScurryWin32,\n} from 'path-scurry'\nimport { fileURLToPath } from 'url'\nimport { IgnoreLike } from './ignore.js'\nimport { Pattern } from './pattern.js'\nimport { GlobStream, GlobWalker } from './walker.js'\n\nexport type MatchSet = Minimatch['set']\nexport type GlobParts = Exclude<Minimatch['globParts'], undefined>\n\n// if no process global, just call it linux.\n// so we default to case-sensitive, / separators\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * A `GlobOptions` object may be provided to any of the exported methods, and\n * must be provided to the `Glob` constructor.\n *\n * All options are optional, boolean, and false by default, unless otherwise\n * noted.\n *\n * All resolved options are added to the Glob object as properties.\n *\n * If you are running many `glob` operations, you can pass a Glob object as the\n * `options` argument to a subsequent operation to share the previously loaded\n * cache.\n */\nexport interface GlobOptions {\n  /**\n   * Set to `true` to always receive absolute paths for\n   * matched files. Set to `false` to always return relative paths.\n   *\n   * When this option is not set, absolute paths are returned for patterns\n   * that are absolute, and otherwise paths are returned that are relative\n   * to the `cwd` setting.\n   *\n   * This does _not_ make an extra system call to get\n   * the realpath, it only does string path resolution.\n   *\n   * Conflicts with {@link withFileTypes}\n   */\n  absolute?: boolean\n\n  /**\n   * Set to false to enable {@link windowsPathsNoEscape}\n   *\n   * @deprecated\n   */\n  allowWindowsEscape?: boolean\n\n  /**\n   * The current working directory in which to search. Defaults to\n   * `process.cwd()`.\n   *\n   * May be eiher a string path or a `file://` URL object or string.\n   */\n  cwd?: string | URL\n\n  /**\n   * Include `.dot` files in normal matches and `globstar`\n   * matches. Note that an explicit dot in a portion of the pattern\n   * will always match dot files.\n   */\n  dot?: boolean\n\n  /**\n   * Prepend all relative path strings with `./` (or `.\\` on Windows).\n   *\n   * Without this option, returned relative paths are \"bare\", so instead of\n   * returning `'./foo/bar'`, they are returned as `'foo/bar'`.\n   *\n   * Relative patterns starting with `'../'` are not prepended with `./`, even\n   * if this option is set.\n   */\n  dotRelative?: boolean\n\n  /**\n   * Follow symlinked directories when expanding `**`\n   * patterns. This can result in a lot of duplicate references in\n   * the presence of cyclic links, and make performance quite bad.\n   *\n   * By default, a `**` in a pattern will follow 1 symbolic link if\n   * it is not the first item in the pattern, or none if it is the\n   * first item in the pattern, following the same behavior as Bash.\n   */\n  follow?: boolean\n\n  /**\n   * string or string[], or an object with `ignore` and `ignoreChildren`\n   * methods.\n   *\n   * If a string or string[] is provided, then this is treated as a glob\n   * pattern or array of glob patterns to exclude from matches. To ignore all\n   * children within a directory, as well as the entry itself, append `'/**'`\n   * to the ignore pattern.\n   *\n   * **Note** `ignore` patterns are _always_ in `dot:true` mode, regardless of\n   * any other settings.\n   *\n   * If an object is provided that has `ignored(path)` and/or\n   * `childrenIgnored(path)` methods, then these methods will be called to\n   * determine whether any Path is a match or if its children should be\n   * traversed, respectively.\n   */\n  ignore?: string | string[] | IgnoreLike\n\n  /**\n   * Treat brace expansion like `{a,b}` as a \"magic\" pattern. Has no\n   * effect if {@link nobrace} is set.\n   *\n   * Only has effect on the {@link hasMagic} function.\n   */\n  magicalBraces?: boolean\n\n  /**\n   * Add a `/` character to directory matches. Note that this requires\n   * additional stat calls in some cases.\n   */\n  mark?: boolean\n\n  /**\n   * Perform a basename-only match if the pattern does not contain any slash\n   * characters. That is, `*.js` would be treated as equivalent to\n   * `**\\/*.js`, matching all js files in all directories.\n   */\n  matchBase?: boolean\n\n  /**\n   * Limit the directory traversal to a given depth below the cwd.\n   * Note that this does NOT prevent traversal to sibling folders,\n   * root patterns, and so on. It only limits the maximum folder depth\n   * that the walk will descend, relative to the cwd.\n   */\n  maxDepth?: number\n\n  /**\n   * Do not expand `{a,b}` and `{1..3}` brace sets.\n   */\n  nobrace?: boolean\n\n  /**\n   * Perform a case-insensitive match. This defaults to `true` on macOS and\n   * Windows systems, and `false` on all others.\n   *\n   * **Note** `nocase` should only be explicitly set when it is\n   * known that the filesystem's case sensitivity differs from the\n   * platform default. If set `true` on case-sensitive file\n   * systems, or `false` on case-insensitive file systems, then the\n   * walk may return more or less results than expected.\n   */\n  nocase?: boolean\n\n  /**\n   * Do not match directories, only files. (Note: to match\n   * _only_ directories, put a `/` at the end of the pattern.)\n   */\n  nodir?: boolean\n\n  /**\n   * Do not match \"extglob\" patterns such as `+(a|b)`.\n   */\n  noext?: boolean\n\n  /**\n   * Do not match `**` against multiple filenames. (Ie, treat it as a normal\n   * `*` instead.)\n   *\n   * Conflicts with {@link matchBase}\n   */\n  noglobstar?: boolean\n\n  /**\n   * Defaults to value of `process.platform` if available, or `'linux'` if\n   * not. Setting `platform:'win32'` on non-Windows systems may cause strange\n   * behavior.\n   */\n  platform?: NodeJS.Platform\n\n  /**\n   * Set to true to call `fs.realpath` on all of the\n   * results. In the case of an entry that cannot be resolved, the\n   * entry is omitted. This incurs a slight performance penalty, of\n   * course, because of the added system calls.\n   */\n  realpath?: boolean\n\n  /**\n   *\n   * A string path resolved against the `cwd` option, which\n   * is used as the starting point for absolute patterns that start\n   * with `/`, (but not drive letters or UNC paths on Windows).\n   *\n   * Note that this _doesn't_ necessarily limit the walk to the\n   * `root` directory, and doesn't affect the cwd starting point for\n   * non-absolute patterns. A pattern containing `..` will still be\n   * able to traverse out of the root directory, if it is not an\n   * actual root directory on the filesystem, and any non-absolute\n   * patterns will be matched in the `cwd`. For example, the\n   * pattern `/../*` with `{root:'/some/path'}` will return all\n   * files in `/some`, not all files in `/some/path`. The pattern\n   * `*` with `{root:'/some/path'}` will return all the entries in\n   * the cwd, not the entries in `/some/path`.\n   *\n   * To start absolute and non-absolute patterns in the same\n   * path, you can use `{root:''}`. However, be aware that on\n   * Windows systems, a pattern like `x:/*` or `//host/share/*` will\n   * _always_ start in the `x:/` or `//host/share` directory,\n   * regardless of the `root` setting.\n   */\n  root?: string\n\n  /**\n   * A [PathScurry](http://npm.im/path-scurry) object used\n   * to traverse the file system. If the `nocase` option is set\n   * explicitly, then any provided `scurry` object must match this\n   * setting.\n   */\n  scurry?: PathScurry\n\n  /**\n   * Call `lstat()` on all entries, whether required or not to determine\n   * whether it's a valid match. When used with {@link withFileTypes}, this\n   * means that matches will include data such as modified time, permissions,\n   * and so on.  Note that this will incur a performance cost due to the added\n   * system calls.\n   */\n  stat?: boolean\n\n  /**\n   * An AbortSignal which will cancel the Glob walk when\n   * triggered.\n   */\n  signal?: AbortSignal\n\n  /**\n   * Use `\\\\` as a path separator _only_, and\n   *  _never_ as an escape character. If set, all `\\\\` characters are\n   *  replaced with `/` in the pattern.\n   *\n   *  Note that this makes it **impossible** to match against paths\n   *  containing literal glob pattern characters, but allows matching\n   *  with patterns constructed using `path.join()` and\n   *  `path.resolve()` on Windows platforms, mimicking the (buggy!)\n   *  behavior of Glob v7 and before on Windows. Please use with\n   *  caution, and be mindful of [the caveat below about Windows\n   *  paths](#windows). (For legacy reasons, this is also set if\n   *  `allowWindowsEscape` is set to the exact value `false`.)\n   */\n  windowsPathsNoEscape?: boolean\n\n  /**\n   * Return [PathScurry](http://npm.im/path-scurry)\n   * `Path` objects instead of strings. These are similar to a\n   * NodeJS `Dirent` object, but with additional methods and\n   * properties.\n   *\n   * Conflicts with {@link absolute}\n   */\n  withFileTypes?: boolean\n\n  /**\n   * An fs implementation to override some or all of the defaults.  See\n   * http://npm.im/path-scurry for details about what can be overridden.\n   */\n  fs?: FSOption\n\n  /**\n   * Just passed along to Minimatch.  Note that this makes all pattern\n   * matching operations slower and *extremely* noisy.\n   */\n  debug?: boolean\n}\n\nexport type GlobOptionsWithFileTypesTrue = GlobOptions & {\n  withFileTypes: true\n  absolute?: undefined\n}\n\nexport type GlobOptionsWithFileTypesFalse = GlobOptions & {\n  withFileTypes?: false\n}\n\nexport type GlobOptionsWithFileTypesUnset = GlobOptions & {\n  withFileTypes?: undefined\n}\n\nexport type Result<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? Path\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? string\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? string\n  : string | Path\nexport type Results<Opts> = Result<Opts>[]\n\nexport type FileTypes<Opts> = Opts extends GlobOptionsWithFileTypesTrue\n  ? true\n  : Opts extends GlobOptionsWithFileTypesFalse\n  ? false\n  : Opts extends GlobOptionsWithFileTypesUnset\n  ? false\n  : boolean\n\n/**\n * An object that can perform glob pattern traversals.\n */\nexport class Glob<Opts extends GlobOptions> implements GlobOptions {\n  absolute?: boolean\n  cwd: string\n  root?: string\n  dot: boolean\n  dotRelative: boolean\n  follow: boolean\n  ignore?: string | string[] | IgnoreLike\n  magicalBraces: boolean\n  mark?: boolean\n  matchBase: boolean\n  maxDepth: number\n  nobrace: boolean\n  nocase: boolean\n  nodir: boolean\n  noext: boolean\n  noglobstar: boolean\n  pattern: string[]\n  platform: NodeJS.Platform\n  realpath: boolean\n  scurry: PathScurry\n  stat: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape: boolean\n  withFileTypes: FileTypes<Opts>\n\n  /**\n   * The options provided to the constructor.\n   */\n  opts: Opts\n\n  /**\n   * An array of parsed immutable {@link Pattern} objects.\n   */\n  patterns: Pattern[]\n\n  /**\n   * All options are stored as properties on the `Glob` object.\n   *\n   * See {@link GlobOptions} for full options descriptions.\n   *\n   * Note that a previous `Glob` object can be passed as the\n   * `GlobOptions` to another `Glob` instantiation to re-use settings\n   * and caches with a new pattern.\n   *\n   * Traversal functions can be called multiple times to run the walk\n   * again.\n   */\n  constructor(pattern: string | string[], opts: Opts) {\n    this.withFileTypes = !!opts.withFileTypes as FileTypes<Opts>\n    this.signal = opts.signal\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.dotRelative = !!opts.dotRelative\n    this.nodir = !!opts.nodir\n    this.mark = !!opts.mark\n    if (!opts.cwd) {\n      this.cwd = ''\n    } else if (opts.cwd instanceof URL || opts.cwd.startsWith('file://')) {\n      opts.cwd = fileURLToPath(opts.cwd)\n    }\n    this.cwd = opts.cwd || ''\n    this.root = opts.root\n    this.magicalBraces = !!opts.magicalBraces\n    this.nobrace = !!opts.nobrace\n    this.noext = !!opts.noext\n    this.realpath = !!opts.realpath\n    this.absolute = opts.absolute\n\n    this.noglobstar = !!opts.noglobstar\n    this.matchBase = !!opts.matchBase\n    this.maxDepth =\n      typeof opts.maxDepth === 'number' ? opts.maxDepth : Infinity\n    this.stat = !!opts.stat\n    this.ignore = opts.ignore\n\n    if (this.withFileTypes && this.absolute !== undefined) {\n      throw new Error('cannot set absolute and withFileTypes:true')\n    }\n\n    if (typeof pattern === 'string') {\n      pattern = [pattern]\n    }\n\n    this.windowsPathsNoEscape =\n      !!opts.windowsPathsNoEscape ||\n      (opts as GlobOptions).allowWindowsEscape === false\n\n    if (this.windowsPathsNoEscape) {\n      pattern = pattern.map(p => p.replace(/\\\\/g, '/'))\n    }\n\n    if (this.matchBase) {\n      if (opts.noglobstar) {\n        throw new TypeError('base matching requires globstar')\n      }\n      pattern = pattern.map(p => (p.includes('/') ? p : `./**/${p}`))\n    }\n\n    this.pattern = pattern\n\n    this.platform = opts.platform || defaultPlatform\n    this.opts = { ...opts, platform: this.platform }\n    if (opts.scurry) {\n      this.scurry = opts.scurry\n      if (\n        opts.nocase !== undefined &&\n        opts.nocase !== opts.scurry.nocase\n      ) {\n        throw new Error('nocase option contradicts provided scurry option')\n      }\n    } else {\n      const Scurry =\n        opts.platform === 'win32'\n          ? PathScurryWin32\n          : opts.platform === 'darwin'\n          ? PathScurryDarwin\n          : opts.platform\n          ? PathScurryPosix\n          : PathScurry\n      this.scurry = new Scurry(this.cwd, {\n        nocase: opts.nocase,\n        fs: opts.fs,\n      })\n    }\n    this.nocase = this.scurry.nocase\n\n    const mmo: MinimatchOptions = {\n      // default nocase based on platform\n      ...opts,\n      dot: this.dot,\n      matchBase: this.matchBase,\n      nobrace: this.nobrace,\n      nocase: this.nocase,\n      nocaseMagicOnly: true,\n      nocomment: true,\n      noext: this.noext,\n      nonegate: true,\n      optimizationLevel: 2,\n      platform: this.platform,\n      windowsPathsNoEscape: this.windowsPathsNoEscape,\n      debug: !!this.opts.debug,\n    }\n\n    const mms = this.pattern.map(p => new Minimatch(p, mmo))\n    const [matchSet, globParts] = mms.reduce(\n      (set: [MatchSet, GlobParts], m) => {\n        set[0].push(...m.set)\n        set[1].push(...m.globParts)\n        return set\n      },\n      [[], []]\n    )\n    this.patterns = matchSet.map((set, i) => {\n      return new Pattern(set, globParts[i], 0, this.platform)\n    })\n  }\n\n  /**\n   * Returns a Promise that resolves to the results array.\n   */\n  async walk(): Promise<Results<Opts>>\n  async walk(): Promise<(string | Path)[]> {\n    // Walkers always return array of Path objects, so we just have to\n    // coerce them into the right shape.  It will have already called\n    // realpath() if the option was set to do so, so we know that's cached.\n    // start out knowing the cwd, at least\n    return [\n      ...(await new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walk()),\n    ]\n  }\n\n  /**\n   * synchronous {@link Glob.walk}\n   */\n  walkSync(): Results<Opts>\n  walkSync(): (string | Path)[] {\n    return [\n      ...new GlobWalker(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth:\n          this.maxDepth !== Infinity\n            ? this.maxDepth + this.scurry.cwd.depth()\n            : Infinity,\n        platform: this.platform,\n        nocase: this.nocase,\n      }).walkSync(),\n    ]\n  }\n\n  /**\n   * Stream results asynchronously.\n   */\n  stream(): Minipass<Result<Opts>, Result<Opts>>\n  stream(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).stream()\n  }\n\n  /**\n   * Stream results synchronously.\n   */\n  streamSync(): Minipass<Result<Opts>, Result<Opts>>\n  streamSync(): Minipass<string | Path, string | Path> {\n    return new GlobStream(this.patterns, this.scurry.cwd, {\n      ...this.opts,\n      maxDepth:\n        this.maxDepth !== Infinity\n          ? this.maxDepth + this.scurry.cwd.depth()\n          : Infinity,\n      platform: this.platform,\n      nocase: this.nocase,\n    }).streamSync()\n  }\n\n  /**\n   * Default sync iteration function. Returns a Generator that\n   * iterates over the results.\n   */\n  iterateSync(): Generator<Result<Opts>, void, void> {\n    return this.streamSync()[Symbol.iterator]()\n  }\n  [Symbol.iterator]() {\n    return this.iterateSync()\n  }\n\n  /**\n   * Default async iteration function. Returns an AsyncGenerator that\n   * iterates over the results.\n   */\n  iterate(): AsyncGenerator<Result<Opts>, void, void> {\n    return this.stream()[Symbol.asyncIterator]()\n  }\n  [Symbol.asyncIterator]() {\n    return this.iterate()\n  }\n}\n","// this is just a very light wrapper around 2 arrays with an offset index\n\nimport { GLOBSTAR } from 'minimatch'\nexport type MMPattern = string | RegExp | typeof GLOBSTAR\n\n// an array of length >= 1\nexport type PatternList = [p: MMPattern, ...rest: MMPattern[]]\nexport type UNCPatternList = [\n  p0: '',\n  p1: '',\n  p2: string,\n  p3: string,\n  ...rest: MMPattern[]\n]\nexport type DrivePatternList = [p0: string, ...rest: MMPattern[]]\nexport type AbsolutePatternList = [p0: '', ...rest: MMPattern[]]\nexport type GlobList = [p: string, ...rest: string[]]\n\nconst isPatternList = (pl: MMPattern[]): pl is PatternList =>\n  pl.length >= 1\nconst isGlobList = (gl: string[]): gl is GlobList => gl.length >= 1\n\n/**\n * An immutable-ish view on an array of glob parts and their parsed\n * results\n */\nexport class Pattern {\n  readonly #patternList: PatternList\n  readonly #globList: GlobList\n  readonly #index: number\n  readonly length: number\n  readonly #platform: NodeJS.Platform\n  #rest?: Pattern | null\n  #globString?: string\n  #isDrive?: boolean\n  #isUNC?: boolean\n  #isAbsolute?: boolean\n  #followGlobstar: boolean = true\n\n  constructor(\n    patternList: MMPattern[],\n    globList: string[],\n    index: number,\n    platform: NodeJS.Platform\n  ) {\n    if (!isPatternList(patternList)) {\n      throw new TypeError('empty pattern list')\n    }\n    if (!isGlobList(globList)) {\n      throw new TypeError('empty glob list')\n    }\n    if (globList.length !== patternList.length) {\n      throw new TypeError('mismatched pattern list and glob list lengths')\n    }\n    this.length = patternList.length\n    if (index < 0 || index >= this.length) {\n      throw new TypeError('index out of range')\n    }\n    this.#patternList = patternList\n    this.#globList = globList\n    this.#index = index\n    this.#platform = platform\n\n    // normalize root entries of absolute patterns on initial creation.\n    if (this.#index === 0) {\n      // c: => ['c:/']\n      // C:/ => ['C:/']\n      // C:/x => ['C:/', 'x']\n      // //host/share => ['//host/share/']\n      // //host/share/ => ['//host/share/']\n      // //host/share/x => ['//host/share/', 'x']\n      // /etc => ['/', 'etc']\n      // / => ['/']\n      if (this.isUNC()) {\n        // '' / '' / 'host' / 'share'\n        const [p0, p1, p2, p3, ...prest] = this.#patternList\n        const [g0, g1, g2, g3, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = [p0, p1, p2, p3, ''].join('/')\n        const g = [g0, g1, g2, g3, ''].join('/')\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      } else if (this.isDrive() || this.isAbsolute()) {\n        const [p1, ...prest] = this.#patternList\n        const [g1, ...grest] = this.#globList\n        if (prest[0] === '') {\n          // ends in /\n          prest.shift()\n          grest.shift()\n        }\n        const p = (p1 as string) + '/'\n        const g = g1 + '/'\n        this.#patternList = [p, ...prest]\n        this.#globList = [g, ...grest]\n        this.length = this.#patternList.length\n      }\n    }\n  }\n\n  /**\n   * The first entry in the parsed list of patterns\n   */\n  pattern(): MMPattern {\n    return this.#patternList[this.#index]\n  }\n\n  /**\n   * true of if pattern() returns a string\n   */\n  isString(): boolean {\n    return typeof this.#patternList[this.#index] === 'string'\n  }\n  /**\n   * true of if pattern() returns GLOBSTAR\n   */\n  isGlobstar(): boolean {\n    return this.#patternList[this.#index] === GLOBSTAR\n  }\n  /**\n   * true if pattern() returns a regexp\n   */\n  isRegExp(): boolean {\n    return this.#patternList[this.#index] instanceof RegExp\n  }\n\n  /**\n   * The /-joined set of glob parts that make up this pattern\n   */\n  globString(): string {\n    return (this.#globString =\n      this.#globString ||\n      (this.#index === 0\n        ? this.isAbsolute()\n          ? this.#globList[0] + this.#globList.slice(1).join('/')\n          : this.#globList.join('/')\n        : this.#globList.slice(this.#index).join('/')))\n  }\n\n  /**\n   * true if there are more pattern parts after this one\n   */\n  hasMore(): boolean {\n    return this.length > this.#index + 1\n  }\n\n  /**\n   * The rest of the pattern after this part, or null if this is the end\n   */\n  rest(): Pattern | null {\n    if (this.#rest !== undefined) return this.#rest\n    if (!this.hasMore()) return (this.#rest = null)\n    this.#rest = new Pattern(\n      this.#patternList,\n      this.#globList,\n      this.#index + 1,\n      this.#platform\n    )\n    this.#rest.#isAbsolute = this.#isAbsolute\n    this.#rest.#isUNC = this.#isUNC\n    this.#rest.#isDrive = this.#isDrive\n    return this.#rest\n  }\n\n  /**\n   * true if the pattern represents a //unc/path/ on windows\n   */\n  isUNC(): boolean {\n    const pl = this.#patternList\n    return this.#isUNC !== undefined\n      ? this.#isUNC\n      : (this.#isUNC =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          pl[0] === '' &&\n          pl[1] === '' &&\n          typeof pl[2] === 'string' &&\n          !!pl[2] &&\n          typeof pl[3] === 'string' &&\n          !!pl[3])\n  }\n\n  // pattern like C:/...\n  // split = ['C:', ...]\n  // XXX: would be nice to handle patterns like `c:*` to test the cwd\n  // in c: for *, but I don't know of a way to even figure out what that\n  // cwd is without actually chdir'ing into it?\n  /**\n   * True if the pattern starts with a drive letter on Windows\n   */\n  isDrive(): boolean {\n    const pl = this.#patternList\n    return this.#isDrive !== undefined\n      ? this.#isDrive\n      : (this.#isDrive =\n          this.#platform === 'win32' &&\n          this.#index === 0 &&\n          this.length > 1 &&\n          typeof pl[0] === 'string' &&\n          /^[a-z]:$/i.test(pl[0]))\n  }\n\n  // pattern = '/' or '/...' or '/x/...'\n  // split = ['', ''] or ['', ...] or ['', 'x', ...]\n  // Drive and UNC both considered absolute on windows\n  /**\n   * True if the pattern is rooted on an absolute path\n   */\n  isAbsolute(): boolean {\n    const pl = this.#patternList\n    return this.#isAbsolute !== undefined\n      ? this.#isAbsolute\n      : (this.#isAbsolute =\n          (pl[0] === '' && pl.length > 1) ||\n          this.isDrive() ||\n          this.isUNC())\n  }\n\n  /**\n   * consume the root of the pattern, and return it\n   */\n  root(): string {\n    const p = this.#patternList[0]\n    return typeof p === 'string' && this.isAbsolute() && this.#index === 0\n      ? p\n      : ''\n  }\n\n  /**\n   * Check to see if the current globstar pattern is allowed to follow\n   * a symbolic link.\n   */\n  checkFollowGlobstar(): boolean {\n    return !(\n      this.#index === 0 ||\n      !this.isGlobstar() ||\n      !this.#followGlobstar\n    )\n  }\n\n  /**\n   * Mark that the current globstar pattern is following a symbolic link\n   */\n  markFollowGlobstar(): boolean {\n    if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n      return false\n    this.#followGlobstar = false\n    return true\n  }\n}\n","'use strict'\nconst proc =\n  typeof process === 'object' && process\n    ? process\n    : {\n        stdout: null,\n        stderr: null,\n      }\nimport EE from 'events'\nimport Stream from 'stream'\nimport stringdecoder from 'string_decoder'\nconst SD = stringdecoder.StringDecoder\n\nconst EOF = Symbol('EOF')\nconst MAYBE_EMIT_END = Symbol('maybeEmitEnd')\nconst EMITTED_END = Symbol('emittedEnd')\nconst EMITTING_END = Symbol('emittingEnd')\nconst EMITTED_ERROR = Symbol('emittedError')\nconst CLOSED = Symbol('closed')\nconst READ = Symbol('read')\nconst FLUSH = Symbol('flush')\nconst FLUSHCHUNK = Symbol('flushChunk')\nconst ENCODING = Symbol('encoding')\nconst DECODER = Symbol('decoder')\nconst FLOWING = Symbol('flowing')\nconst PAUSED = Symbol('paused')\nconst RESUME = Symbol('resume')\nconst BUFFER = Symbol('buffer')\nconst PIPES = Symbol('pipes')\nconst BUFFERLENGTH = Symbol('bufferLength')\nconst BUFFERPUSH = Symbol('bufferPush')\nconst BUFFERSHIFT = Symbol('bufferShift')\nconst OBJECTMODE = Symbol('objectMode')\n// internal event when stream is destroyed\nconst DESTROYED = Symbol('destroyed')\n// internal event when stream has an error\nconst ERROR = Symbol('error')\nconst EMITDATA = Symbol('emitData')\nconst EMITEND = Symbol('emitEnd')\nconst EMITEND2 = Symbol('emitEnd2')\nconst ASYNC = Symbol('async')\nconst ABORT = Symbol('abort')\nconst ABORTED = Symbol('aborted')\nconst SIGNAL = Symbol('signal')\n\nconst defer = fn => Promise.resolve().then(fn)\n\n// TODO remove when Node v8 support drops\nconst doIter = global._MP_NO_ITERATOR_SYMBOLS_ !== '1'\nconst ASYNCITERATOR =\n  (doIter && Symbol.asyncIterator) || Symbol('asyncIterator not implemented')\nconst ITERATOR =\n  (doIter && Symbol.iterator) || Symbol('iterator not implemented')\n\n// events that mean 'the stream is over'\n// these are treated specially, and re-emitted\n// if they are listened for after emitting.\nconst isEndish = ev => ev === 'end' || ev === 'finish' || ev === 'prefinish'\n\nconst isArrayBuffer = b =>\n  b instanceof ArrayBuffer ||\n  (typeof b === 'object' &&\n    b.constructor &&\n    b.constructor.name === 'ArrayBuffer' &&\n    b.byteLength >= 0)\n\nconst isArrayBufferView = b => !Buffer.isBuffer(b) && ArrayBuffer.isView(b)\n\nclass Pipe {\n  constructor(src, dest, opts) {\n    this.src = src\n    this.dest = dest\n    this.opts = opts\n    this.ondrain = () => src[RESUME]()\n    dest.on('drain', this.ondrain)\n  }\n  unpipe() {\n    this.dest.removeListener('drain', this.ondrain)\n  }\n  // istanbul ignore next - only here for the prototype\n  proxyErrors() {}\n  end() {\n    this.unpipe()\n    if (this.opts.end) this.dest.end()\n  }\n}\n\nclass PipeProxyErrors extends Pipe {\n  unpipe() {\n    this.src.removeListener('error', this.proxyErrors)\n    super.unpipe()\n  }\n  constructor(src, dest, opts) {\n    super(src, dest, opts)\n    this.proxyErrors = er => dest.emit('error', er)\n    src.on('error', this.proxyErrors)\n  }\n}\n\nclass Minipass extends Stream {\n  constructor(options) {\n    super()\n    this[FLOWING] = false\n    // whether we're explicitly paused\n    this[PAUSED] = false\n    this[PIPES] = []\n    this[BUFFER] = []\n    this[OBJECTMODE] = (options && options.objectMode) || false\n    if (this[OBJECTMODE]) this[ENCODING] = null\n    else this[ENCODING] = (options && options.encoding) || null\n    if (this[ENCODING] === 'buffer') this[ENCODING] = null\n    this[ASYNC] = (options && !!options.async) || false\n    this[DECODER] = this[ENCODING] ? new SD(this[ENCODING]) : null\n    this[EOF] = false\n    this[EMITTED_END] = false\n    this[EMITTING_END] = false\n    this[CLOSED] = false\n    this[EMITTED_ERROR] = null\n    this.writable = true\n    this.readable = true\n    this[BUFFERLENGTH] = 0\n    this[DESTROYED] = false\n    if (options && options.debugExposeBuffer === true) {\n      Object.defineProperty(this, 'buffer', { get: () => this[BUFFER] })\n    }\n    if (options && options.debugExposePipes === true) {\n      Object.defineProperty(this, 'pipes', { get: () => this[PIPES] })\n    }\n    this[SIGNAL] = options && options.signal\n    this[ABORTED] = false\n    if (this[SIGNAL]) {\n      this[SIGNAL].addEventListener('abort', () => this[ABORT]())\n      if (this[SIGNAL].aborted) {\n        this[ABORT]()\n      }\n    }\n  }\n\n  get bufferLength() {\n    return this[BUFFERLENGTH]\n  }\n\n  get encoding() {\n    return this[ENCODING]\n  }\n  set encoding(enc) {\n    if (this[OBJECTMODE]) throw new Error('cannot set encoding in objectMode')\n\n    if (\n      this[ENCODING] &&\n      enc !== this[ENCODING] &&\n      ((this[DECODER] && this[DECODER].lastNeed) || this[BUFFERLENGTH])\n    )\n      throw new Error('cannot change encoding')\n\n    if (this[ENCODING] !== enc) {\n      this[DECODER] = enc ? new SD(enc) : null\n      if (this[BUFFER].length)\n        this[BUFFER] = this[BUFFER].map(chunk => this[DECODER].write(chunk))\n    }\n\n    this[ENCODING] = enc\n  }\n\n  setEncoding(enc) {\n    this.encoding = enc\n  }\n\n  get objectMode() {\n    return this[OBJECTMODE]\n  }\n  set objectMode(om) {\n    this[OBJECTMODE] = this[OBJECTMODE] || !!om\n  }\n\n  get ['async']() {\n    return this[ASYNC]\n  }\n  set ['async'](a) {\n    this[ASYNC] = this[ASYNC] || !!a\n  }\n\n  // drop everything and get out of the flow completely\n  [ABORT]() {\n    this[ABORTED] = true\n    this.emit('abort', this[SIGNAL].reason)\n    this.destroy(this[SIGNAL].reason)\n  }\n\n  get aborted() {\n    return this[ABORTED]\n  }\n  set aborted(_) {}\n\n  write(chunk, encoding, cb) {\n    if (this[ABORTED]) return false\n    if (this[EOF]) throw new Error('write after end')\n\n    if (this[DESTROYED]) {\n      this.emit(\n        'error',\n        Object.assign(\n          new Error('Cannot call write after a stream was destroyed'),\n          { code: 'ERR_STREAM_DESTROYED' }\n        )\n      )\n      return true\n    }\n\n    if (typeof encoding === 'function') (cb = encoding), (encoding = 'utf8')\n\n    if (!encoding) encoding = 'utf8'\n\n    const fn = this[ASYNC] ? defer : f => f()\n\n    // convert array buffers and typed array views into buffers\n    // at some point in the future, we may want to do the opposite!\n    // leave strings and buffers as-is\n    // anything else switches us into object mode\n    if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n      if (isArrayBufferView(chunk))\n        chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n      else if (isArrayBuffer(chunk)) chunk = Buffer.from(chunk)\n      else if (typeof chunk !== 'string')\n        // use the setter so we throw if we have encoding set\n        this.objectMode = true\n    }\n\n    // handle object mode up front, since it's simpler\n    // this yields better performance, fewer checks later.\n    if (this[OBJECTMODE]) {\n      /* istanbul ignore if - maybe impossible? */\n      if (this.flowing && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n      if (this.flowing) this.emit('data', chunk)\n      else this[BUFFERPUSH](chunk)\n\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n      if (cb) fn(cb)\n\n      return this.flowing\n    }\n\n    // at this point the chunk is a buffer or string\n    // don't buffer it up or send it to the decoder\n    if (!chunk.length) {\n      if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n      if (cb) fn(cb)\n      return this.flowing\n    }\n\n    // fast-path writing strings of same encoding to a stream with\n    // an empty buffer, skipping the buffer/decoder dance\n    if (\n      typeof chunk === 'string' &&\n      // unless it is a string already ready for us to use\n      !(encoding === this[ENCODING] && !this[DECODER].lastNeed)\n    ) {\n      chunk = Buffer.from(chunk, encoding)\n    }\n\n    if (Buffer.isBuffer(chunk) && this[ENCODING])\n      chunk = this[DECODER].write(chunk)\n\n    // Note: flushing CAN potentially switch us into not-flowing mode\n    if (this.flowing && this[BUFFERLENGTH] !== 0) this[FLUSH](true)\n\n    if (this.flowing) this.emit('data', chunk)\n    else this[BUFFERPUSH](chunk)\n\n    if (this[BUFFERLENGTH] !== 0) this.emit('readable')\n\n    if (cb) fn(cb)\n\n    return this.flowing\n  }\n\n  read(n) {\n    if (this[DESTROYED]) return null\n\n    if (this[BUFFERLENGTH] === 0 || n === 0 || n > this[BUFFERLENGTH]) {\n      this[MAYBE_EMIT_END]()\n      return null\n    }\n\n    if (this[OBJECTMODE]) n = null\n\n    if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n      if (this.encoding) this[BUFFER] = [this[BUFFER].join('')]\n      else this[BUFFER] = [Buffer.concat(this[BUFFER], this[BUFFERLENGTH])]\n    }\n\n    const ret = this[READ](n || null, this[BUFFER][0])\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [READ](n, chunk) {\n    if (n === chunk.length || n === null) this[BUFFERSHIFT]()\n    else {\n      this[BUFFER][0] = chunk.slice(n)\n      chunk = chunk.slice(0, n)\n      this[BUFFERLENGTH] -= n\n    }\n\n    this.emit('data', chunk)\n\n    if (!this[BUFFER].length && !this[EOF]) this.emit('drain')\n\n    return chunk\n  }\n\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') (cb = chunk), (chunk = null)\n    if (typeof encoding === 'function') (cb = encoding), (encoding = 'utf8')\n    if (chunk) this.write(chunk, encoding)\n    if (cb) this.once('end', cb)\n    this[EOF] = true\n    this.writable = false\n\n    // if we haven't written anything, then go ahead and emit,\n    // even if we're not reading.\n    // we'll re-emit if a new 'end' listener is added anyway.\n    // This makes MP more suitable to write-only use cases.\n    if (this.flowing || !this[PAUSED]) this[MAYBE_EMIT_END]()\n    return this\n  }\n\n  // don't let the internal resume be overwritten\n  [RESUME]() {\n    if (this[DESTROYED]) return\n\n    this[PAUSED] = false\n    this[FLOWING] = true\n    this.emit('resume')\n    if (this[BUFFER].length) this[FLUSH]()\n    else if (this[EOF]) this[MAYBE_EMIT_END]()\n    else this.emit('drain')\n  }\n\n  resume() {\n    return this[RESUME]()\n  }\n\n  pause() {\n    this[FLOWING] = false\n    this[PAUSED] = true\n  }\n\n  get destroyed() {\n    return this[DESTROYED]\n  }\n\n  get flowing() {\n    return this[FLOWING]\n  }\n\n  get paused() {\n    return this[PAUSED]\n  }\n\n  [BUFFERPUSH](chunk) {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] += 1\n    else this[BUFFERLENGTH] += chunk.length\n    this[BUFFER].push(chunk)\n  }\n\n  [BUFFERSHIFT]() {\n    if (this[OBJECTMODE]) this[BUFFERLENGTH] -= 1\n    else this[BUFFERLENGTH] -= this[BUFFER][0].length\n    return this[BUFFER].shift()\n  }\n\n  [FLUSH](noDrain) {\n    do {} while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) && this[BUFFER].length)\n\n    if (!noDrain && !this[BUFFER].length && !this[EOF]) this.emit('drain')\n  }\n\n  [FLUSHCHUNK](chunk) {\n    this.emit('data', chunk)\n    return this.flowing\n  }\n\n  pipe(dest, opts) {\n    if (this[DESTROYED]) return\n\n    const ended = this[EMITTED_END]\n    opts = opts || {}\n    if (dest === proc.stdout || dest === proc.stderr) opts.end = false\n    else opts.end = opts.end !== false\n    opts.proxyErrors = !!opts.proxyErrors\n\n    // piping an ended stream ends immediately\n    if (ended) {\n      if (opts.end) dest.end()\n    } else {\n      this[PIPES].push(\n        !opts.proxyErrors\n          ? new Pipe(this, dest, opts)\n          : new PipeProxyErrors(this, dest, opts)\n      )\n      if (this[ASYNC]) defer(() => this[RESUME]())\n      else this[RESUME]()\n    }\n\n    return dest\n  }\n\n  unpipe(dest) {\n    const p = this[PIPES].find(p => p.dest === dest)\n    if (p) {\n      this[PIPES].splice(this[PIPES].indexOf(p), 1)\n      p.unpipe()\n    }\n  }\n\n  addListener(ev, fn) {\n    return this.on(ev, fn)\n  }\n\n  on(ev, fn) {\n    const ret = super.on(ev, fn)\n    if (ev === 'data' && !this[PIPES].length && !this.flowing) this[RESUME]()\n    else if (ev === 'readable' && this[BUFFERLENGTH] !== 0)\n      super.emit('readable')\n    else if (isEndish(ev) && this[EMITTED_END]) {\n      super.emit(ev)\n      this.removeAllListeners(ev)\n    } else if (ev === 'error' && this[EMITTED_ERROR]) {\n      if (this[ASYNC]) defer(() => fn.call(this, this[EMITTED_ERROR]))\n      else fn.call(this, this[EMITTED_ERROR])\n    }\n    return ret\n  }\n\n  get emittedEnd() {\n    return this[EMITTED_END]\n  }\n\n  [MAYBE_EMIT_END]() {\n    if (\n      !this[EMITTING_END] &&\n      !this[EMITTED_END] &&\n      !this[DESTROYED] &&\n      this[BUFFER].length === 0 &&\n      this[EOF]\n    ) {\n      this[EMITTING_END] = true\n      this.emit('end')\n      this.emit('prefinish')\n      this.emit('finish')\n      if (this[CLOSED]) this.emit('close')\n      this[EMITTING_END] = false\n    }\n  }\n\n  emit(ev, data, ...extra) {\n    // error and close are only events allowed after calling destroy()\n    if (ev !== 'error' && ev !== 'close' && ev !== DESTROYED && this[DESTROYED])\n      return\n    else if (ev === 'data') {\n      return !this[OBJECTMODE] && !data\n        ? false\n        : this[ASYNC]\n        ? defer(() => this[EMITDATA](data))\n        : this[EMITDATA](data)\n    } else if (ev === 'end') {\n      return this[EMITEND]()\n    } else if (ev === 'close') {\n      this[CLOSED] = true\n      // don't emit close before 'end' and 'finish'\n      if (!this[EMITTED_END] && !this[DESTROYED]) return\n      const ret = super.emit('close')\n      this.removeAllListeners('close')\n      return ret\n    } else if (ev === 'error') {\n      this[EMITTED_ERROR] = data\n      super.emit(ERROR, data)\n      const ret =\n        !this[SIGNAL] || this.listeners('error').length\n          ? super.emit('error', data)\n          : false\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'resume') {\n      const ret = super.emit('resume')\n      this[MAYBE_EMIT_END]()\n      return ret\n    } else if (ev === 'finish' || ev === 'prefinish') {\n      const ret = super.emit(ev)\n      this.removeAllListeners(ev)\n      return ret\n    }\n\n    // Some other unknown event\n    const ret = super.emit(ev, data, ...extra)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITDATA](data) {\n    for (const p of this[PIPES]) {\n      if (p.dest.write(data) === false) this.pause()\n    }\n    const ret = super.emit('data', data)\n    this[MAYBE_EMIT_END]()\n    return ret\n  }\n\n  [EMITEND]() {\n    if (this[EMITTED_END]) return\n\n    this[EMITTED_END] = true\n    this.readable = false\n    if (this[ASYNC]) defer(() => this[EMITEND2]())\n    else this[EMITEND2]()\n  }\n\n  [EMITEND2]() {\n    if (this[DECODER]) {\n      const data = this[DECODER].end()\n      if (data) {\n        for (const p of this[PIPES]) {\n          p.dest.write(data)\n        }\n        super.emit('data', data)\n      }\n    }\n\n    for (const p of this[PIPES]) {\n      p.end()\n    }\n    const ret = super.emit('end')\n    this.removeAllListeners('end')\n    return ret\n  }\n\n  // const all = await stream.collect()\n  collect() {\n    const buf = []\n    if (!this[OBJECTMODE]) buf.dataLength = 0\n    // set the promise first, in case an error is raised\n    // by triggering the flow here.\n    const p = this.promise()\n    this.on('data', c => {\n      buf.push(c)\n      if (!this[OBJECTMODE]) buf.dataLength += c.length\n    })\n    return p.then(() => buf)\n  }\n\n  // const data = await stream.concat()\n  concat() {\n    return this[OBJECTMODE]\n      ? Promise.reject(new Error('cannot concat in objectMode'))\n      : this.collect().then(buf =>\n          this[OBJECTMODE]\n            ? Promise.reject(new Error('cannot concat in objectMode'))\n            : this[ENCODING]\n            ? buf.join('')\n            : Buffer.concat(buf, buf.dataLength)\n        )\n  }\n\n  // stream.promise().then(() => done, er => emitted error)\n  promise() {\n    return new Promise((resolve, reject) => {\n      this.on(DESTROYED, () => reject(new Error('stream destroyed')))\n      this.on('error', er => reject(er))\n      this.on('end', () => resolve())\n    })\n  }\n\n  // for await (let chunk of stream)\n  [ASYNCITERATOR]() {\n    let stopped = false\n    const stop = () => {\n      this.pause()\n      stopped = true\n      return Promise.resolve({ done: true })\n    }\n    const next = () => {\n      if (stopped) return stop()\n      const res = this.read()\n      if (res !== null) return Promise.resolve({ done: false, value: res })\n\n      if (this[EOF]) return stop()\n\n      let resolve = null\n      let reject = null\n      const onerr = er => {\n        this.removeListener('data', ondata)\n        this.removeListener('end', onend)\n        this.removeListener(DESTROYED, ondestroy)\n        stop()\n        reject(er)\n      }\n      const ondata = value => {\n        this.removeListener('error', onerr)\n        this.removeListener('end', onend)\n        this.removeListener(DESTROYED, ondestroy)\n        this.pause()\n        resolve({ value: value, done: !!this[EOF] })\n      }\n      const onend = () => {\n        this.removeListener('error', onerr)\n        this.removeListener('data', ondata)\n        this.removeListener(DESTROYED, ondestroy)\n        stop()\n        resolve({ done: true })\n      }\n      const ondestroy = () => onerr(new Error('stream destroyed'))\n      return new Promise((res, rej) => {\n        reject = rej\n        resolve = res\n        this.once(DESTROYED, ondestroy)\n        this.once('error', onerr)\n        this.once('end', onend)\n        this.once('data', ondata)\n      })\n    }\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [ASYNCITERATOR]() {\n        return this\n      },\n    }\n  }\n\n  // for (let chunk of stream)\n  [ITERATOR]() {\n    let stopped = false\n    const stop = () => {\n      this.pause()\n      this.removeListener(ERROR, stop)\n      this.removeListener(DESTROYED, stop)\n      this.removeListener('end', stop)\n      stopped = true\n      return { done: true }\n    }\n\n    const next = () => {\n      if (stopped) return stop()\n      const value = this.read()\n      return value === null ? stop() : { value }\n    }\n    this.once('end', stop)\n    this.once(ERROR, stop)\n    this.once(DESTROYED, stop)\n\n    return {\n      next,\n      throw: stop,\n      return: stop,\n      [ITERATOR]() {\n        return this\n      },\n    }\n  }\n\n  destroy(er) {\n    if (this[DESTROYED]) {\n      if (er) this.emit('error', er)\n      else this.emit(DESTROYED)\n      return this\n    }\n\n    this[DESTROYED] = true\n\n    // throw away all buffered data, it's never coming out\n    this[BUFFER].length = 0\n    this[BUFFERLENGTH] = 0\n\n    if (typeof this.close === 'function' && !this[CLOSED]) this.close()\n\n    if (er) this.emit('error', er)\n    // if no error to emit, still reject pending promises\n    else this.emit(DESTROYED)\n\n    return this\n  }\n\n  static isStream(s) {\n    return (\n      !!s &&\n      (s instanceof Minipass ||\n        s instanceof Stream ||\n        (s instanceof EE &&\n          // readable\n          (typeof s.pipe === 'function' ||\n            // writable\n            (typeof s.write === 'function' && typeof s.end === 'function'))))\n    )\n  }\n}\n\nexport default Minipass\n","// give it a pattern, and it'll be able to tell you if\n// a given path should be ignored.\n// Ignoring a path ignores its children if the pattern ends in /**\n// Ignores are always parsed in dot:true mode\n\nimport { Minimatch } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\nexport interface IgnoreLike {\n  ignored?: (p: Path) => boolean\n  childrenIgnored?: (p: Path) => boolean\n}\n\nconst defaultPlatform: NodeJS.Platform =\n  typeof process === 'object' &&\n  process &&\n  typeof process.platform === 'string'\n    ? process.platform\n    : 'linux'\n\n/**\n * Class used to process ignored patterns\n */\nexport class Ignore implements IgnoreLike {\n  relative: Minimatch[]\n  relativeChildren: Minimatch[]\n  absolute: Minimatch[]\n  absoluteChildren: Minimatch[]\n\n  constructor(\n    ignored: string[],\n    {\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      platform = defaultPlatform,\n    }: GlobWalkerOpts\n  ) {\n    this.relative = []\n    this.absolute = []\n    this.relativeChildren = []\n    this.absoluteChildren = []\n    const mmopts = {\n      dot: true,\n      nobrace,\n      nocase,\n      noext,\n      noglobstar,\n      optimizationLevel: 2,\n      platform,\n      nocomment: true,\n      nonegate: true,\n    }\n\n    // this is a little weird, but it gives us a clean set of optimized\n    // minimatch matchers, without getting tripped up if one of them\n    // ends in /** inside a brace section, and it's only inefficient at\n    // the start of the walk, not along it.\n    // It'd be nice if the Pattern class just had a .test() method, but\n    // handling globstars is a bit of a pita, and that code already lives\n    // in minimatch anyway.\n    // Another way would be if maybe Minimatch could take its set/globParts\n    // as an option, and then we could at least just use Pattern to test\n    // for absolute-ness.\n    // Yet another way, Minimatch could take an array of glob strings, and\n    // a cwd option, and do the right thing.\n    for (const ign of ignored) {\n      const mm = new Minimatch(ign, mmopts)\n      for (let i = 0; i < mm.set.length; i++) {\n        const parsed = mm.set[i]\n        const globParts = mm.globParts[i]\n        const p = new Pattern(parsed, globParts, 0, platform)\n        const m = new Minimatch(p.globString(), mmopts)\n        const children = globParts[globParts.length - 1] === '**'\n        const absolute = p.isAbsolute()\n        if (absolute) this.absolute.push(m)\n        else this.relative.push(m)\n        if (children) {\n          if (absolute) this.absoluteChildren.push(m)\n          else this.relativeChildren.push(m)\n        }\n      }\n    }\n  }\n\n  ignored(p: Path): boolean {\n    const fullpath = p.fullpath()\n    const fullpaths = `${fullpath}/`\n    const relative = p.relative() || '.'\n    const relatives = `${relative}/`\n    for (const m of this.relative) {\n      if (m.match(relative) || m.match(relatives)) return true\n    }\n    for (const m of this.absolute) {\n      if (m.match(fullpath) || m.match(fullpaths)) return true\n    }\n    return false\n  }\n\n  childrenIgnored(p: Path): boolean {\n    const fullpath = p.fullpath() + '/'\n    const relative = (p.relative() || '.') + '/'\n    for (const m of this.relativeChildren) {\n      if (m.match(relative)) return true\n    }\n    for (const m of this.absoluteChildren) {\n      if (m.match(fullpath)) true\n    }\n    return false\n  }\n}\n","// synchronous utility for filtering entries and calculating subwalks\n\nimport { GLOBSTAR, MMRegExp } from 'minimatch'\nimport { Path } from 'path-scurry'\nimport { MMPattern, Pattern } from './pattern.js'\nimport { GlobWalkerOpts } from './walker.js'\n\n/**\n * A cache of which patterns have been processed for a given Path\n */\nexport class HasWalkedCache {\n  store: Map<string, Set<string>>\n  constructor(store: Map<string, Set<string>> = new Map()) {\n    this.store = store\n  }\n  copy() {\n    return new HasWalkedCache(new Map(this.store))\n  }\n  hasWalked(target: Path, pattern: Pattern) {\n    return this.store.get(target.fullpath())?.has(pattern.globString())\n  }\n  storeWalked(target: Path, pattern: Pattern) {\n    const fullpath = target.fullpath()\n    const cached = this.store.get(fullpath)\n    if (cached) cached.add(pattern.globString())\n    else this.store.set(fullpath, new Set([pattern.globString()]))\n  }\n}\n\n/**\n * A record of which paths have been matched in a given walk step,\n * and whether they only are considered a match if they are a directory,\n * and whether their absolute or relative path should be returned.\n */\nexport class MatchRecord {\n  store: Map<Path, number> = new Map()\n  add(target: Path, absolute: boolean, ifDir: boolean) {\n    const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0)\n    const current = this.store.get(target)\n    this.store.set(target, current === undefined ? n : n & current)\n  }\n  // match, absolute, ifdir\n  entries(): [Path, boolean, boolean][] {\n    return [...this.store.entries()].map(([path, n]) => [\n      path,\n      !!(n & 2),\n      !!(n & 1),\n    ])\n  }\n}\n\n/**\n * A collection of patterns that must be processed in a subsequent step\n * for a given path.\n */\nexport class SubWalks {\n  store: Map<Path, Pattern[]> = new Map()\n  add(target: Path, pattern: Pattern) {\n    if (!target.canReaddir()) {\n      return\n    }\n    const subs = this.store.get(target)\n    if (subs) {\n      if (!subs.find(p => p.globString() === pattern.globString())) {\n        subs.push(pattern)\n      }\n    } else this.store.set(target, [pattern])\n  }\n  get(target: Path): Pattern[] {\n    const subs = this.store.get(target)\n    /* c8 ignore start */\n    if (!subs) {\n      throw new Error('attempting to walk unknown path')\n    }\n    /* c8 ignore stop */\n    return subs\n  }\n  entries(): [Path, Pattern[]][] {\n    return this.keys().map(k => [k, this.store.get(k) as Pattern[]])\n  }\n  keys(): Path[] {\n    return [...this.store.keys()].filter(t => t.canReaddir())\n  }\n}\n\n/**\n * The class that processes patterns for a given path.\n *\n * Handles child entry filtering, and determining whether a path's\n * directory contents must be read.\n */\nexport class Processor {\n  hasWalkedCache: HasWalkedCache\n  matches = new MatchRecord()\n  subwalks = new SubWalks()\n  patterns?: Pattern[]\n  follow: boolean\n  dot: boolean\n  opts: GlobWalkerOpts\n\n  constructor(opts: GlobWalkerOpts, hasWalkedCache?: HasWalkedCache) {\n    this.opts = opts\n    this.follow = !!opts.follow\n    this.dot = !!opts.dot\n    this.hasWalkedCache = hasWalkedCache\n      ? hasWalkedCache.copy()\n      : new HasWalkedCache()\n  }\n\n  processPatterns(target: Path, patterns: Pattern[]) {\n    this.patterns = patterns\n    const processingSet: [Path, Pattern][] = patterns.map(p => [target, p])\n\n    // map of paths to the magic-starting subwalks they need to walk\n    // first item in patterns is the filter\n\n    for (let [t, pattern] of processingSet) {\n      this.hasWalkedCache.storeWalked(t, pattern)\n\n      const root = pattern.root()\n      const absolute = pattern.isAbsolute() && this.opts.absolute !== false\n\n      // start absolute patterns at root\n      if (root) {\n        t = t.resolve(\n          root === '/' && this.opts.root !== undefined\n            ? this.opts.root\n            : root\n        )\n        const rest = pattern.rest()\n        if (!rest) {\n          this.matches.add(t, true, false)\n          continue\n        } else {\n          pattern = rest\n        }\n      }\n\n      if (t.isENOENT()) continue\n\n      let p: MMPattern\n      let rest: Pattern | null\n      let changed = false\n      while (\n        typeof (p = pattern.pattern()) === 'string' &&\n        (rest = pattern.rest())\n      ) {\n        const c = t.resolve(p)\n        // we can be reasonably sure that .. is a readable dir\n        if (c.isUnknown() && p !== '..') break\n        t = c\n        pattern = rest\n        changed = true\n      }\n      p = pattern.pattern()\n      rest = pattern.rest()\n      if (changed) {\n        if (this.hasWalkedCache.hasWalked(t, pattern)) continue\n        this.hasWalkedCache.storeWalked(t, pattern)\n      }\n\n      // now we have either a final string for a known entry,\n      // more strings for an unknown entry,\n      // or a pattern starting with magic, mounted on t.\n      if (typeof p === 'string') {\n        // must be final entry\n        if (!rest) {\n          const ifDir = p === '..' || p === '' || p === '.'\n          this.matches.add(t.resolve(p), absolute, ifDir)\n        } else {\n          this.subwalks.add(t, pattern)\n        }\n        continue\n      } else if (p === GLOBSTAR) {\n        // if no rest, match and subwalk pattern\n        // if rest, process rest and subwalk pattern\n        // if it's a symlink, but we didn't get here by way of a\n        // globstar match (meaning it's the first time THIS globstar\n        // has traversed a symlink), then we follow it. Otherwise, stop.\n        if (\n          !t.isSymbolicLink() ||\n          this.follow ||\n          pattern.checkFollowGlobstar()\n        ) {\n          this.subwalks.add(t, pattern)\n        }\n        const rp = rest?.pattern()\n        const rrest = rest?.rest()\n        if (!rest || ((rp === '' || rp === '.') && !rrest)) {\n          // only HAS to be a dir if it ends in **/ or **/.\n          // but ending in ** will match files as well.\n          this.matches.add(t, absolute, rp === '' || rp === '.')\n        } else {\n          if (rp === '..') {\n            // this would mean you're matching **/.. at the fs root,\n            // and no thanks, I'm not gonna test that specific case.\n            /* c8 ignore start */\n            const tp = t.parent || t\n            /* c8 ignore stop */\n            if (!rrest) this.matches.add(tp, absolute, true)\n            else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n              this.subwalks.add(tp, rrest)\n            }\n          }\n        }\n      } else if (p instanceof RegExp) {\n        this.subwalks.add(t, pattern)\n      }\n    }\n\n    return this\n  }\n\n  subwalkTargets(): Path[] {\n    return this.subwalks.keys()\n  }\n\n  child() {\n    return new Processor(this.opts, this.hasWalkedCache)\n  }\n\n  // return a new Processor containing the subwalks for each\n  // child entry, and a set of matches, and\n  // a hasWalkedCache that's a copy of this one\n  // then we're going to call\n  filterEntries(parent: Path, entries: Path[]): Processor {\n    const patterns = this.subwalks.get(parent)\n    // put matches and entry walks into the results processor\n    const results = this.child()\n    for (const e of entries) {\n      for (const pattern of patterns) {\n        const absolute = pattern.isAbsolute()\n        const p = pattern.pattern()\n        const rest = pattern.rest()\n        if (p === GLOBSTAR) {\n          results.testGlobstar(e, pattern, rest, absolute)\n        } else if (p instanceof RegExp) {\n          results.testRegExp(e, p, rest, absolute)\n        } else {\n          results.testString(e, p, rest, absolute)\n        }\n      }\n    }\n    return results\n  }\n\n  testGlobstar(\n    e: Path,\n    pattern: Pattern,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (this.dot || !e.name.startsWith('.')) {\n      if (!pattern.hasMore()) {\n        this.matches.add(e, absolute, false)\n      }\n      if (e.canReaddir()) {\n        // if we're in follow mode or it's not a symlink, just keep\n        // testing the same pattern. If there's more after the globstar,\n        // then this symlink consumes the globstar. If not, then we can\n        // follow at most ONE symlink along the way, so we mark it, which\n        // also checks to ensure that it wasn't already marked.\n        if (this.follow || !e.isSymbolicLink()) {\n          this.subwalks.add(e, pattern)\n        } else if (e.isSymbolicLink()) {\n          if (rest && pattern.checkFollowGlobstar()) {\n            this.subwalks.add(e, rest)\n          } else if (pattern.markFollowGlobstar()) {\n            this.subwalks.add(e, pattern)\n          }\n        }\n      }\n    }\n    // if the NEXT thing matches this entry, then also add\n    // the rest.\n    if (rest) {\n      const rp = rest.pattern()\n      if (\n        typeof rp === 'string' &&\n        // dots and empty were handled already\n        rp !== '..' &&\n        rp !== '' &&\n        rp !== '.'\n      ) {\n        this.testString(e, rp, rest.rest(), absolute)\n      } else if (rp === '..') {\n        /* c8 ignore start */\n        const ep = e.parent || e\n        /* c8 ignore stop */\n        this.subwalks.add(ep, rest)\n      } else if (rp instanceof RegExp) {\n        this.testRegExp(e, rp, rest.rest(), absolute)\n      }\n    }\n  }\n\n  testRegExp(\n    e: Path,\n    p: MMRegExp,\n    rest: Pattern | null,\n    absolute: boolean\n  ) {\n    if (!p.test(e.name)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n\n  testString(e: Path, p: string, rest: Pattern | null, absolute: boolean) {\n    // should never happen?\n    if (!e.isNamed(p)) return\n    if (!rest) {\n      this.matches.add(e, absolute, false)\n    } else {\n      this.subwalks.add(e, rest)\n    }\n  }\n}\n","/**\n * Single-use utility classes to provide functionality to the {@link Glob}\n * methods.\n *\n * @module\n */\nimport Minipass from 'minipass'\nimport { Path } from 'path-scurry'\nimport { Ignore, IgnoreLike } from './ignore.js'\n\n// XXX can we somehow make it so that it NEVER processes a given path more than\n// once, enough that the match set tracking is no longer needed?  that'd speed\n// things up a lot.  Or maybe bring back nounique, and skip it in that case?\n\n// a single minimatch set entry with 1 or more parts\nimport { Pattern } from './pattern.js'\nimport { Processor } from './processor.js'\n\nexport interface GlobWalkerOpts {\n  absolute?: boolean\n  allowWindowsEscape?: boolean\n  cwd?: string | URL\n  dot?: boolean\n  dotRelative?: boolean\n  follow?: boolean\n  ignore?: string | string[] | IgnoreLike\n  mark?: boolean\n  matchBase?: boolean\n  // Note: maxDepth here means \"maximum actual Path.depth()\",\n  // not \"maximum depth beyond cwd\"\n  maxDepth?: number\n  nobrace?: boolean\n  nocase?: boolean\n  nodir?: boolean\n  noext?: boolean\n  noglobstar?: boolean\n  platform?: NodeJS.Platform\n  realpath?: boolean\n  root?: string\n  stat?: boolean\n  signal?: AbortSignal\n  windowsPathsNoEscape?: boolean\n  withFileTypes?: boolean\n}\n\nexport type GWOFileTypesTrue = GlobWalkerOpts & {\n  withFileTypes: true\n}\nexport type GWOFileTypesFalse = GlobWalkerOpts & {\n  withFileTypes: false\n}\nexport type GWOFileTypesUnset = GlobWalkerOpts & {\n  withFileTypes?: undefined\n}\n\nexport type Result<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Path\n  : O extends GWOFileTypesFalse\n  ? string\n  : O extends GWOFileTypesUnset\n  ? string\n  : Path | string\n\nexport type Matches<O extends GlobWalkerOpts> = O extends GWOFileTypesTrue\n  ? Set<Path>\n  : O extends GWOFileTypesFalse\n  ? Set<string>\n  : O extends GWOFileTypesUnset\n  ? Set<string>\n  : Set<Path | string>\n\nexport type MatchStream<O extends GlobWalkerOpts> =\n  O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\nconst makeIgnore = (\n  ignore: string | string[] | IgnoreLike,\n  opts: GlobWalkerOpts\n): IgnoreLike =>\n  typeof ignore === 'string'\n    ? new Ignore([ignore], opts)\n    : Array.isArray(ignore)\n    ? new Ignore(ignore, opts)\n    : ignore\n\n/**\n * basic walking utilities that all the glob walker types use\n */\nexport abstract class GlobUtil<O extends GlobWalkerOpts = GlobWalkerOpts> {\n  path: Path\n  patterns: Pattern[]\n  opts: O\n  seen: Set<Path> = new Set<Path>()\n  paused: boolean = false\n  aborted: boolean = false\n  #onResume: (() => any)[] = []\n  #ignore?: IgnoreLike\n  #sep: '\\\\' | '/'\n  signal?: AbortSignal\n  maxDepth: number\n\n  constructor(patterns: Pattern[], path: Path, opts: O)\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    this.patterns = patterns\n    this.path = path\n    this.opts = opts\n    this.#sep = opts.platform === 'win32' ? '\\\\' : '/'\n    if (opts.ignore) {\n      this.#ignore = makeIgnore(opts.ignore, opts)\n    }\n    // ignore, always set with maxDepth, but it's optional on the\n    // GlobOptions type\n    /* c8 ignore start */\n    this.maxDepth = opts.maxDepth || Infinity\n    /* c8 ignore stop */\n    if (opts.signal) {\n      this.signal = opts.signal\n      this.signal.addEventListener('abort', () => {\n        this.#onResume.length = 0\n      })\n    }\n  }\n\n  #ignored(path: Path): boolean {\n    return this.seen.has(path) || !!this.#ignore?.ignored?.(path)\n  }\n  #childrenIgnored(path: Path): boolean {\n    return !!this.#ignore?.childrenIgnored?.(path)\n  }\n\n  // backpressure mechanism\n  pause() {\n    this.paused = true\n  }\n  resume() {\n    /* c8 ignore start */\n    if (this.signal?.aborted) return\n    /* c8 ignore stop */\n    this.paused = false\n    let fn: (() => any) | undefined = undefined\n    while (!this.paused && (fn = this.#onResume.shift())) {\n      fn()\n    }\n  }\n  onResume(fn: () => any) {\n    if (this.signal?.aborted) return\n    /* c8 ignore start */\n    if (!this.paused) {\n      fn()\n    } else {\n      /* c8 ignore stop */\n      this.#onResume.push(fn)\n    }\n  }\n\n  // do the requisite realpath/stat checking, and return the path\n  // to add or undefined to filter it out.\n  async matchCheck(e: Path, ifDir: boolean): Promise<Path | undefined> {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || (await e.realpath())\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir)\n  }\n\n  matchCheckTest(e: Path | undefined, ifDir: boolean): Path | undefined {\n    return e &&\n      (this.maxDepth === Infinity || e.depth() <= this.maxDepth) &&\n      (!ifDir || e.canReaddir()) &&\n      (!this.opts.nodir || !e.isDirectory()) &&\n      !this.#ignored(e)\n      ? e\n      : undefined\n  }\n\n  matchCheckSync(e: Path, ifDir: boolean): Path | undefined {\n    if (ifDir && this.opts.nodir) return undefined\n    let rpc: Path | undefined\n    if (this.opts.realpath) {\n      rpc = e.realpathCached() || e.realpathSync()\n      if (!rpc) return undefined\n      e = rpc\n    }\n    const needStat = e.isUnknown() || this.opts.stat\n    return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir)\n  }\n\n  abstract matchEmit(p: Result<O>): void\n  abstract matchEmit(p: string | Path): void\n\n  matchFinish(e: Path, absolute: boolean) {\n    if (this.#ignored(e)) return\n    const abs =\n      this.opts.absolute === undefined ? absolute : this.opts.absolute\n    this.seen.add(e)\n    const mark = this.opts.mark && e.isDirectory() ? this.#sep : ''\n    // ok, we have what we need!\n    if (this.opts.withFileTypes) {\n      this.matchEmit(e)\n    } else if (abs) {\n      this.matchEmit(e.fullpath() + mark)\n    } else {\n      const rel = e.relative()\n      const pre =\n        this.opts.dotRelative && !rel.startsWith('..' + this.#sep)\n          ? '.' + this.#sep\n          : ''\n      this.matchEmit(!rel && mark ? '.' + mark : pre + rel + mark)\n    }\n  }\n\n  async match(e: Path, absolute: boolean, ifDir: boolean): Promise<void> {\n    const p = await this.matchCheck(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  matchSync(e: Path, absolute: boolean, ifDir: boolean): void {\n    const p = this.matchCheckSync(e, ifDir)\n    if (p) this.matchFinish(p, absolute)\n  }\n\n  walkCB(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() => this.walkCB2(target, patterns, processor, cb))\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const childrenCached = t.readdirCached()\n      if (t.calledReaddir())\n        this.walkCB3(t, childrenCached, processor, next)\n      else {\n        t.readdirCB(\n          (_, entries) => this.walkCB3(t, entries, processor, next),\n          true\n        )\n      }\n    }\n\n    next()\n  }\n\n  walkCB3(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      tasks++\n      this.match(m, absolute, ifDir).then(() => next())\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n\n  walkCBSync(target: Path, patterns: Pattern[], cb: () => any) {\n    /* c8 ignore start */\n    if (this.signal?.aborted) cb()\n    /* c8 ignore stop */\n    this.walkCB2Sync(target, patterns, new Processor(this.opts), cb)\n  }\n\n  walkCB2Sync(\n    target: Path,\n    patterns: Pattern[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    if (this.#childrenIgnored(target)) return cb()\n    if (this.signal?.aborted) cb()\n    if (this.paused) {\n      this.onResume(() =>\n        this.walkCB2Sync(target, patterns, processor, cb)\n      )\n      return\n    }\n    processor.processPatterns(target, patterns)\n\n    // done processing.  all of the above is sync, can be abstracted out.\n    // subwalks is a map of paths to the entry filters they need\n    // matches is a map of paths to [absolute, ifDir] tuples.\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n\n    for (const t of processor.subwalkTargets()) {\n      if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n        continue\n      }\n      tasks++\n      const children = t.readdirSync()\n      this.walkCB3Sync(t, children, processor, next)\n    }\n\n    next()\n  }\n\n  walkCB3Sync(\n    target: Path,\n    entries: Path[],\n    processor: Processor,\n    cb: () => any\n  ) {\n    processor = processor.filterEntries(target, entries)\n\n    let tasks = 1\n    const next = () => {\n      if (--tasks === 0) cb()\n    }\n\n    for (const [m, absolute, ifDir] of processor.matches.entries()) {\n      if (this.#ignored(m)) continue\n      this.matchSync(m, absolute, ifDir)\n    }\n    for (const [target, patterns] of processor.subwalks.entries()) {\n      tasks++\n      this.walkCB2Sync(target, patterns, processor.child(), next)\n    }\n\n    next()\n  }\n}\n\nexport class GlobWalker<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  matches: O extends GWOFileTypesTrue\n    ? Set<Path>\n    : O extends GWOFileTypesFalse\n    ? Set<string>\n    : O extends GWOFileTypesUnset\n    ? Set<string>\n    : Set<Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.matches = new Set() as Matches<O>\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.matches.add(e)\n  }\n\n  async walk(): Promise<Matches<O>> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      await this.path.lstat()\n    }\n    await new Promise((res, rej) => {\n      this.walkCB(this.path, this.patterns, () => {\n        if (this.signal?.aborted) {\n          rej(this.signal.reason)\n        } else {\n          res(this.matches)\n        }\n      })\n    })\n    return this.matches\n  }\n\n  walkSync(): Matches<O> {\n    if (this.signal?.aborted) throw this.signal.reason\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    // nothing for the callback to do, because this never pauses\n    this.walkCBSync(this.path, this.patterns, () => {\n      if (this.signal?.aborted) throw this.signal.reason\n    })\n    return this.matches\n  }\n}\n\nexport class GlobStream<\n  O extends GlobWalkerOpts = GlobWalkerOpts\n> extends GlobUtil<O> {\n  results: O extends GWOFileTypesTrue\n    ? Minipass<Path, Path>\n    : O extends GWOFileTypesFalse\n    ? Minipass<string, string>\n    : O extends GWOFileTypesUnset\n    ? Minipass<string, string>\n    : Minipass<Path | string, Path | string>\n\n  constructor(patterns: Pattern[], path: Path, opts: O) {\n    super(patterns, path, opts)\n    this.results = new Minipass({\n      signal: this.signal,\n      objectMode: true,\n    }) as MatchStream<O>\n    this.results.on('drain', () => this.resume())\n    this.results.on('resume', () => this.resume())\n  }\n\n  matchEmit(e: Result<O>): void\n  matchEmit(e: Path | string): void {\n    this.results.write(e)\n    if (!this.results.flowing) this.pause()\n  }\n\n  stream(): MatchStream<O> {\n    const target = this.path\n    if (target.isUnknown()) {\n      target.lstat().then(() => {\n        this.walkCB(target, this.patterns, () => this.results.end())\n      })\n    } else {\n      this.walkCB(target, this.patterns, () => this.results.end())\n    }\n    return this.results\n  }\n\n  streamSync(): MatchStream<O> {\n    if (this.path.isUnknown()) {\n      this.path.lstatSync()\n    }\n    this.walkCBSync(this.path, this.patterns, () => this.results.end())\n    return this.results\n  }\n}\n","import { Minimatch } from 'minimatch'\nimport { GlobOptions } from './glob.js'\n\n/**\n * Return true if the patterns provided contain any magic glob characters,\n * given the options provided.\n *\n * Brace expansion is not considered \"magic\" unless the `magicalBraces` option\n * is set, as brace expansion just turns one string into an array of strings.\n * So a pattern like `'x{a,b}y'` would return `false`, because `'xay'` and\n * `'xby'` both do not contain any magic glob characters, and it's treated the\n * same as if you had called it on `['xay', 'xby']`. When `magicalBraces:true`\n * is in the options, brace expansion _is_ treated as a pattern having magic.\n */\nexport const hasMagic = (\n  pattern: string | string[],\n  options: GlobOptions = {}\n): boolean => {\n  if (!Array.isArray(pattern)) {\n    pattern = [pattern]\n  }\n  for (const p of pattern) {\n    if (new Minimatch(p, options).hasMagic()) return true\n  }\n  return false\n}\n","import { escape, unescape } from 'minimatch'\nimport Minipass from 'minipass'\nimport { Path } from 'path-scurry'\nimport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nimport { Glob } from './glob.js'\nimport { hasMagic } from './has-magic.js'\n\n/**\n * Syncronous form of {@link globStream}. Will read all the matches as fast as\n * you consume them, even all in a single tick if you consume them immediately,\n * but will still respond to backpressure if they're not consumed immediately.\n */\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesUnset\n): Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStreamSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).streamSync()\n}\n\n/**\n * Return a stream that emits all the strings or `Path` objects and\n * then emits `end` when completed.\n */\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Minipass<Path, Path>\nexport function globStream(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions\n): Minipass<Path, Path> | Minipass<string, string>\nexport function globStream(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).stream()\n}\n\n/**\n * Synchronous form of {@link glob}\n */\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Path[]\nexport function globSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Path[] | string[]\nexport function globSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walkSync()\n}\n\n/**\n * Perform an asynchronous glob search for the pattern(s) specified. Returns\n * [Path](https://isaacs.github.io/path-scurry/classes/PathBase) objects if the\n * {@link withFileTypes} option is set to `true`. See {@link GlobOptions} for\n * full option descriptions.\n */\nexport async function glob(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Promise<string[]>\nexport async function glob(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Promise<Path[]>\nexport async function glob(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Promise<string[]>\nexport async function glob(\n  pattern: string | string[],\n  options: GlobOptions\n): Promise<Path[] | string[]>\nexport async function glob(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).walk()\n}\n\n/**\n * Return a sync iterator for walking glob pattern matches.\n */\nexport function globIterateSync(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): Generator<Path, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions\n): Generator<Path, void, void> | Generator<string, void, void>\nexport function globIterateSync(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterateSync()\n}\n\n/**\n * Return an async iterator for walking glob pattern matches.\n */\nexport function globIterate(\n  pattern: string | string[],\n  options?: GlobOptionsWithFileTypesUnset | undefined\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesTrue\n): AsyncGenerator<Path, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptionsWithFileTypesFalse\n): AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions\n): AsyncGenerator<Path, void, void> | AsyncGenerator<string, void, void>\nexport function globIterate(\n  pattern: string | string[],\n  options: GlobOptions = {}\n) {\n  return new Glob(pattern, options).iterate()\n}\n\n// aliases: glob.sync.stream() glob.stream.sync() glob.sync() etc\nexport const streamSync = globStreamSync\nexport const stream = Object.assign(globStream, { sync: globStreamSync })\nexport const iterateSync = globIterateSync\nexport const iterate = Object.assign(globIterate, {\n  sync: globIterateSync,\n})\nexport const sync = Object.assign(globSync, {\n  stream: globStreamSync,\n  iterate: globIterateSync,\n})\n\n/* c8 ignore start */\nexport { escape, unescape } from 'minimatch'\nexport { Glob } from './glob.js'\nexport type {\n  GlobOptions,\n  GlobOptionsWithFileTypesFalse,\n  GlobOptionsWithFileTypesTrue,\n  GlobOptionsWithFileTypesUnset,\n} from './glob.js'\nexport { hasMagic } from './has-magic.js'\nexport type { IgnoreLike } from './ignore.js'\nexport type { MatchStream } from './walker.js'\n/* c8 ignore stop */\n\nexport default Object.assign(glob, {\n  glob,\n  globSync,\n  sync,\n  globStream,\n  stream,\n  globStreamSync,\n  streamSync,\n  globIterate,\n  iterate,\n  globIterateSync,\n  iterateSync,\n  Glob,\n  hasMagic,\n  escape,\n  unescape,\n})\n","// promisify ourselves, because older nodes don't have fs.promises\n\nimport fs, { Dirent } from 'fs'\n\n// sync ones just take the sync version from node\nexport {\n  chmodSync,\n  mkdirSync,\n  renameSync,\n  rmdirSync,\n  rmSync,\n  statSync,\n  lstatSync,\n  unlinkSync,\n} from 'fs'\n\nimport { readdirSync as rdSync } from 'fs'\nexport const readdirSync = (path: fs.PathLike): Dirent[] =>\n  rdSync(path, { withFileTypes: true })\n\n// unrolled for better inlining, this seems to get better performance\n// than something like:\n// const makeCb = (res, rej) => (er, ...d) => er ? rej(er) : res(...d)\n// which would be a bit cleaner.\n\nconst chmod = (path: fs.PathLike, mode: fs.Mode): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.chmod(path, mode, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst mkdir = (\n  path: fs.PathLike,\n  options?:\n    | fs.Mode\n    | (fs.MakeDirectoryOptions & { recursive?: boolean | null })\n    | undefined\n    | null\n): Promise<string | undefined> =>\n  new Promise((res, rej) =>\n    fs.mkdir(path, options, (er, made) => (er ? rej(er) : res(made)))\n  )\n\nconst readdir = (path: fs.PathLike): Promise<Dirent[]> =>\n  new Promise<Dirent[]>((res, rej) =>\n    fs.readdir(path, { withFileTypes: true }, (er, data) =>\n      er ? rej(er) : res(data)\n    )\n  )\n\nconst rename = (oldPath: fs.PathLike, newPath: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rename(oldPath, newPath, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst rm = (path: fs.PathLike, options: fs.RmOptions): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rm(path, options, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst rmdir = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.rmdir(path, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nconst stat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.stat(path, (er, data) => (er ? rej(er) : res(data)))\n  )\n\nconst lstat = (path: fs.PathLike): Promise<fs.Stats> =>\n  new Promise((res, rej) =>\n    fs.lstat(path, (er, data) => (er ? rej(er) : res(data)))\n  )\n\nconst unlink = (path: fs.PathLike): Promise<void> =>\n  new Promise((res, rej) =>\n    fs.unlink(path, (er, ...d: any[]) => (er ? rej(er) : res(...d)))\n  )\n\nexport const promises = {\n  chmod,\n  mkdir,\n  readdir,\n  rename,\n  rm,\n  rmdir,\n  stat,\n  lstat,\n  unlink,\n}\n","// the simple recursive removal, where unlink and rmdir are atomic\n// Note that this approach does NOT work on Windows!\n// We stat first and only unlink if the Dirent isn't a directory,\n// because sunos will let root unlink a directory, and some\n// SUPER weird breakage happens as a result.\n\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nconst { lstat, rmdir, unlink } = promises\n\nimport { parse, resolve } from 'path'\n\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from '.'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nexport const rimrafPosix = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafPosixDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafPosixSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafPosixDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafPosixDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(unlink(path))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafPosixDir(resolve(path, ent.name), opt, ent))\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n\n  await ignoreENOENT(rmdir(path))\n  return true\n}\n\nconst rimrafPosixDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => unlinkSync(path))\n    return true\n  }\n  let removedAll: boolean = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafPosixDirSync(p, opt, ent) && removedAll\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n\n  if (!removedAll) {\n    return false\n  }\n\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n\n  ignoreENOENTSync(() => rmdirSync(path))\n  return true\n}\n","// returns an array of entries if readdir() works,\n// or the error that readdir() raised if not.\nimport { promises, readdirSync } from './fs.js'\nconst { readdir } = promises\nexport const readdirOrError = (path: string) =>\n  readdir(path).catch(er => er as NodeJS.ErrnoException)\nexport const readdirOrErrorSync = (path: string) => {\n  try {\n    return readdirSync(path)\n  } catch (er) {\n    return er as NodeJS.ErrnoException\n  }\n}\n","export const ignoreENOENT = async (p: Promise<any>) =>\n  p.catch(er => {\n    if (er.code !== 'ENOENT') {\n      throw er\n    }\n  })\n\nexport const ignoreENOENTSync = (fn: () => any) => {\n  try {\n    return fn()\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n","// This is the same as rimrafPosix, with the following changes:\n//\n// 1. EBUSY, ENFILE, EMFILE trigger retries and/or exponential backoff\n// 2. All non-directories are removed first and then all directories are\n//    removed in a second sweep.\n// 3. If we hit ENOTEMPTY in the second sweep, fall back to move-remove on\n//    the that folder.\n//\n// Note: \"move then remove\" is 2-10 times slower, and just as unreliable.\n\nimport { Dirent, Stats } from 'fs'\nimport { parse, resolve } from 'path'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from '.'\nimport { fixEPERM, fixEPERMSync } from './fix-eperm.js'\nimport { lstatSync, promises, rmdirSync, unlinkSync } from './fs.js'\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\nimport { retryBusy, retryBusySync } from './retry-busy.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nconst { unlink, rmdir, lstat } = promises\n\nconst rimrafWindowsFile = retryBusy(fixEPERM(unlink))\nconst rimrafWindowsFileSync = retryBusySync(fixEPERMSync(unlinkSync))\nconst rimrafWindowsDirRetry = retryBusy(fixEPERM(rmdir))\nconst rimrafWindowsDirRetrySync = retryBusySync(fixEPERMSync(rmdirSync))\n\nconst rimrafWindowsDirMoveRemoveFallback = async (\n  path: string,\n  opt: RimrafAsyncOptions\n): Promise<boolean> => {\n  /* c8 ignore start */\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  /* c8 ignore stop */\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return await rimrafWindowsDirRetry(path, options)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOTEMPTY') {\n      return await rimrafMoveRemove(path, options)\n    }\n    throw er\n  }\n}\n\nconst rimrafWindowsDirMoveRemoveFallbackSync = (\n  path: string,\n  opt: RimrafSyncOptions\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  // already filtered, remove from options so we don't call unnecessarily\n  const { filter, ...options } = opt\n  try {\n    return rimrafWindowsDirRetrySync(path, options)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOTEMPTY') {\n      return rimrafMoveRemoveSync(path, options)\n    }\n    throw er\n  }\n}\n\nconst START = Symbol('start')\nconst CHILD = Symbol('child')\nconst FINISH = Symbol('finish')\n\nexport const rimrafWindows = async (path: string, opt: RimrafAsyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafWindowsDir(path, opt, await lstat(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nexport const rimrafWindowsSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafWindowsDirSync(path, opt, lstatSync(path), START)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafWindowsDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats,\n  state = START\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    // is a file\n    await ignoreENOENT(rimrafWindowsFile(path, opt))\n    return true\n  }\n\n  const s = state === START ? CHILD : state\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafWindowsDir(resolve(path, ent.name), opt, ent, s))\n    )\n  ).reduce((a, b) => a && b, true)\n\n  if (state === START) {\n    return rimrafWindowsDir(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(rimrafWindowsDirMoveRemoveFallback(path, opt))\n  }\n  return true\n}\n\nconst rimrafWindowsDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats,\n  state = START\n): boolean => {\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    // is a file\n    ignoreENOENTSync(() => rimrafWindowsFileSync(path, opt))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const s = state === START ? CHILD : state\n    const p = resolve(path, ent.name)\n    removedAll = rimrafWindowsDirSync(p, opt, ent, s) && removedAll\n  }\n\n  if (state === START) {\n    return rimrafWindowsDirSync(path, opt, ent, FINISH)\n  } else if (state === FINISH) {\n    if (opt.preserveRoot === false && path === parse(path).root) {\n      return false\n    }\n    if (!removedAll) {\n      return false\n    }\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => {\n      rimrafWindowsDirMoveRemoveFallbackSync(path, opt)\n    })\n  }\n  return true\n}\n","import { chmodSync, promises } from './fs.js'\nconst { chmod } = promises\n\nexport const fixEPERM =\n  (fn: (path: string) => Promise<any>) => async (path: string) => {\n    try {\n      return await fn(path)\n    } catch (er) {\n      const fer = er as NodeJS.ErrnoException\n      if (fer?.code === 'ENOENT') {\n        return\n      }\n      if (fer?.code === 'EPERM') {\n        try {\n          await chmod(path, 0o666)\n        } catch (er2) {\n          const fer2 = er2 as NodeJS.ErrnoException\n          if (fer2?.code === 'ENOENT') {\n            return\n          }\n          throw er\n        }\n        return await fn(path)\n      }\n      throw er\n    }\n  }\n\nexport const fixEPERMSync = (fn: (path: string) => any) => (path: string) => {\n  try {\n    return fn(path)\n  } catch (er) {\n    const fer = er as NodeJS.ErrnoException\n    if (fer?.code === 'ENOENT') {\n      return\n    }\n    if (fer?.code === 'EPERM') {\n      try {\n        chmodSync(path, 0o666)\n      } catch (er2) {\n        const fer2 = er2 as NodeJS.ErrnoException\n        if (fer2?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n      return fn(path)\n    }\n    throw er\n  }\n}\n","// note: max backoff is the maximum that any *single* backoff will do\n\nimport { RimrafAsyncOptions, RimrafOptions } from '.'\n\nexport const MAXBACKOFF = 200\nexport const RATE = 1.2\nexport const MAXRETRIES = 10\nexport const codes = new Set(['EMFILE', 'ENFILE', 'EBUSY'])\n\nexport const retryBusy = (fn: (path: string) => Promise<any>) => {\n  const method = async (\n    path: string,\n    opt: RimrafAsyncOptions,\n    backoff = 1,\n    total = 0\n  ) => {\n    const mbo = opt.maxBackoff || MAXBACKOFF\n    const rate = opt.backoff || RATE\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return await fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (fer?.path === path && fer?.code && codes.has(fer.code)) {\n          backoff = Math.ceil(backoff * rate)\n          total = backoff + total\n          if (total < mbo) {\n            return new Promise((res, rej) => {\n              setTimeout(() => {\n                method(path, opt, backoff, total).then(res, rej)\n              }, backoff)\n            })\n          }\n          if (retries < max) {\n            retries++\n            continue\n          }\n        }\n        throw er\n      }\n    }\n  }\n\n  return method\n}\n\n// just retries, no async so no backoff\nexport const retryBusySync = (fn: (path: string) => any) => {\n  const method = (path: string, opt: RimrafOptions) => {\n    const max = opt.maxRetries || MAXRETRIES\n    let retries = 0\n    while (true) {\n      try {\n        return fn(path)\n      } catch (er) {\n        const fer = er as NodeJS.ErrnoException\n        if (\n          fer?.path === path &&\n          fer?.code &&\n          codes.has(fer.code) &&\n          retries < max\n        ) {\n          retries++\n          continue\n        }\n        throw er\n      }\n    }\n  }\n  return method\n}\n","// https://youtu.be/uhRWMGBjlO8?t=537\n//\n// 1. readdir\n// 2. for each entry\n//   a. if a non-empty directory, recurse\n//   b. if an empty directory, move to random hidden file name in $TEMP\n//   c. unlink/rmdir $TEMP\n//\n// This works around the fact that unlink/rmdir is non-atomic and takes\n// a non-deterministic amount of time to complete.\n//\n// However, it is HELLA SLOW, like 2-10x slower than a naive recursive rm.\n\nimport { basename, parse, resolve } from 'path'\nimport { defaultTmp, defaultTmpSync } from './default-tmp.js'\n\nimport { ignoreENOENT, ignoreENOENTSync } from './ignore-enoent.js'\n\nimport {\n  chmodSync,\n  lstatSync,\n  promises as fsPromises,\n  renameSync,\n  rmdirSync,\n  unlinkSync,\n} from './fs.js'\nconst { lstat, rename, unlink, rmdir, chmod } = fsPromises\n\nimport { Dirent, Stats } from 'fs'\nimport { RimrafAsyncOptions, RimrafSyncOptions } from '.'\nimport { readdirOrError, readdirOrErrorSync } from './readdir-or-error.js'\n\n// crypto.randomBytes is much slower, and Math.random() is enough here\nconst uniqueFilename = (path: string) => `.${basename(path)}.${Math.random()}`\n\nconst unlinkFixEPERM = async (path: string) =>\n  unlink(path).catch((er: Error & { code?: string }) => {\n    if (er.code === 'EPERM') {\n      return chmod(path, 0o666).then(\n        () => unlink(path),\n        er2 => {\n          if (er2.code === 'ENOENT') {\n            return\n          }\n          throw er\n        }\n      )\n    } else if (er.code === 'ENOENT') {\n      return\n    }\n    throw er\n  })\n\nconst unlinkFixEPERMSync = (path: string) => {\n  try {\n    unlinkSync(path)\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'EPERM') {\n      try {\n        return chmodSync(path, 0o666)\n      } catch (er2) {\n        if ((er2 as NodeJS.ErrnoException)?.code === 'ENOENT') {\n          return\n        }\n        throw er\n      }\n    } else if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') {\n      return\n    }\n    throw er\n  }\n}\n\nexport const rimrafMoveRemove = async (\n  path: string,\n  opt: RimrafAsyncOptions\n) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return await rimrafMoveRemoveDir(path, opt, await lstat(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDir = async (\n  path: string,\n  opt: RimrafAsyncOptions,\n  ent: Dirent | Stats\n): Promise<boolean> => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDir(\n      path,\n      { ...opt, tmp: await defaultTmp(path) },\n      ent\n    )\n  }\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? await readdirOrError(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !(await opt.filter(path, ent))) {\n      return false\n    }\n    await ignoreENOENT(tmpUnlink(path, opt.tmp, unlinkFixEPERM))\n    return true\n  }\n\n  const removedAll = (\n    await Promise.all(\n      entries.map(ent => rimrafMoveRemoveDir(resolve(path, ent.name), opt, ent))\n    )\n  ).reduce((a, b) => a && b, true)\n  if (!removedAll) {\n    return false\n  }\n\n  // we don't ever ACTUALLY try to unlink /, because that can never work\n  // but when preserveRoot is false, we could be operating on it.\n  // No need to check if preserveRoot is not false.\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !(await opt.filter(path, ent))) {\n    return false\n  }\n  await ignoreENOENT(tmpUnlink(path, opt.tmp, rmdir))\n  return true\n}\n\nconst tmpUnlink = async (\n  path: string,\n  tmp: string,\n  rm: (p: string) => Promise<any>\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  await rename(path, tmpFile)\n  return await rm(tmpFile)\n}\n\nexport const rimrafMoveRemoveSync = (path: string, opt: RimrafSyncOptions) => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  try {\n    return rimrafMoveRemoveDirSync(path, opt, lstatSync(path))\n  } catch (er) {\n    if ((er as NodeJS.ErrnoException)?.code === 'ENOENT') return true\n    throw er\n  }\n}\n\nconst rimrafMoveRemoveDirSync = (\n  path: string,\n  opt: RimrafSyncOptions,\n  ent: Dirent | Stats\n): boolean => {\n  if (opt?.signal?.aborted) {\n    throw opt.signal.reason\n  }\n  if (!opt.tmp) {\n    return rimrafMoveRemoveDirSync(\n      path,\n      { ...opt, tmp: defaultTmpSync(path) },\n      ent\n    )\n  }\n  const tmp: string = opt.tmp\n\n  if (path === opt.tmp && parse(path).root !== path) {\n    throw new Error('cannot delete temp directory used for deletion')\n  }\n\n  const entries = ent.isDirectory() ? readdirOrErrorSync(path) : null\n  if (!Array.isArray(entries)) {\n    // this can only happen if lstat/readdir lied, or if the dir was\n    // swapped out with a file at just the right moment.\n    /* c8 ignore start */\n    if (entries) {\n      if (entries.code === 'ENOENT') {\n        return true\n      }\n      if (entries.code !== 'ENOTDIR') {\n        throw entries\n      }\n    }\n    /* c8 ignore stop */\n    if (opt.filter && !opt.filter(path, ent)) {\n      return false\n    }\n    ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, unlinkFixEPERMSync))\n    return true\n  }\n\n  let removedAll = true\n  for (const ent of entries) {\n    const p = resolve(path, ent.name)\n    removedAll = rimrafMoveRemoveDirSync(p, opt, ent) && removedAll\n  }\n  if (!removedAll) {\n    return false\n  }\n  if (opt.preserveRoot === false && path === parse(path).root) {\n    return false\n  }\n  if (opt.filter && !opt.filter(path, ent)) {\n    return false\n  }\n  ignoreENOENTSync(() => tmpUnlinkSync(path, tmp, rmdirSync))\n  return true\n}\n\nconst tmpUnlinkSync = (\n  path: string,\n  tmp: string,\n  rmSync: (p: string) => void\n) => {\n  const tmpFile = resolve(tmp, uniqueFilename(path))\n  renameSync(path, tmpFile)\n  return rmSync(tmpFile)\n}\n","// The default temporary folder location for use in the windows algorithm.\n// It's TEMPting to use dirname(path), since that's guaranteed to be on the\n// same device.  However, this means that:\n// rimraf(path).then(() => rimraf(dirname(path)))\n// will often fail with EBUSY, because the parent dir contains\n// marked-for-deletion directory entries (which do not show up in readdir).\n// The approach here is to use os.tmpdir() if it's on the same drive letter,\n// or resolve(path, '\\\\temp') if it exists, or the root of the drive if not.\n// On Posix (not that you'd be likely to use the windows algorithm there),\n// it uses os.tmpdir() always.\nimport { tmpdir } from 'os'\nimport { parse, resolve } from 'path'\nimport { promises, statSync } from './fs.js'\nimport platform from './platform.js'\nconst { stat } = promises\n\nconst isDirSync = (path: string) => {\n  try {\n    return statSync(path).isDirectory()\n  } catch (er) {\n    return false\n  }\n}\n\nconst isDir = (path: string) =>\n  stat(path).then(\n    st => st.isDirectory(),\n    () => false\n  )\n\nconst win32DefaultTmp = async (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (await isDir(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst win32DefaultTmpSync = (path: string) => {\n  const { root } = parse(path)\n  const tmp = tmpdir()\n  const { root: tmpRoot } = parse(tmp)\n  if (root.toLowerCase() === tmpRoot.toLowerCase()) {\n    return tmp\n  }\n\n  const driveTmp = resolve(root, '/temp')\n  if (isDirSync(driveTmp)) {\n    return driveTmp\n  }\n\n  return root\n}\n\nconst posixDefaultTmp = async () => tmpdir()\nconst posixDefaultTmpSync = () => tmpdir()\n\nexport const defaultTmp =\n  platform === 'win32' ? win32DefaultTmp : posixDefaultTmp\nexport const defaultTmpSync =\n  platform === 'win32' ? win32DefaultTmpSync : posixDefaultTmpSync\n","import platform from './platform.js'\n\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\n\nexport const rimrafManual = platform === 'win32' ? rimrafWindows : rimrafPosix\nexport const rimrafManualSync =\n  platform === 'win32' ? rimrafWindowsSync : rimrafPosixSync\n","import { RimrafAsyncOptions, RimrafSyncOptions } from '.'\nimport { promises, rmSync } from './fs.js'\nconst { rm } = promises\n\nexport const rimrafNative = async (\n  path: string,\n  opt: RimrafAsyncOptions\n): Promise<boolean> => {\n  await rm(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n\nexport const rimrafNativeSync = (\n  path: string,\n  opt: RimrafSyncOptions\n): boolean => {\n  rmSync(path, {\n    ...opt,\n    force: true,\n    recursive: true,\n  })\n  return true\n}\n","const version = process.env.__TESTING_RIMRAF_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 14 || (+versArr[0] === 14 && +versArr[1] >= 14)\nimport { RimrafAsyncOptions, RimrafOptions } from './index.js'\n// we do NOT use native by default on Windows, because Node's native\n// rm implementation is less advanced.  Change this code if that changes.\nimport platform from './platform.js'\nexport const useNative: (opt?: RimrafAsyncOptions) => boolean =\n  !hasNative || platform === 'win32'\n    ? () => false\n    : opt => !opt?.signal && !opt?.filter\nexport const useNativeSync: (opt?: RimrafOptions) => boolean =\n  !hasNative || platform === 'win32'\n    ? () => false\n    : opt => !opt?.signal && !opt?.filter\n","import { optArg, optArgSync } from './opt-arg.js'\nimport pathArg from './path-arg.js'\n\nimport { glob, GlobOptions, globSync } from 'glob'\n\nexport interface RimrafAsyncOptions {\n  preserveRoot?: boolean\n  tmp?: string\n  maxRetries?: number\n  retryDelay?: number\n  backoff?: number\n  maxBackoff?: number\n  signal?: AbortSignal\n  glob?: boolean | GlobOptions\n  filter?:\n    | ((path: string, ent: Dirent | Stats) => boolean)\n    | ((path: string, ent: Dirent | Stats) => Promise<boolean>)\n}\n\nexport interface RimrafSyncOptions extends RimrafAsyncOptions {\n  filter?: (path: string, ent: Dirent | Stats) => boolean\n}\n\nexport type RimrafOptions = RimrafSyncOptions | RimrafAsyncOptions\n\nconst typeOrUndef = (val: any, t: string) =>\n  typeof val === 'undefined' || typeof val === t\n\nexport const isRimrafOptions = (o: any): o is RimrafOptions =>\n  !!o &&\n  typeof o === 'object' &&\n  typeOrUndef(o.preserveRoot, 'boolean') &&\n  typeOrUndef(o.tmp, 'string') &&\n  typeOrUndef(o.maxRetries, 'number') &&\n  typeOrUndef(o.retryDelay, 'number') &&\n  typeOrUndef(o.backoff, 'number') &&\n  typeOrUndef(o.maxBackoff, 'number') &&\n  (typeOrUndef(o.glob, 'boolean') || (o.glob && typeof o.glob === 'object')) &&\n  typeOrUndef(o.filter, 'function')\n\nexport const assertRimrafOptions: (o: any) => void = (\n  o: any\n): asserts o is RimrafOptions => {\n  if (!isRimrafOptions(o)) {\n    throw new Error('invalid rimraf options')\n  }\n}\n\nimport { Dirent, Stats } from 'fs'\nimport { rimrafManual, rimrafManualSync } from './rimraf-manual.js'\nimport { rimrafMoveRemove, rimrafMoveRemoveSync } from './rimraf-move-remove.js'\nimport { rimrafNative, rimrafNativeSync } from './rimraf-native.js'\nimport { rimrafPosix, rimrafPosixSync } from './rimraf-posix.js'\nimport { rimrafWindows, rimrafWindowsSync } from './rimraf-windows.js'\nimport { useNative, useNativeSync } from './use-native.js'\n\nconst wrap =\n  (fn: (p: string, o: RimrafAsyncOptions) => Promise<boolean>) =>\n  async (\n    path: string | string[],\n    opt?: RimrafAsyncOptions\n  ): Promise<boolean> => {\n    const options = optArg(opt)\n    if (options.glob) {\n      path = await glob(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!(\n        await Promise.all(path.map(p => fn(pathArg(p, options), options)))\n      ).reduce((a, b) => a && b, true)\n    } else {\n      return !!(await fn(pathArg(path, options), options))\n    }\n  }\n\nconst wrapSync =\n  (fn: (p: string, o: RimrafSyncOptions) => boolean) =>\n  (path: string | string[], opt?: RimrafSyncOptions): boolean => {\n    const options = optArgSync(opt)\n    if (options.glob) {\n      path = globSync(path, options.glob)\n    }\n    if (Array.isArray(path)) {\n      return !!path\n        .map(p => fn(pathArg(p, options), options))\n        .reduce((a, b) => a && b, true)\n    } else {\n      return !!fn(pathArg(path, options), options)\n    }\n  }\n\nexport const nativeSync = wrapSync(rimrafNativeSync)\nexport const native = Object.assign(wrap(rimrafNative), { sync: nativeSync })\n\nexport const manualSync = wrapSync(rimrafManualSync)\nexport const manual = Object.assign(wrap(rimrafManual), { sync: manualSync })\n\nexport const windowsSync = wrapSync(rimrafWindowsSync)\nexport const windows = Object.assign(wrap(rimrafWindows), { sync: windowsSync })\n\nexport const posixSync = wrapSync(rimrafPosixSync)\nexport const posix = Object.assign(wrap(rimrafPosix), { sync: posixSync })\n\nexport const moveRemoveSync = wrapSync(rimrafMoveRemoveSync)\nexport const moveRemove = Object.assign(wrap(rimrafMoveRemove), {\n  sync: moveRemoveSync,\n})\n\nexport const rimrafSync = wrapSync((path, opt) =>\n  useNativeSync(opt) ? rimrafNativeSync(path, opt) : rimrafManualSync(path, opt)\n)\nexport const sync = rimrafSync\n\nexport const rimraf = Object.assign(\n  wrap((path, opt) =>\n    useNative(opt) ? rimrafNative(path, opt) : rimrafManual(path, opt)\n  ),\n  {\n    // this weirdness because it's easier than explicitly declaring\n    rimraf: manual,\n    sync: rimrafSync,\n    rimrafSync: rimrafSync,\n    manual,\n    manualSync,\n    native,\n    nativeSync,\n    posix,\n    posixSync,\n    windows,\n    windowsSync,\n    moveRemove,\n    moveRemoveSync,\n  }\n)\nrimraf.rimraf = rimraf\n\nexport default rimraf\n","#!/usr/bin/env node\nimport { add } from \"@/src/commands/add\"\nimport { diff } from \"@/src/commands/diff\"\nimport { init } from \"@/src/commands/init\"\nimport { registry } from \"@/src/commands/registry\"\nimport { Command } from \"commander\"\n\nimport { getPackageInfo } from \"./utils/get-package-info\"\n\nprocess.on(\"SIGINT\", () => process.exit(0))\nprocess.on(\"SIGTERM\", () => process.exit(0))\n\nasync function main() {\n  const packageInfo = await getPackageInfo()\n\n  const program = new Command()\n    .name(\"shadxn\")\n    .description(\"add components and dependencies to your project\")\n    .version(\n      packageInfo.version || \"1.0.0\",\n      \"-v, --version\",\n      \"display the version number\"\n    )\n\n  program.addCommand(init).addCommand(add).addCommand(diff).addCommand(registry)\n\n  program.parse()\n}\n\nmain()\n","import path from \"path\"\nimport fs from \"fs-extra\"\nimport { type PackageJson } from \"type-fest\"\n\nexport function getPackageInfo() {\n  const packageJsonPath = path.join(\"package.json\")\n\n  return fs.readJSONSync(packageJsonPath) as PackageJson\n}\n"],"mappings":"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","names":["require_balanced_match","__commonJSMin","exports","module","balanced","a","b","str","maybeMatch","r","range","reg","m","begs","beg","left","right","result","ai","bi","i","require_brace_expansion","__commonJSMin","exports","module","balanced","expandTop","escSlash","escOpen","escClose","escComma","escPeriod","numeric","str","escapeBraces","unescapeBraces","parseCommaParts","parts","m","pre","body","post","p","postParts","expand","embrace","isPadded","el","lte","y","gte","isTop","expansions","k","expansion","isNumericSequence","isAlphaSequence","isSequence","isOptions","n","N","x","width","incr","test","reverse","pad","i","c","need","z","j","existsSync","fs","path","path","createMatchPath","resolveImport","importPath","config","cosmiconfig","loadConfig","z","DEFAULT_COMPONENTS","DEFAULT_UTILS","DEFAULT_TAILWIND_CSS","DEFAULT_TAILWIND_CONFIG","explorer","cosmiconfig","registrySchema","z","rawConfigSchema","configSchema","getConfig","cwd","config","getRawConfig","resolveConfigPaths","tsConfig","loadConfig","path","resolveImport","configResult","detect","getPackageManager","targetDir","packageManager","chalk","logger","args","handleError","error","logger","path","z","types","typeSchema","registryItemSchema","registrySchema","registryIndexSchema","registryItemWithContentSchema","registryWithContentSchema","stylesSchema","registryBaseColorSchema","HttpsProxyAgent","fetch","baseUrl","agent","setBaseUrl","newBaseUrl","getRegistryIndex","result","fetchRegistry","registryIndexSchema","getRegistryStyles","stylesSchema","getRegistryBaseColors","getRegistryBaseColor","baseColor","registryBaseColorSchema","resolveTree","index","names","tree","name","entry","dependencies","component","self","c","fetchTree","style","url","baseUrl","paths","item","registryWithContentSchema","getItemTargetPath","config","override","parent","type","path","fetch","agent","fs","tmpdir","path","SyntaxKind","transformCssVars","sourceFile","config","baseColor","node","value","valueWithColorMapping","applyColorMapping","splitClassName","className","parts","rest","alpha","split","name","variant","PREFIXES","input","mapping","classNames","lightMode","darkMode","modifier","prefix","needle","transformImport","sourceFile","config","importDeclarations","importDeclaration","moduleSpecifier","i","transformFromAstSync","parse","transformTypescript","recast","PARSE_OPTIONS","transformJsx","sourceFile","config","output","ast","code","result","SyntaxKind","transformRsc","sourceFile","config","first","Project","ScriptKind","SyntaxKind","transformTwPrefixes","sourceFile","config","SyntaxKind","node","defaultClassNames","applyPrefix","classNames","value","callExpression","arg","input","prefix","prefixed","className","variant","modifier","splitClassName","applyPrefixesCss","css","lines","line","originalTWCls","prefixedTwCls","transformers","transformImport","transformRsc","transformCssVars","transformTwPrefixes","project","Project","createTempSourceFile","filename","dir","fs","path","tmpdir","transform","opts","tempFile","sourceFile","ScriptKind","transformer","transformJsx","chalk","Command","execa","ora","prompts","z","addOptionsSchema","add","components","opts","registryName","type","response","value","logger","options","cwd","path","existsSync","config","getConfig","registry","setBaseUrl","registryIndex","getRegistryIndex","selectedComponents","entry","registryDependencies","addRegistryDependencies","dependencies","registryDependencyName","dependency","dependencyName","tree","resolveTree","fetchTree","component","payload","baseColor","getRegistryBaseColor","proceed","spinner","item","targetDir","getItemTargetPath","fs","file","overwrite","filePath","directory","content","transform","packageManager","getPackageManager","error","handleError","existsSync","fs","path","chalk","Command","diffLines","z","updateOptionsSchema","diff","name","opts","options","cwd","path","existsSync","logger","config","getConfig","registryIndex","getRegistryIndex","targetDir","projectComponents","item","file","filePath","componentsWithUpdates","component","changes","diffComponent","change","printDiff","error","handleError","payload","fetchTree","baseColor","getRegistryBaseColor","getItemTargetPath","fileContent","fs","registryContent","transform","patch","part","existsSync","fs","path","path","fg","fs","pathExists","loadConfig","PROJECT_SHARED_IGNORE","getProjectConfig","cwd","existingConfig","getConfig","projectType","getProjectType","tailwindCssFile","getTailwindCssFile","tsConfigAliasPrefix","getTsConfigAliasPrefix","isTsx","isTypeScriptProject","config","resolveConfigPaths","fg","PROJECT_SHARED_IGNORE","file","isUsingSrcDir","fs","path","files","tsConfig","loadConfig","alias","paths","pathExists","preFlight","UTILS","UTILS_JS","TAILWIND_CONFIG","TAILWIND_CONFIG_WITH_VARIABLES","TAILWIND_CONFIG_TS","TAILWIND_CONFIG_TS_WITH_VARIABLES","chalk","Command","execa","template","ora","prompts","z","PROJECT_DEPENDENCIES","initOptionsSchema","z","init","Command","opts","options","cwd","path","existsSync","logger","preFlight","projectConfig","getProjectConfig","config","promptForMinimalConfig","runInit","existingConfig","getConfig","promptForConfig","chalk","error","handleError","defaultConfig","skip","highlight","text","styles","getRegistryStyles","baseColors","getRegistryBaseColors","prompts","style","color","DEFAULT_TAILWIND_CSS","DEFAULT_TAILWIND_CONFIG","DEFAULT_COMPONENTS","DEFAULT_UTILS","rawConfigSchema","proceed","spinner","ora","targetPath","fs","resolveConfigPaths","defaults","baseColor","cssVariables","key","resolvedPath","dirname","extension","tailwindConfigExtension","tailwindConfigTemplate","TAILWIND_CONFIG_TS_WITH_VARIABLES","TAILWIND_CONFIG_TS","TAILWIND_CONFIG_WITH_VARIABLES","TAILWIND_CONFIG","template","getRegistryBaseColor","applyPrefixesCss","UTILS","UTILS_JS","dependenciesSpinner","packageManager","getPackageManager","deps","execa","Command","fsx","fs","path","template","optArgT","opt","assertRimrafOptions","glob","options","globOpt","optArg","optArgSync","parse","resolve","inspect","platform_default","pathArg","path","opt","type","ctor","msg","inspect","resolve","root","parse","platform_default","badWinChars","path_arg_default","import_brace_expansion","assertValidPattern","pattern","posixClasses","braceEscape","s","regexpEscape","rangesToString","ranges","parseClass","glob","position","pos","negs","i","sawStart","uflag","escaping","negate","endPos","rangeStart","WHILE","c","cls","unip","u","neg","r","sranges","snegs","unescape","s","windowsPathsNoEscape","types","isExtglobType","c","startNoTraversal","startNoDot","addPatternStart","justDots","reSpecials","regExpEscape","s","qmark","star","starNoEmpty","_root","_hasMagic","_uflag","_parts","_parent","_parentIndex","_negs","_filledNegs","_options","_toString","_emptyExt","_fillNegs","fillNegs_fn","_parseAST","parseAST_fn","_parseGlob","parseGlob_fn","_AST","type","parent","options","__privateAdd","__publicField","__privateSet","__privateGet","p","parts","ret","i","pp","pl","part","pattern","_a","ast","__privateMethod","glob","re","body","hasMagic","uflag","flags","noEmpty","src","_","start","aps","needNoTrav","needNoDot","end","unescape","final","close","AST","n","str","pos","opt","_b","escaping","inBrace","braceStart","braceNeg","acc","ext","needUflag","consumed","magic","parseClass","escape","s","windowsPathsNoEscape","minimatch","p","pattern","options","assertValidPattern","Minimatch","starDotExtRE","starDotExtTest","ext","f","starDotExtTestDot","starDotExtTestNocase","starDotExtTestNocaseDot","starDotStarRE","starDotStarTest","starDotStarTestDot","dotStarRE","dotStarTest","starRE","starTest","starTestDot","qmarksRE","qmarksTestNocase","$0","noext","qmarksTestNoExt","qmarksTestNocaseDot","qmarksTestNoExtDot","qmarksTestDot","qmarksTest","len","defaultPlatform","path","sep","minimatch","GLOBSTAR","qmark","star","twoStarDot","twoStarNoDot","filter","pattern","options","p","a","b","defaults","def","orig","type","parent","list","braceExpand","assertValidPattern","expand","makeRe","Minimatch","match","mm","globMagic","regExpEscape","s","part","_","args","rawGlobParts","set","__","isUNC","isDrive","ss","i","globParts","j","optimizationLevel","parts","gs","prev","didSomething","dd","gss","next","p2","other","splin","matched","emptyGSMatch","ai","bi","result","which","negate","negateOffset","file","partial","fileUNC","patternUNC","fd","pd","fi","pi","fl","pl","fr","pr","swallowee","hit","m","fastTest","re","AST","twoStar","flags","pp","open","close","ff","filename","escape","unescape","perf","warned","PROCESS","emitWarning","msg","type","code","fn","AC","AS","_","warnACPolyfill","reason","printACPolyfillWarning","shouldWarn","TYPE","isPosInt","n","getUintArray","max","ZeroArray","size","_constructing","_Stack","HeapCls","__privateSet","__privateGet","Stack","__privateAdd","LRUCache","#max","#maxSize","#dispose","#disposeAfter","#fetchMethod","#size","#calculatedSize","#keyMap","#keyList","#valList","#next","#prev","#head","#tail","#free","#disposed","#sizes","#starts","#ttls","#hasDispose","#hasFetchMethod","#hasDisposeAfter","c","p","#isBackgroundFetch","k","index","options","context","#backgroundFetch","#moveToTail","#indexes","#rindexes","#isStale","ttl","ttlResolution","ttlAutopurge","updateAgeOnGet","updateAgeOnHas","allowStale","dispose","disposeAfter","noDisposeOnSet","noUpdateTTL","maxSize","maxEntrySize","sizeCalculation","fetchMethod","noDeleteOnFetchRejection","noDeleteOnStaleGet","allowStaleOnFetchRejection","allowStaleOnFetchAbort","ignoreFetchAbort","UintArray","#initializeSizeTracking","#initializeTTLTracking","key","ttls","starts","#setItemTTL","start","t","#updateItemAge","#statusTTL","status","cachedNow","getNow","age","s","sizes","#removeItemSize","#requireSize","v","#addItemSize","#evict","_i","_s","_st","_k","_v","i","#isValidIndex","getOptions","value","thisp","deleted","entry","remain","arr","setOptions","oldVal","oldValue","dt","task","val","free","head","hasOptions","peekOptions","ac","signal","fetchOpts","cb","updateCache","aborted","ignoreAbort","fetchFail","bf","eb","er","allowStaleAborted","noDelete","pcall","res","rej","fmp","b","fetchOptions","forceRefresh","stale","isStale","staleVal","fetching","#connect","pi","ni","posix","win32","fileURLToPath","actualFS","lstatSync","readdirCB","readdirSync","readlinkSync","rps","lstat","readdir","readlink","realpath","EventEmitter","Stream","StringDecoder","proc","isStream","s","Minipass","isReadable","isWritable","EOF","MAYBE_EMIT_END","EMITTED_END","EMITTING_END","EMITTED_ERROR","CLOSED","READ","FLUSH","FLUSHCHUNK","ENCODING","DECODER","FLOWING","PAUSED","RESUME","BUFFER","PIPES","BUFFERLENGTH","BUFFERPUSH","BUFFERSHIFT","OBJECTMODE","DESTROYED","ERROR","EMITDATA","EMITEND","EMITEND2","ASYNC","ABORT","ABORTED","SIGNAL","DATALISTENERS","DISCARDED","defer","fn","nodefer","isEndish","ev","isArrayBufferLike","b","isArrayBufferView","Pipe","src","dest","opts","_er","PipeProxyErrors","er","isObjectModeOptions","o","isEncodingOptions","args","options","signal","_enc","_om","a","_","chunk","encoding","cb","n","ret","c","noDrain","ended","p","handler","h","data","buf","resolve","reject","stopped","stop","res","onerr","ondata","onend","ondestroy","value","rej","next","wc","realpathSync","rps","defaultFS","lstatSync","readdirCB","readdirSync","readlinkSync","lstat","readdir","readlink","realpath","fsFromOption","fsOption","actualFS","uncDriveRegexp","uncToDrive","rootPath","eitherSep","UNKNOWN","IFIFO","IFCHR","IFDIR","IFBLK","IFREG","IFLNK","IFSOCK","IFMT","IFMT_UNKNOWN","READDIR_CALLED","LSTAT_CALLED","ENOTDIR","ENOENT","ENOREADLINK","ENOREALPATH","ENOCHILD","TYPEMASK","entToType","s","normalizeCache","normalize","c","n","normalizeNocaseCache","normalizeNocase","ResolveCache","LRUCache","ChildrenCache","maxSize","a","setAsCwd","PathBase","#fs","#dev","#mode","#nlink","#uid","#gid","#rdev","#blksize","#ino","#size","#blocks","#atimeMs","#mtimeMs","#ctimeMs","#birthtimeMs","#atime","#mtime","#ctime","#birthtime","#matchName","#depth","#fullpath","#fullpathPosix","#relative","#relativePosix","#type","#children","#linkTarget","#realpath","name","type","root","roots","nocase","children","opts","path","dirParts","#resolveParts","p","part","cached","pathPart","fullpath","pchild","pv","fp","pfpp","fpp","ifmt","target","read","linkTarget","er","#readlinkFail","#readdirSuccess","#markENOENT","#markChildrenENOENT","#markENOREALPATH","#markENOTDIR","#readdirFail","code","#lstatFail","ter","#readdirAddChild","e","#readdirMaybePromoteChild","#readdirAddNewChild","child","#readdirPromoteChild","index","v","#applyStat","st","atime","atimeMs","birthtime","birthtimeMs","blksize","blocks","ctime","ctimeMs","dev","gid","ino","mode","mtime","mtimeMs","nlink","rdev","size","uid","#onReaddirCB","#readdirCBInFlight","#callOnReaddirCB","cbs","cb","allowZalgo","entries","#asyncReaddirInFlight","resolve","res","dirs","walkFilter","rp","oldCwd","changed","PathWin32","win32","compare","PathScurryWin32","PathPosix","_rootPath","PathScurryBase","#resolveCache","#resolvePosixCache","cwd","pathImpl","sep","childrenCacheSize","fs","fileURLToPath","cwdPath","split","prev","len","joinSep","abs","sawFirst","l","paths","r","i","result","entry","withFileTypes","follow","filter","results","walk","dir","next","start","rej","options","Minipass","queue","processing","process","paused","onReaddir","didRealpaths","promises","sync","PathScurryPosix","posix","_dir","PathScurryDarwin","Path","PathScurry","fileURLToPath","isPatternList","pl","isGlobList","gl","Pattern","#patternList","#globList","#index","#platform","#rest","#globString","#isDrive","#isUNC","#isAbsolute","#followGlobstar","patternList","globList","index","platform","p0","p1","p2","p3","prest","g0","g1","g2","g3","grest","p","g","GLOBSTAR","EE","Stream","stringdecoder","proc","SD","EOF","MAYBE_EMIT_END","EMITTED_END","EMITTING_END","EMITTED_ERROR","CLOSED","READ","FLUSH","FLUSHCHUNK","ENCODING","DECODER","FLOWING","PAUSED","RESUME","BUFFER","PIPES","BUFFERLENGTH","BUFFERPUSH","BUFFERSHIFT","OBJECTMODE","DESTROYED","ERROR","EMITDATA","EMITEND","EMITEND2","ASYNC","ABORT","ABORTED","SIGNAL","defer","fn","doIter","ASYNCITERATOR","ITERATOR","isEndish","ev","isArrayBuffer","b","isArrayBufferView","Pipe","src","dest","opts","PipeProxyErrors","er","Minipass","options","enc","chunk","om","a","_","encoding","cb","f","n","ret","noDrain","ended","p","data","extra","buf","c","resolve","reject","stopped","stop","res","onerr","ondata","onend","ondestroy","value","rej","next","s","minipass_default","defaultPlatform","Ignore","ignored","nobrace","nocase","noext","noglobstar","platform","mmopts","ign","mm","Minimatch","i","parsed","globParts","p","Pattern","m","children","absolute","fullpath","fullpaths","relative","relatives","HasWalkedCache","store","target","pattern","fullpath","cached","MatchRecord","absolute","ifDir","n","current","path","SubWalks","subs","p","k","Processor","opts","hasWalkedCache","patterns","processingSet","t","root","rest","changed","c","GLOBSTAR","rp","rrest","tp","parent","entries","results","e","ep","makeIgnore","ignore","opts","Ignore","GlobUtil","#onResume","#ignore","#sep","patterns","path","#ignored","#childrenIgnored","fn","e","ifDir","rpc","needStat","absolute","abs","mark","rel","pre","p","target","cb","Processor","processor","tasks","next","m","t","childrenCached","_","entries","children","GlobWalker","res","rej","GlobStream","minipass_default","defaultPlatform","Glob","pattern","opts","fileURLToPath","p","Scurry","PathScurryWin32","PathScurryDarwin","PathScurryPosix","PathScurry","mmo","mms","Minimatch","matchSet","globParts","set","m","i","Pattern","GlobWalker","GlobStream","hasMagic","pattern","options","p","Minimatch","globStreamSync","pattern","options","Glob","globStream","globSync","glob","globIterateSync","globIterate","streamSync","stream","iterateSync","iterate","sync","mjs_default","hasMagic","escape","unescape","fs","chmodSync","mkdirSync","renameSync","rmdirSync","rmSync","statSync","lstatSync","unlinkSync","rdSync","readdirSync","path","chmod","mode","res","rej","er","d","mkdir","options","made","readdir","data","rename","oldPath","newPath","rm","rmdir","stat","lstat","unlink","promises","parse","resolve","readdir","promises","readdirOrError","path","er","readdirOrErrorSync","readdirSync","ignoreENOENT","p","er","ignoreENOENTSync","fn","lstat","rmdir","unlink","promises","rimrafPosix","path","opt","rimrafPosixDir","er","rimrafPosixSync","rimrafPosixDirSync","lstatSync","ent","entries","readdirOrError","ignoreENOENT","resolve","a","b","parse","readdirOrErrorSync","ignoreENOENTSync","unlinkSync","removedAll","p","rmdirSync","parse","resolve","chmod","promises","fixEPERM","fn","path","er","fer","er2","fixEPERMSync","chmodSync","codes","retryBusy","fn","method","path","opt","backoff","total","mbo","rate","max","retries","er","fer","res","rej","retryBusySync","basename","parse","resolve","tmpdir","parse","resolve","stat","promises","isDirSync","path","statSync","isDir","st","win32DefaultTmp","root","parse","tmp","tmpdir","tmpRoot","driveTmp","resolve","win32DefaultTmpSync","posixDefaultTmp","posixDefaultTmpSync","defaultTmp","platform_default","defaultTmpSync","lstat","rename","unlink","rmdir","chmod","promises","uniqueFilename","path","basename","unlinkFixEPERM","er","er2","unlinkFixEPERMSync","unlinkSync","chmodSync","rimrafMoveRemove","opt","rimrafMoveRemoveDir","ent","defaultTmp","parse","entries","readdirOrError","ignoreENOENT","tmpUnlink","resolve","a","b","tmp","rm","tmpFile","rimrafMoveRemoveSync","rimrafMoveRemoveDirSync","lstatSync","defaultTmpSync","readdirOrErrorSync","ignoreENOENTSync","tmpUnlinkSync","removedAll","p","rmdirSync","rmSync","renameSync","unlink","rmdir","lstat","promises","rimrafWindowsFile","retryBusy","fixEPERM","rimrafWindowsFileSync","retryBusySync","fixEPERMSync","unlinkSync","rimrafWindowsDirRetry","rimrafWindowsDirRetrySync","rmdirSync","rimrafWindowsDirMoveRemoveFallback","path","opt","filter","options","er","rimrafMoveRemove","rimrafWindowsDirMoveRemoveFallbackSync","rimrafMoveRemoveSync","START","CHILD","FINISH","rimrafWindows","rimrafWindowsDir","rimrafWindowsSync","rimrafWindowsDirSync","lstatSync","ent","state","entries","readdirOrError","ignoreENOENT","s","removedAll","resolve","b","parse","readdirOrErrorSync","ignoreENOENTSync","p","rimrafManual","platform_default","rimrafWindows","rimrafPosix","rimrafManualSync","rimrafWindowsSync","rimrafPosixSync","rm","promises","rimrafNative","path","opt","rimrafNativeSync","rmSync","version","versArr","hasNative","useNative","platform_default","opt","useNativeSync","typeOrUndef","val","isRimrafOptions","o","assertRimrafOptions","wrap","fn","path","opt","options","optArg","glob","p","path_arg_default","a","b","wrapSync","optArgSync","globSync","nativeSync","rimrafNativeSync","native","rimrafNative","manualSync","rimrafManualSync","manual","rimrafManual","windowsSync","rimrafWindowsSync","windows","rimrafWindows","posixSync","rimrafPosixSync","posix","rimrafPosix","moveRemoveSync","rimrafMoveRemoveSync","moveRemove","rimrafMoveRemove","rimrafSync","useNativeSync","rimraf","wrap","path","opt","useNative","rimrafNative","rimrafManual","manual","rimrafSync","manualSync","native","nativeSync","posix","posixSync","windows","windowsSync","moveRemove","moveRemoveSync","existsSync","readFileSync","writeFileSync","z","prompts","pathToFileURL","toFileUrl","filePath","currentFileUrl","__dirname","path","registry","Command","project","opts","init","error","logger","build","registryName","cwd","componentsPath","existsSync","answers","prompts","input","isValidUrl","components","readFileSync","registryIndex","writeFileSync","url","z","initDefault","source","destination","err","handleError","buildDefault","REGISTRY_PATH","buildRegister","styles","colorMapping","colors","themes","result","registrySchema","style","targetPath","item","files","file","content","payload","stylesJson","names","types","registryJson","rimraf","colorsTargetPath","colorsData","color","value","BASE_STYLES","BASE_STYLES_WITH_VARIABLES","baseColor","base","mode","values","key","resolvedColor","resolvedBase","scale","template","THEME_STYLES_WITH_VARIABLES","themeCSS","theme","Command","path","fs","getPackageInfo","packageJsonPath","main","packageInfo","getPackageInfo","program","Command","init","add","diff","registry"]}